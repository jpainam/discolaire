model Convocation {
    id          Int      @id @default(autoincrement())
    studentId   String
    student     Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
    termId      String
    term        Term     @relation(fields: [termId], references: [id], onDelete: Cascade)
    date        DateTime
    reason      String
    createdAt   DateTime @default(now())
    createdById String
    comment     String?
}

model TimetableCategory {
    id           String             @id @default(cuid())
    name         String
    schoolId     String
    school       School             @relation(fields: [schoolId], references: [id], onDelete: Cascade)
    schoolYearId String
    schoolYear   SchoolYear         @relation(fields: [schoolYearId], references: [id], onDelete: Cascade)
    createdAt    DateTime           @default(now())
    updatedAt    DateTime           @updatedAt
    lessons      SubjectTimetable[]

    @@unique([name, schoolId, schoolYearId])
}

model SubjectTimetable {
    id         Int                @id @default(autoincrement())
    start      DateTime
    end        DateTime
    subjectId  Int
    schoolId   String
    groupKey   String?
    subject    Subject            @relation(fields: [subjectId], references: [id], onDelete: Cascade)
    categoryId String
    category   TimetableCategory? @relation(fields: [categoryId], references: [id], onDelete: Cascade)

    @@unique([start, end, subjectId])
}

enum AttendanceType {
    PERIODIC
    DAILY
}

model Attendance {
    id          Int            @id @default(autoincrement())
    type        AttendanceType
    data        Json
    studentId   String
    student     Student        @relation(fields: [studentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    termId      String
    term        Term           @relation(fields: [termId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @updatedAt
    createdById String?
    createdBy   User?          @relation("attendanceCreatedBy", fields: [createdById], references: [id], onUpdate: Cascade)
}
