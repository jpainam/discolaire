/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `BorrowedBook` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model BorrowedBook
 *
 */
export type BorrowedBookModel =
  runtime.Types.Result.DefaultSelection<Prisma.$BorrowedBookPayload>;

export type AggregateBorrowedBook = {
  _count: BorrowedBookCountAggregateOutputType | null;
  _avg: BorrowedBookAvgAggregateOutputType | null;
  _sum: BorrowedBookSumAggregateOutputType | null;
  _min: BorrowedBookMinAggregateOutputType | null;
  _max: BorrowedBookMaxAggregateOutputType | null;
};

export type BorrowedBookAvgAggregateOutputType = {
  id: number | null;
  bookId: number | null;
};

export type BorrowedBookSumAggregateOutputType = {
  id: number | null;
  bookId: number | null;
};

export type BorrowedBookMinAggregateOutputType = {
  id: number | null;
  bookId: number | null;
  userId: string | null;
  borrowed: Date | null;
  returned: Date | null;
  expected: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type BorrowedBookMaxAggregateOutputType = {
  id: number | null;
  bookId: number | null;
  userId: string | null;
  borrowed: Date | null;
  returned: Date | null;
  expected: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type BorrowedBookCountAggregateOutputType = {
  id: number;
  bookId: number;
  userId: number;
  borrowed: number;
  returned: number;
  expected: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type BorrowedBookAvgAggregateInputType = {
  id?: true;
  bookId?: true;
};

export type BorrowedBookSumAggregateInputType = {
  id?: true;
  bookId?: true;
};

export type BorrowedBookMinAggregateInputType = {
  id?: true;
  bookId?: true;
  userId?: true;
  borrowed?: true;
  returned?: true;
  expected?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type BorrowedBookMaxAggregateInputType = {
  id?: true;
  bookId?: true;
  userId?: true;
  borrowed?: true;
  returned?: true;
  expected?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type BorrowedBookCountAggregateInputType = {
  id?: true;
  bookId?: true;
  userId?: true;
  borrowed?: true;
  returned?: true;
  expected?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type BorrowedBookAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which BorrowedBook to aggregate.
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of BorrowedBooks to fetch.
   */
  orderBy?:
    | Prisma.BorrowedBookOrderByWithRelationInput
    | Prisma.BorrowedBookOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.BorrowedBookWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` BorrowedBooks from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` BorrowedBooks.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned BorrowedBooks
   **/
  _count?: true | BorrowedBookCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: BorrowedBookAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: BorrowedBookSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: BorrowedBookMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: BorrowedBookMaxAggregateInputType;
};

export type GetBorrowedBookAggregateType<T extends BorrowedBookAggregateArgs> =
  {
    [P in keyof T & keyof AggregateBorrowedBook]: P extends "_count" | "count"
      ? T[P] extends true
        ? number
        : Prisma.GetScalarType<T[P], AggregateBorrowedBook[P]>
      : Prisma.GetScalarType<T[P], AggregateBorrowedBook[P]>;
  };

export type BorrowedBookGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.BorrowedBookWhereInput;
  orderBy?:
    | Prisma.BorrowedBookOrderByWithAggregationInput
    | Prisma.BorrowedBookOrderByWithAggregationInput[];
  by: Prisma.BorrowedBookScalarFieldEnum[] | Prisma.BorrowedBookScalarFieldEnum;
  having?: Prisma.BorrowedBookScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: BorrowedBookCountAggregateInputType | true;
  _avg?: BorrowedBookAvgAggregateInputType;
  _sum?: BorrowedBookSumAggregateInputType;
  _min?: BorrowedBookMinAggregateInputType;
  _max?: BorrowedBookMaxAggregateInputType;
};

export type BorrowedBookGroupByOutputType = {
  id: number;
  bookId: number;
  userId: string;
  borrowed: Date;
  returned: Date | null;
  expected: Date | null;
  createdAt: Date;
  updatedAt: Date;
  _count: BorrowedBookCountAggregateOutputType | null;
  _avg: BorrowedBookAvgAggregateOutputType | null;
  _sum: BorrowedBookSumAggregateOutputType | null;
  _min: BorrowedBookMinAggregateOutputType | null;
  _max: BorrowedBookMaxAggregateOutputType | null;
};

type GetBorrowedBookGroupByPayload<T extends BorrowedBookGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<BorrowedBookGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof BorrowedBookGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], BorrowedBookGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], BorrowedBookGroupByOutputType[P]>;
      }
    >
  >;

export type BorrowedBookWhereInput = {
  AND?: Prisma.BorrowedBookWhereInput | Prisma.BorrowedBookWhereInput[];
  OR?: Prisma.BorrowedBookWhereInput[];
  NOT?: Prisma.BorrowedBookWhereInput | Prisma.BorrowedBookWhereInput[];
  id?: Prisma.IntFilter<"BorrowedBook"> | number;
  bookId?: Prisma.IntFilter<"BorrowedBook"> | number;
  userId?: Prisma.StringFilter<"BorrowedBook"> | string;
  borrowed?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
  returned?:
    | Prisma.DateTimeNullableFilter<"BorrowedBook">
    | Date
    | string
    | null;
  expected?:
    | Prisma.DateTimeNullableFilter<"BorrowedBook">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
  book?: Prisma.XOR<Prisma.BookScalarRelationFilter, Prisma.BookWhereInput>;
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
};

export type BorrowedBookOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  borrowed?: Prisma.SortOrder;
  returned?: Prisma.SortOrderInput | Prisma.SortOrder;
  expected?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  book?: Prisma.BookOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
};

export type BorrowedBookWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.BorrowedBookWhereInput | Prisma.BorrowedBookWhereInput[];
    OR?: Prisma.BorrowedBookWhereInput[];
    NOT?: Prisma.BorrowedBookWhereInput | Prisma.BorrowedBookWhereInput[];
    bookId?: Prisma.IntFilter<"BorrowedBook"> | number;
    userId?: Prisma.StringFilter<"BorrowedBook"> | string;
    borrowed?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
    returned?:
      | Prisma.DateTimeNullableFilter<"BorrowedBook">
      | Date
      | string
      | null;
    expected?:
      | Prisma.DateTimeNullableFilter<"BorrowedBook">
      | Date
      | string
      | null;
    createdAt?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
    book?: Prisma.XOR<Prisma.BookScalarRelationFilter, Prisma.BookWhereInput>;
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  },
  "id"
>;

export type BorrowedBookOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  borrowed?: Prisma.SortOrder;
  returned?: Prisma.SortOrderInput | Prisma.SortOrder;
  expected?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.BorrowedBookCountOrderByAggregateInput;
  _avg?: Prisma.BorrowedBookAvgOrderByAggregateInput;
  _max?: Prisma.BorrowedBookMaxOrderByAggregateInput;
  _min?: Prisma.BorrowedBookMinOrderByAggregateInput;
  _sum?: Prisma.BorrowedBookSumOrderByAggregateInput;
};

export type BorrowedBookScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.BorrowedBookScalarWhereWithAggregatesInput
    | Prisma.BorrowedBookScalarWhereWithAggregatesInput[];
  OR?: Prisma.BorrowedBookScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.BorrowedBookScalarWhereWithAggregatesInput
    | Prisma.BorrowedBookScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"BorrowedBook"> | number;
  bookId?: Prisma.IntWithAggregatesFilter<"BorrowedBook"> | number;
  userId?: Prisma.StringWithAggregatesFilter<"BorrowedBook"> | string;
  borrowed?:
    | Prisma.DateTimeWithAggregatesFilter<"BorrowedBook">
    | Date
    | string;
  returned?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"BorrowedBook">
    | Date
    | string
    | null;
  expected?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"BorrowedBook">
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"BorrowedBook">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"BorrowedBook">
    | Date
    | string;
};

export type BorrowedBookCreateInput = {
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  book: Prisma.BookCreateNestedOneWithoutBorrowedBooksInput;
  user: Prisma.UserCreateNestedOneWithoutBorrowedBooksInput;
};

export type BorrowedBookUncheckedCreateInput = {
  id?: number;
  bookId: number;
  userId: string;
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type BorrowedBookUpdateInput = {
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  book?: Prisma.BookUpdateOneRequiredWithoutBorrowedBooksNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutBorrowedBooksNestedInput;
};

export type BorrowedBookUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  bookId?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookCreateManyInput = {
  id?: number;
  bookId: number;
  userId: string;
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type BorrowedBookUpdateManyMutationInput = {
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  bookId?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookListRelationFilter = {
  every?: Prisma.BorrowedBookWhereInput;
  some?: Prisma.BorrowedBookWhereInput;
  none?: Prisma.BorrowedBookWhereInput;
};

export type BorrowedBookOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type BorrowedBookCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  borrowed?: Prisma.SortOrder;
  returned?: Prisma.SortOrder;
  expected?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type BorrowedBookAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
};

export type BorrowedBookMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  borrowed?: Prisma.SortOrder;
  returned?: Prisma.SortOrder;
  expected?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type BorrowedBookMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  borrowed?: Prisma.SortOrder;
  returned?: Prisma.SortOrder;
  expected?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type BorrowedBookSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  bookId?: Prisma.SortOrder;
};

export type BorrowedBookCreateNestedManyWithoutBookInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutBookInput,
        Prisma.BorrowedBookUncheckedCreateWithoutBookInput
      >
    | Prisma.BorrowedBookCreateWithoutBookInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutBookInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput[];
  createMany?: Prisma.BorrowedBookCreateManyBookInputEnvelope;
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
};

export type BorrowedBookUncheckedCreateNestedManyWithoutBookInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutBookInput,
        Prisma.BorrowedBookUncheckedCreateWithoutBookInput
      >
    | Prisma.BorrowedBookCreateWithoutBookInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutBookInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput[];
  createMany?: Prisma.BorrowedBookCreateManyBookInputEnvelope;
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
};

export type BorrowedBookUpdateManyWithoutBookNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutBookInput,
        Prisma.BorrowedBookUncheckedCreateWithoutBookInput
      >
    | Prisma.BorrowedBookCreateWithoutBookInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutBookInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput[];
  upsert?:
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutBookInput
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutBookInput[];
  createMany?: Prisma.BorrowedBookCreateManyBookInputEnvelope;
  set?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  disconnect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  delete?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  update?:
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutBookInput
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutBookInput[];
  updateMany?:
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutBookInput
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutBookInput[];
  deleteMany?:
    | Prisma.BorrowedBookScalarWhereInput
    | Prisma.BorrowedBookScalarWhereInput[];
};

export type BorrowedBookUncheckedUpdateManyWithoutBookNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutBookInput,
        Prisma.BorrowedBookUncheckedCreateWithoutBookInput
      >
    | Prisma.BorrowedBookCreateWithoutBookInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutBookInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput
    | Prisma.BorrowedBookCreateOrConnectWithoutBookInput[];
  upsert?:
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutBookInput
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutBookInput[];
  createMany?: Prisma.BorrowedBookCreateManyBookInputEnvelope;
  set?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  disconnect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  delete?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  update?:
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutBookInput
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutBookInput[];
  updateMany?:
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutBookInput
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutBookInput[];
  deleteMany?:
    | Prisma.BorrowedBookScalarWhereInput
    | Prisma.BorrowedBookScalarWhereInput[];
};

export type BorrowedBookCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutUserInput,
        Prisma.BorrowedBookUncheckedCreateWithoutUserInput
      >
    | Prisma.BorrowedBookCreateWithoutUserInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.BorrowedBookCreateManyUserInputEnvelope;
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
};

export type BorrowedBookUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutUserInput,
        Prisma.BorrowedBookUncheckedCreateWithoutUserInput
      >
    | Prisma.BorrowedBookCreateWithoutUserInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.BorrowedBookCreateManyUserInputEnvelope;
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
};

export type BorrowedBookUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutUserInput,
        Prisma.BorrowedBookUncheckedCreateWithoutUserInput
      >
    | Prisma.BorrowedBookCreateWithoutUserInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutUserInput
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.BorrowedBookCreateManyUserInputEnvelope;
  set?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  disconnect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  delete?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  update?:
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutUserInput
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutUserInput
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.BorrowedBookScalarWhereInput
    | Prisma.BorrowedBookScalarWhereInput[];
};

export type BorrowedBookUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.BorrowedBookCreateWithoutUserInput,
        Prisma.BorrowedBookUncheckedCreateWithoutUserInput
      >
    | Prisma.BorrowedBookCreateWithoutUserInput[]
    | Prisma.BorrowedBookUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput
    | Prisma.BorrowedBookCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutUserInput
    | Prisma.BorrowedBookUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.BorrowedBookCreateManyUserInputEnvelope;
  set?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  disconnect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  delete?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  connect?:
    | Prisma.BorrowedBookWhereUniqueInput
    | Prisma.BorrowedBookWhereUniqueInput[];
  update?:
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutUserInput
    | Prisma.BorrowedBookUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutUserInput
    | Prisma.BorrowedBookUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.BorrowedBookScalarWhereInput
    | Prisma.BorrowedBookScalarWhereInput[];
};

export type BorrowedBookCreateWithoutBookInput = {
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutBorrowedBooksInput;
};

export type BorrowedBookUncheckedCreateWithoutBookInput = {
  id?: number;
  userId: string;
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type BorrowedBookCreateOrConnectWithoutBookInput = {
  where: Prisma.BorrowedBookWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.BorrowedBookCreateWithoutBookInput,
    Prisma.BorrowedBookUncheckedCreateWithoutBookInput
  >;
};

export type BorrowedBookCreateManyBookInputEnvelope = {
  data:
    | Prisma.BorrowedBookCreateManyBookInput
    | Prisma.BorrowedBookCreateManyBookInput[];
  skipDuplicates?: boolean;
};

export type BorrowedBookUpsertWithWhereUniqueWithoutBookInput = {
  where: Prisma.BorrowedBookWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.BorrowedBookUpdateWithoutBookInput,
    Prisma.BorrowedBookUncheckedUpdateWithoutBookInput
  >;
  create: Prisma.XOR<
    Prisma.BorrowedBookCreateWithoutBookInput,
    Prisma.BorrowedBookUncheckedCreateWithoutBookInput
  >;
};

export type BorrowedBookUpdateWithWhereUniqueWithoutBookInput = {
  where: Prisma.BorrowedBookWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateWithoutBookInput,
    Prisma.BorrowedBookUncheckedUpdateWithoutBookInput
  >;
};

export type BorrowedBookUpdateManyWithWhereWithoutBookInput = {
  where: Prisma.BorrowedBookScalarWhereInput;
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateManyMutationInput,
    Prisma.BorrowedBookUncheckedUpdateManyWithoutBookInput
  >;
};

export type BorrowedBookScalarWhereInput = {
  AND?:
    | Prisma.BorrowedBookScalarWhereInput
    | Prisma.BorrowedBookScalarWhereInput[];
  OR?: Prisma.BorrowedBookScalarWhereInput[];
  NOT?:
    | Prisma.BorrowedBookScalarWhereInput
    | Prisma.BorrowedBookScalarWhereInput[];
  id?: Prisma.IntFilter<"BorrowedBook"> | number;
  bookId?: Prisma.IntFilter<"BorrowedBook"> | number;
  userId?: Prisma.StringFilter<"BorrowedBook"> | string;
  borrowed?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
  returned?:
    | Prisma.DateTimeNullableFilter<"BorrowedBook">
    | Date
    | string
    | null;
  expected?:
    | Prisma.DateTimeNullableFilter<"BorrowedBook">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"BorrowedBook"> | Date | string;
};

export type BorrowedBookCreateWithoutUserInput = {
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  book: Prisma.BookCreateNestedOneWithoutBorrowedBooksInput;
};

export type BorrowedBookUncheckedCreateWithoutUserInput = {
  id?: number;
  bookId: number;
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type BorrowedBookCreateOrConnectWithoutUserInput = {
  where: Prisma.BorrowedBookWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.BorrowedBookCreateWithoutUserInput,
    Prisma.BorrowedBookUncheckedCreateWithoutUserInput
  >;
};

export type BorrowedBookCreateManyUserInputEnvelope = {
  data:
    | Prisma.BorrowedBookCreateManyUserInput
    | Prisma.BorrowedBookCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type BorrowedBookUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.BorrowedBookWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.BorrowedBookUpdateWithoutUserInput,
    Prisma.BorrowedBookUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.BorrowedBookCreateWithoutUserInput,
    Prisma.BorrowedBookUncheckedCreateWithoutUserInput
  >;
};

export type BorrowedBookUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.BorrowedBookWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateWithoutUserInput,
    Prisma.BorrowedBookUncheckedUpdateWithoutUserInput
  >;
};

export type BorrowedBookUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.BorrowedBookScalarWhereInput;
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateManyMutationInput,
    Prisma.BorrowedBookUncheckedUpdateManyWithoutUserInput
  >;
};

export type BorrowedBookCreateManyBookInput = {
  id?: number;
  userId: string;
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type BorrowedBookUpdateWithoutBookInput = {
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutBorrowedBooksNestedInput;
};

export type BorrowedBookUncheckedUpdateWithoutBookInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookUncheckedUpdateManyWithoutBookInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookCreateManyUserInput = {
  id?: number;
  bookId: number;
  borrowed?: Date | string;
  returned?: Date | string | null;
  expected?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type BorrowedBookUpdateWithoutUserInput = {
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  book?: Prisma.BookUpdateOneRequiredWithoutBorrowedBooksNestedInput;
};

export type BorrowedBookUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  bookId?: Prisma.IntFieldUpdateOperationsInput | number;
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  bookId?: Prisma.IntFieldUpdateOperationsInput | number;
  borrowed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  returned?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  expected?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type BorrowedBookSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    bookId?: boolean;
    userId?: boolean;
    borrowed?: boolean;
    returned?: boolean;
    expected?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    book?: boolean | Prisma.BookDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["borrowedBook"]
>;

export type BorrowedBookSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    bookId?: boolean;
    userId?: boolean;
    borrowed?: boolean;
    returned?: boolean;
    expected?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    book?: boolean | Prisma.BookDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["borrowedBook"]
>;

export type BorrowedBookSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    bookId?: boolean;
    userId?: boolean;
    borrowed?: boolean;
    returned?: boolean;
    expected?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    book?: boolean | Prisma.BookDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["borrowedBook"]
>;

export type BorrowedBookSelectScalar = {
  id?: boolean;
  bookId?: boolean;
  userId?: boolean;
  borrowed?: boolean;
  returned?: boolean;
  expected?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type BorrowedBookOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "bookId"
  | "userId"
  | "borrowed"
  | "returned"
  | "expected"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["borrowedBook"]
>;
export type BorrowedBookInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  book?: boolean | Prisma.BookDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type BorrowedBookIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  book?: boolean | Prisma.BookDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type BorrowedBookIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  book?: boolean | Prisma.BookDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $BorrowedBookPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "BorrowedBook";
  objects: {
    book: Prisma.$BookPayload<ExtArgs>;
    user: Prisma.$UserPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      bookId: number;
      userId: string;
      borrowed: Date;
      returned: Date | null;
      expected: Date | null;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["borrowedBook"]
  >;
  composites: {};
};

export type BorrowedBookGetPayload<
  S extends boolean | null | undefined | BorrowedBookDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$BorrowedBookPayload, S>;

export type BorrowedBookCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  BorrowedBookFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: BorrowedBookCountAggregateInputType | true;
};

export interface BorrowedBookDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["BorrowedBook"];
    meta: { name: "BorrowedBook" };
  };
  /**
   * Find zero or one BorrowedBook that matches the filter.
   * @param {BorrowedBookFindUniqueArgs} args - Arguments to find a BorrowedBook
   * @example
   * // Get one BorrowedBook
   * const borrowedBook = await prisma.borrowedBook.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends BorrowedBookFindUniqueArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one BorrowedBook that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {BorrowedBookFindUniqueOrThrowArgs} args - Arguments to find a BorrowedBook
   * @example
   * // Get one BorrowedBook
   * const borrowedBook = await prisma.borrowedBook.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends BorrowedBookFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first BorrowedBook that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookFindFirstArgs} args - Arguments to find a BorrowedBook
   * @example
   * // Get one BorrowedBook
   * const borrowedBook = await prisma.borrowedBook.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends BorrowedBookFindFirstArgs>(
    args?: Prisma.SelectSubset<T, BorrowedBookFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first BorrowedBook that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookFindFirstOrThrowArgs} args - Arguments to find a BorrowedBook
   * @example
   * // Get one BorrowedBook
   * const borrowedBook = await prisma.borrowedBook.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends BorrowedBookFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, BorrowedBookFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more BorrowedBooks that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all BorrowedBooks
   * const borrowedBooks = await prisma.borrowedBook.findMany()
   *
   * // Get first 10 BorrowedBooks
   * const borrowedBooks = await prisma.borrowedBook.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const borrowedBookWithIdOnly = await prisma.borrowedBook.findMany({ select: { id: true } })
   *
   */
  findMany<T extends BorrowedBookFindManyArgs>(
    args?: Prisma.SelectSubset<T, BorrowedBookFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a BorrowedBook.
   * @param {BorrowedBookCreateArgs} args - Arguments to create a BorrowedBook.
   * @example
   * // Create one BorrowedBook
   * const BorrowedBook = await prisma.borrowedBook.create({
   *   data: {
   *     // ... data to create a BorrowedBook
   *   }
   * })
   *
   */
  create<T extends BorrowedBookCreateArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many BorrowedBooks.
   * @param {BorrowedBookCreateManyArgs} args - Arguments to create many BorrowedBooks.
   * @example
   * // Create many BorrowedBooks
   * const borrowedBook = await prisma.borrowedBook.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends BorrowedBookCreateManyArgs>(
    args?: Prisma.SelectSubset<T, BorrowedBookCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many BorrowedBooks and returns the data saved in the database.
   * @param {BorrowedBookCreateManyAndReturnArgs} args - Arguments to create many BorrowedBooks.
   * @example
   * // Create many BorrowedBooks
   * const borrowedBook = await prisma.borrowedBook.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many BorrowedBooks and only return the `id`
   * const borrowedBookWithIdOnly = await prisma.borrowedBook.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends BorrowedBookCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, BorrowedBookCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a BorrowedBook.
   * @param {BorrowedBookDeleteArgs} args - Arguments to delete one BorrowedBook.
   * @example
   * // Delete one BorrowedBook
   * const BorrowedBook = await prisma.borrowedBook.delete({
   *   where: {
   *     // ... filter to delete one BorrowedBook
   *   }
   * })
   *
   */
  delete<T extends BorrowedBookDeleteArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one BorrowedBook.
   * @param {BorrowedBookUpdateArgs} args - Arguments to update one BorrowedBook.
   * @example
   * // Update one BorrowedBook
   * const borrowedBook = await prisma.borrowedBook.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends BorrowedBookUpdateArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more BorrowedBooks.
   * @param {BorrowedBookDeleteManyArgs} args - Arguments to filter BorrowedBooks to delete.
   * @example
   * // Delete a few BorrowedBooks
   * const { count } = await prisma.borrowedBook.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends BorrowedBookDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, BorrowedBookDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more BorrowedBooks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many BorrowedBooks
   * const borrowedBook = await prisma.borrowedBook.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends BorrowedBookUpdateManyArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more BorrowedBooks and returns the data updated in the database.
   * @param {BorrowedBookUpdateManyAndReturnArgs} args - Arguments to update many BorrowedBooks.
   * @example
   * // Update many BorrowedBooks
   * const borrowedBook = await prisma.borrowedBook.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more BorrowedBooks and only return the `id`
   * const borrowedBookWithIdOnly = await prisma.borrowedBook.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends BorrowedBookUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one BorrowedBook.
   * @param {BorrowedBookUpsertArgs} args - Arguments to update or create a BorrowedBook.
   * @example
   * // Update or create a BorrowedBook
   * const borrowedBook = await prisma.borrowedBook.upsert({
   *   create: {
   *     // ... data to create a BorrowedBook
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the BorrowedBook we want to update
   *   }
   * })
   */
  upsert<T extends BorrowedBookUpsertArgs>(
    args: Prisma.SelectSubset<T, BorrowedBookUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__BorrowedBookClient<
    runtime.Types.Result.GetResult<
      Prisma.$BorrowedBookPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of BorrowedBooks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookCountArgs} args - Arguments to filter BorrowedBooks to count.
   * @example
   * // Count the number of BorrowedBooks
   * const count = await prisma.borrowedBook.count({
   *   where: {
   *     // ... the filter for the BorrowedBooks we want to count
   *   }
   * })
   **/
  count<T extends BorrowedBookCountArgs>(
    args?: Prisma.Subset<T, BorrowedBookCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            BorrowedBookCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a BorrowedBook.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends BorrowedBookAggregateArgs>(
    args: Prisma.Subset<T, BorrowedBookAggregateArgs>,
  ): Prisma.PrismaPromise<GetBorrowedBookAggregateType<T>>;

  /**
   * Group by BorrowedBook.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BorrowedBookGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends BorrowedBookGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: BorrowedBookGroupByArgs["orderBy"] }
      : { orderBy?: BorrowedBookGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, BorrowedBookGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetBorrowedBookGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the BorrowedBook model
   */
  readonly fields: BorrowedBookFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for BorrowedBook.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__BorrowedBookClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  book<T extends Prisma.BookDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.BookDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__BookClient<
    | runtime.Types.Result.GetResult<
        Prisma.$BookPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the BorrowedBook model
 */
export interface BorrowedBookFieldRefs {
  readonly id: Prisma.FieldRef<"BorrowedBook", "Int">;
  readonly bookId: Prisma.FieldRef<"BorrowedBook", "Int">;
  readonly userId: Prisma.FieldRef<"BorrowedBook", "String">;
  readonly borrowed: Prisma.FieldRef<"BorrowedBook", "DateTime">;
  readonly returned: Prisma.FieldRef<"BorrowedBook", "DateTime">;
  readonly expected: Prisma.FieldRef<"BorrowedBook", "DateTime">;
  readonly createdAt: Prisma.FieldRef<"BorrowedBook", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"BorrowedBook", "DateTime">;
}

// Custom InputTypes
/**
 * BorrowedBook findUnique
 */
export type BorrowedBookFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * Filter, which BorrowedBook to fetch.
   */
  where: Prisma.BorrowedBookWhereUniqueInput;
};

/**
 * BorrowedBook findUniqueOrThrow
 */
export type BorrowedBookFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * Filter, which BorrowedBook to fetch.
   */
  where: Prisma.BorrowedBookWhereUniqueInput;
};

/**
 * BorrowedBook findFirst
 */
export type BorrowedBookFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * Filter, which BorrowedBook to fetch.
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of BorrowedBooks to fetch.
   */
  orderBy?:
    | Prisma.BorrowedBookOrderByWithRelationInput
    | Prisma.BorrowedBookOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for BorrowedBooks.
   */
  cursor?: Prisma.BorrowedBookWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` BorrowedBooks from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` BorrowedBooks.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of BorrowedBooks.
   */
  distinct?:
    | Prisma.BorrowedBookScalarFieldEnum
    | Prisma.BorrowedBookScalarFieldEnum[];
};

/**
 * BorrowedBook findFirstOrThrow
 */
export type BorrowedBookFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * Filter, which BorrowedBook to fetch.
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of BorrowedBooks to fetch.
   */
  orderBy?:
    | Prisma.BorrowedBookOrderByWithRelationInput
    | Prisma.BorrowedBookOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for BorrowedBooks.
   */
  cursor?: Prisma.BorrowedBookWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` BorrowedBooks from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` BorrowedBooks.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of BorrowedBooks.
   */
  distinct?:
    | Prisma.BorrowedBookScalarFieldEnum
    | Prisma.BorrowedBookScalarFieldEnum[];
};

/**
 * BorrowedBook findMany
 */
export type BorrowedBookFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * Filter, which BorrowedBooks to fetch.
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of BorrowedBooks to fetch.
   */
  orderBy?:
    | Prisma.BorrowedBookOrderByWithRelationInput
    | Prisma.BorrowedBookOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing BorrowedBooks.
   */
  cursor?: Prisma.BorrowedBookWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` BorrowedBooks from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` BorrowedBooks.
   */
  skip?: number;
  distinct?:
    | Prisma.BorrowedBookScalarFieldEnum
    | Prisma.BorrowedBookScalarFieldEnum[];
};

/**
 * BorrowedBook create
 */
export type BorrowedBookCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * The data needed to create a BorrowedBook.
   */
  data: Prisma.XOR<
    Prisma.BorrowedBookCreateInput,
    Prisma.BorrowedBookUncheckedCreateInput
  >;
};

/**
 * BorrowedBook createMany
 */
export type BorrowedBookCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many BorrowedBooks.
   */
  data:
    | Prisma.BorrowedBookCreateManyInput
    | Prisma.BorrowedBookCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * BorrowedBook createManyAndReturn
 */
export type BorrowedBookCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * The data used to create many BorrowedBooks.
   */
  data:
    | Prisma.BorrowedBookCreateManyInput
    | Prisma.BorrowedBookCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * BorrowedBook update
 */
export type BorrowedBookUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * The data needed to update a BorrowedBook.
   */
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateInput,
    Prisma.BorrowedBookUncheckedUpdateInput
  >;
  /**
   * Choose, which BorrowedBook to update.
   */
  where: Prisma.BorrowedBookWhereUniqueInput;
};

/**
 * BorrowedBook updateMany
 */
export type BorrowedBookUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update BorrowedBooks.
   */
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateManyMutationInput,
    Prisma.BorrowedBookUncheckedUpdateManyInput
  >;
  /**
   * Filter which BorrowedBooks to update
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * Limit how many BorrowedBooks to update.
   */
  limit?: number;
};

/**
 * BorrowedBook updateManyAndReturn
 */
export type BorrowedBookUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * The data used to update BorrowedBooks.
   */
  data: Prisma.XOR<
    Prisma.BorrowedBookUpdateManyMutationInput,
    Prisma.BorrowedBookUncheckedUpdateManyInput
  >;
  /**
   * Filter which BorrowedBooks to update
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * Limit how many BorrowedBooks to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * BorrowedBook upsert
 */
export type BorrowedBookUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * The filter to search for the BorrowedBook to update in case it exists.
   */
  where: Prisma.BorrowedBookWhereUniqueInput;
  /**
   * In case the BorrowedBook found by the `where` argument doesn't exist, create a new BorrowedBook with this data.
   */
  create: Prisma.XOR<
    Prisma.BorrowedBookCreateInput,
    Prisma.BorrowedBookUncheckedCreateInput
  >;
  /**
   * In case the BorrowedBook was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.BorrowedBookUpdateInput,
    Prisma.BorrowedBookUncheckedUpdateInput
  >;
};

/**
 * BorrowedBook delete
 */
export type BorrowedBookDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  /**
   * Filter which BorrowedBook to delete.
   */
  where: Prisma.BorrowedBookWhereUniqueInput;
};

/**
 * BorrowedBook deleteMany
 */
export type BorrowedBookDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which BorrowedBooks to delete
   */
  where?: Prisma.BorrowedBookWhereInput;
  /**
   * Limit how many BorrowedBooks to delete.
   */
  limit?: number;
};

/**
 * BorrowedBook without action
 */
export type BorrowedBookDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
};
