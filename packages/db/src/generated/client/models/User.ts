/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model User
 *
 */
export type UserModel =
  runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>;

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null;
  _min: UserMinAggregateOutputType | null;
  _max: UserMaxAggregateOutputType | null;
};

export type UserMinAggregateOutputType = {
  id: string | null;
  name: string | null;
  email: string | null;
  emailVerified: boolean | null;
  image: string | null;
  username: string | null;
  displayUsername: string | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: Date | null;
  avatar: string | null;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  profile: string | null;
  schoolId: string | null;
};

export type UserMaxAggregateOutputType = {
  id: string | null;
  name: string | null;
  email: string | null;
  emailVerified: boolean | null;
  image: string | null;
  username: string | null;
  displayUsername: string | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: Date | null;
  avatar: string | null;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  profile: string | null;
  schoolId: string | null;
};

export type UserCountAggregateOutputType = {
  id: number;
  name: number;
  email: number;
  emailVerified: number;
  image: number;
  username: number;
  displayUsername: number;
  role: number;
  banned: number;
  banReason: number;
  banExpires: number;
  avatar: number;
  isActive: number;
  createdAt: number;
  updatedAt: number;
  profile: number;
  permissions: number;
  schoolId: number;
  _all: number;
};

export type UserMinAggregateInputType = {
  id?: true;
  name?: true;
  email?: true;
  emailVerified?: true;
  image?: true;
  username?: true;
  displayUsername?: true;
  role?: true;
  banned?: true;
  banReason?: true;
  banExpires?: true;
  avatar?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  profile?: true;
  schoolId?: true;
};

export type UserMaxAggregateInputType = {
  id?: true;
  name?: true;
  email?: true;
  emailVerified?: true;
  image?: true;
  username?: true;
  displayUsername?: true;
  role?: true;
  banned?: true;
  banReason?: true;
  banExpires?: true;
  avatar?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  profile?: true;
  schoolId?: true;
};

export type UserCountAggregateInputType = {
  id?: true;
  name?: true;
  email?: true;
  emailVerified?: true;
  image?: true;
  username?: true;
  displayUsername?: true;
  role?: true;
  banned?: true;
  banReason?: true;
  banExpires?: true;
  avatar?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  profile?: true;
  permissions?: true;
  schoolId?: true;
  _all?: true;
};

export type UserAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Users
   **/
  _count?: true | UserCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: UserMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: UserMaxAggregateInputType;
};

export type GetUserAggregateType<T extends UserAggregateArgs> = {
  [P in keyof T & keyof AggregateUser]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>;
};

export type UserGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserWhereInput;
  orderBy?:
    | Prisma.UserOrderByWithAggregationInput
    | Prisma.UserOrderByWithAggregationInput[];
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum;
  having?: Prisma.UserScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: UserCountAggregateInputType | true;
  _min?: UserMinAggregateInputType;
  _max?: UserMaxAggregateInputType;
};

export type UserGroupByOutputType = {
  id: string;
  name: string;
  email: string;
  emailVerified: boolean;
  image: string | null;
  username: string;
  displayUsername: string | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: Date | null;
  avatar: string | null;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;
  profile: string;
  permissions: runtime.JsonValue | null;
  schoolId: string;
  _count: UserCountAggregateOutputType | null;
  _min: UserMinAggregateOutputType | null;
  _max: UserMaxAggregateOutputType | null;
};

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof UserGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>;
    }
  >
>;

export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
  OR?: Prisma.UserWhereInput[];
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
  id?: Prisma.StringFilter<"User"> | string;
  name?: Prisma.StringFilter<"User"> | string;
  email?: Prisma.StringFilter<"User"> | string;
  emailVerified?: Prisma.BoolFilter<"User"> | boolean;
  image?: Prisma.StringNullableFilter<"User"> | string | null;
  username?: Prisma.StringFilter<"User"> | string;
  displayUsername?: Prisma.StringNullableFilter<"User"> | string | null;
  role?: Prisma.StringNullableFilter<"User"> | string | null;
  banned?: Prisma.BoolNullableFilter<"User"> | boolean | null;
  banReason?: Prisma.StringNullableFilter<"User"> | string | null;
  banExpires?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null;
  avatar?: Prisma.StringNullableFilter<"User"> | string | null;
  isActive?: Prisma.BoolFilter<"User"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  profile?: Prisma.StringFilter<"User"> | string;
  permissions?: Prisma.JsonNullableFilter<"User">;
  schoolId?: Prisma.StringFilter<"User"> | string;
  sessions?: Prisma.SessionListRelationFilter;
  accounts?: Prisma.AccountListRelationFilter;
  apikeys?: Prisma.ApikeyListRelationFilter;
  contacts?: Prisma.ContactListRelationFilter;
  photos?: Prisma.PhotoListRelationFilter;
  reportQueues?: Prisma.ReportQueueListRelationFilter;
  staffs?: Prisma.StaffListRelationFilter;
  students?: Prisma.StudentListRelationFilter;
  tokens?: Prisma.TokenListRelationFilter;
  roles?: Prisma.UserRoleListRelationFilter;
  assignments?: Prisma.AssignmentListRelationFilter;
  reportCards?: Prisma.ReportCardListRelationFilter;
  announcements?: Prisma.AnnouncementListRelationFilter;
  recipients?: Prisma.RecipientListRelationFilter;
  policies?: Prisma.UserPolicyListRelationFilter;
  gradeSheets?: Prisma.GradeSheetListRelationFilter;
  religion?: Prisma.ReligionListRelationFilter;
  clubs?: Prisma.ClubListRelationFilter;
  clubs2?: Prisma.ClubListRelationFilter;
  school?: Prisma.XOR<
    Prisma.SchoolScalarRelationFilter,
    Prisma.SchoolWhereInput
  >;
  documents?: Prisma.DocumentListRelationFilter;
  documentCreatedBy?: Prisma.DocumentListRelationFilter;
  teachingSessions?: Prisma.TeachingSessionListRelationFilter;
  borrowedBooks?: Prisma.BorrowedBookListRelationFilter;
  healthVisits?: Prisma.HealthVisitListRelationFilter;
  logActivities?: Prisma.LogActivityListRelationFilter;
  notificationPreferences?: Prisma.NotificationPreferenceListRelationFilter;
  sentEmails?: Prisma.EmailListRelationFilter;
  receivedEmails?: Prisma.EmailRecipientListRelationFilter;
  subscriptions?: Prisma.SubscriptionListRelationFilter;
  createdSubscriptions?: Prisma.SubscriptionListRelationFilter;
  accessedCommunicationChannel?: Prisma.CommunicationChannelListRelationFilter;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageListRelationFilter;
  stockMovements?: Prisma.InventoryStockMovementListRelationFilter;
  consumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
  notifications?: Prisma.UserNotificationListRelationFilter;
  enrollmentCreatedBy?: Prisma.EnrollmentListRelationFilter;
  classroomCreatedBy?: Prisma.ClassroomListRelationFilter;
  transactionCreatedBy?: Prisma.TransactionListRelationFilter;
  transactionReceivedBy?: Prisma.TransactionListRelationFilter;
  transactionPrintedBy?: Prisma.TransactionListRelationFilter;
  transactionDeletedBy?: Prisma.TransactionListRelationFilter;
  transactionUpdatedBy?: Prisma.TransactionListRelationFilter;
  chats?: Prisma.AiChatListRelationFilter;
  aiDocuments?: Prisma.AiDocumentListRelationFilter;
  aiSuggestions?: Prisma.AiSuggestionListRelationFilter;
};

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
  image?: Prisma.SortOrderInput | Prisma.SortOrder;
  username?: Prisma.SortOrder;
  displayUsername?: Prisma.SortOrderInput | Prisma.SortOrder;
  role?: Prisma.SortOrderInput | Prisma.SortOrder;
  banned?: Prisma.SortOrderInput | Prisma.SortOrder;
  banReason?: Prisma.SortOrderInput | Prisma.SortOrder;
  banExpires?: Prisma.SortOrderInput | Prisma.SortOrder;
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  profile?: Prisma.SortOrder;
  permissions?: Prisma.SortOrderInput | Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  sessions?: Prisma.SessionOrderByRelationAggregateInput;
  accounts?: Prisma.AccountOrderByRelationAggregateInput;
  apikeys?: Prisma.ApikeyOrderByRelationAggregateInput;
  contacts?: Prisma.ContactOrderByRelationAggregateInput;
  photos?: Prisma.PhotoOrderByRelationAggregateInput;
  reportQueues?: Prisma.ReportQueueOrderByRelationAggregateInput;
  staffs?: Prisma.StaffOrderByRelationAggregateInput;
  students?: Prisma.StudentOrderByRelationAggregateInput;
  tokens?: Prisma.TokenOrderByRelationAggregateInput;
  roles?: Prisma.UserRoleOrderByRelationAggregateInput;
  assignments?: Prisma.AssignmentOrderByRelationAggregateInput;
  reportCards?: Prisma.ReportCardOrderByRelationAggregateInput;
  announcements?: Prisma.AnnouncementOrderByRelationAggregateInput;
  recipients?: Prisma.RecipientOrderByRelationAggregateInput;
  policies?: Prisma.UserPolicyOrderByRelationAggregateInput;
  gradeSheets?: Prisma.GradeSheetOrderByRelationAggregateInput;
  religion?: Prisma.ReligionOrderByRelationAggregateInput;
  clubs?: Prisma.ClubOrderByRelationAggregateInput;
  clubs2?: Prisma.ClubOrderByRelationAggregateInput;
  school?: Prisma.SchoolOrderByWithRelationInput;
  documents?: Prisma.DocumentOrderByRelationAggregateInput;
  documentCreatedBy?: Prisma.DocumentOrderByRelationAggregateInput;
  teachingSessions?: Prisma.TeachingSessionOrderByRelationAggregateInput;
  borrowedBooks?: Prisma.BorrowedBookOrderByRelationAggregateInput;
  healthVisits?: Prisma.HealthVisitOrderByRelationAggregateInput;
  logActivities?: Prisma.LogActivityOrderByRelationAggregateInput;
  notificationPreferences?: Prisma.NotificationPreferenceOrderByRelationAggregateInput;
  sentEmails?: Prisma.EmailOrderByRelationAggregateInput;
  receivedEmails?: Prisma.EmailRecipientOrderByRelationAggregateInput;
  subscriptions?: Prisma.SubscriptionOrderByRelationAggregateInput;
  createdSubscriptions?: Prisma.SubscriptionOrderByRelationAggregateInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelOrderByRelationAggregateInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageOrderByRelationAggregateInput;
  stockMovements?: Prisma.InventoryStockMovementOrderByRelationAggregateInput;
  consumableUsages?: Prisma.InventoryConsumableUsageOrderByRelationAggregateInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageOrderByRelationAggregateInput;
  notifications?: Prisma.UserNotificationOrderByRelationAggregateInput;
  enrollmentCreatedBy?: Prisma.EnrollmentOrderByRelationAggregateInput;
  classroomCreatedBy?: Prisma.ClassroomOrderByRelationAggregateInput;
  transactionCreatedBy?: Prisma.TransactionOrderByRelationAggregateInput;
  transactionReceivedBy?: Prisma.TransactionOrderByRelationAggregateInput;
  transactionPrintedBy?: Prisma.TransactionOrderByRelationAggregateInput;
  transactionDeletedBy?: Prisma.TransactionOrderByRelationAggregateInput;
  transactionUpdatedBy?: Prisma.TransactionOrderByRelationAggregateInput;
  chats?: Prisma.AiChatOrderByRelationAggregateInput;
  aiDocuments?: Prisma.AiDocumentOrderByRelationAggregateInput;
  aiSuggestions?: Prisma.AiSuggestionOrderByRelationAggregateInput;
};

export type UserWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    email?: string;
    username?: string;
    AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
    OR?: Prisma.UserWhereInput[];
    NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
    name?: Prisma.StringFilter<"User"> | string;
    emailVerified?: Prisma.BoolFilter<"User"> | boolean;
    image?: Prisma.StringNullableFilter<"User"> | string | null;
    displayUsername?: Prisma.StringNullableFilter<"User"> | string | null;
    role?: Prisma.StringNullableFilter<"User"> | string | null;
    banned?: Prisma.BoolNullableFilter<"User"> | boolean | null;
    banReason?: Prisma.StringNullableFilter<"User"> | string | null;
    banExpires?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null;
    avatar?: Prisma.StringNullableFilter<"User"> | string | null;
    isActive?: Prisma.BoolFilter<"User"> | boolean;
    createdAt?: Prisma.DateTimeFilter<"User"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string;
    profile?: Prisma.StringFilter<"User"> | string;
    permissions?: Prisma.JsonNullableFilter<"User">;
    schoolId?: Prisma.StringFilter<"User"> | string;
    sessions?: Prisma.SessionListRelationFilter;
    accounts?: Prisma.AccountListRelationFilter;
    apikeys?: Prisma.ApikeyListRelationFilter;
    contacts?: Prisma.ContactListRelationFilter;
    photos?: Prisma.PhotoListRelationFilter;
    reportQueues?: Prisma.ReportQueueListRelationFilter;
    staffs?: Prisma.StaffListRelationFilter;
    students?: Prisma.StudentListRelationFilter;
    tokens?: Prisma.TokenListRelationFilter;
    roles?: Prisma.UserRoleListRelationFilter;
    assignments?: Prisma.AssignmentListRelationFilter;
    reportCards?: Prisma.ReportCardListRelationFilter;
    announcements?: Prisma.AnnouncementListRelationFilter;
    recipients?: Prisma.RecipientListRelationFilter;
    policies?: Prisma.UserPolicyListRelationFilter;
    gradeSheets?: Prisma.GradeSheetListRelationFilter;
    religion?: Prisma.ReligionListRelationFilter;
    clubs?: Prisma.ClubListRelationFilter;
    clubs2?: Prisma.ClubListRelationFilter;
    school?: Prisma.XOR<
      Prisma.SchoolScalarRelationFilter,
      Prisma.SchoolWhereInput
    >;
    documents?: Prisma.DocumentListRelationFilter;
    documentCreatedBy?: Prisma.DocumentListRelationFilter;
    teachingSessions?: Prisma.TeachingSessionListRelationFilter;
    borrowedBooks?: Prisma.BorrowedBookListRelationFilter;
    healthVisits?: Prisma.HealthVisitListRelationFilter;
    logActivities?: Prisma.LogActivityListRelationFilter;
    notificationPreferences?: Prisma.NotificationPreferenceListRelationFilter;
    sentEmails?: Prisma.EmailListRelationFilter;
    receivedEmails?: Prisma.EmailRecipientListRelationFilter;
    subscriptions?: Prisma.SubscriptionListRelationFilter;
    createdSubscriptions?: Prisma.SubscriptionListRelationFilter;
    accessedCommunicationChannel?: Prisma.CommunicationChannelListRelationFilter;
    assetAssignmentUsages?: Prisma.InventoryAssetUsageListRelationFilter;
    stockMovements?: Prisma.InventoryStockMovementListRelationFilter;
    consumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
    createdConsumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
    notifications?: Prisma.UserNotificationListRelationFilter;
    enrollmentCreatedBy?: Prisma.EnrollmentListRelationFilter;
    classroomCreatedBy?: Prisma.ClassroomListRelationFilter;
    transactionCreatedBy?: Prisma.TransactionListRelationFilter;
    transactionReceivedBy?: Prisma.TransactionListRelationFilter;
    transactionPrintedBy?: Prisma.TransactionListRelationFilter;
    transactionDeletedBy?: Prisma.TransactionListRelationFilter;
    transactionUpdatedBy?: Prisma.TransactionListRelationFilter;
    chats?: Prisma.AiChatListRelationFilter;
    aiDocuments?: Prisma.AiDocumentListRelationFilter;
    aiSuggestions?: Prisma.AiSuggestionListRelationFilter;
  },
  "id" | "email" | "username"
>;

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
  image?: Prisma.SortOrderInput | Prisma.SortOrder;
  username?: Prisma.SortOrder;
  displayUsername?: Prisma.SortOrderInput | Prisma.SortOrder;
  role?: Prisma.SortOrderInput | Prisma.SortOrder;
  banned?: Prisma.SortOrderInput | Prisma.SortOrder;
  banReason?: Prisma.SortOrderInput | Prisma.SortOrder;
  banExpires?: Prisma.SortOrderInput | Prisma.SortOrder;
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  profile?: Prisma.SortOrder;
  permissions?: Prisma.SortOrderInput | Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  _count?: Prisma.UserCountOrderByAggregateInput;
  _max?: Prisma.UserMaxOrderByAggregateInput;
  _min?: Prisma.UserMinOrderByAggregateInput;
};

export type UserScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.UserScalarWhereWithAggregatesInput
    | Prisma.UserScalarWhereWithAggregatesInput[];
  OR?: Prisma.UserScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.UserScalarWhereWithAggregatesInput
    | Prisma.UserScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"User"> | string;
  name?: Prisma.StringWithAggregatesFilter<"User"> | string;
  email?: Prisma.StringWithAggregatesFilter<"User"> | string;
  emailVerified?: Prisma.BoolWithAggregatesFilter<"User"> | boolean;
  image?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  username?: Prisma.StringWithAggregatesFilter<"User"> | string;
  displayUsername?:
    | Prisma.StringNullableWithAggregatesFilter<"User">
    | string
    | null;
  role?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  banned?: Prisma.BoolNullableWithAggregatesFilter<"User"> | boolean | null;
  banReason?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  banExpires?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"User">
    | Date
    | string
    | null;
  avatar?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null;
  isActive?: Prisma.BoolWithAggregatesFilter<"User"> | boolean;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string;
  profile?: Prisma.StringWithAggregatesFilter<"User"> | string;
  permissions?: Prisma.JsonNullableWithAggregatesFilter<"User">;
  schoolId?: Prisma.StringWithAggregatesFilter<"User"> | string;
};

export type UserCreateInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateManyInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
};

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
};

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput;
  isNot?: Prisma.UserWhereInput;
};

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null;
  isNot?: Prisma.UserWhereInput | null;
};

export type UserListRelationFilter = {
  every?: Prisma.UserWhereInput;
  some?: Prisma.UserWhereInput;
  none?: Prisma.UserWhereInput;
};

export type UserOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
  image?: Prisma.SortOrder;
  username?: Prisma.SortOrder;
  displayUsername?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  banned?: Prisma.SortOrder;
  banReason?: Prisma.SortOrder;
  banExpires?: Prisma.SortOrder;
  avatar?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  profile?: Prisma.SortOrder;
  permissions?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
  image?: Prisma.SortOrder;
  username?: Prisma.SortOrder;
  displayUsername?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  banned?: Prisma.SortOrder;
  banReason?: Prisma.SortOrder;
  banExpires?: Prisma.SortOrder;
  avatar?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  profile?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
  image?: Prisma.SortOrder;
  username?: Prisma.SortOrder;
  displayUsername?: Prisma.SortOrder;
  role?: Prisma.SortOrder;
  banned?: Prisma.SortOrder;
  banReason?: Prisma.SortOrder;
  banExpires?: Prisma.SortOrder;
  avatar?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  profile?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type UserCreateNestedOneWithoutChatsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutChatsInput,
    Prisma.UserUncheckedCreateWithoutChatsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutChatsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutChatsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutChatsInput,
    Prisma.UserUncheckedCreateWithoutChatsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutChatsInput;
  upsert?: Prisma.UserUpsertWithoutChatsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutChatsInput,
      Prisma.UserUpdateWithoutChatsInput
    >,
    Prisma.UserUncheckedUpdateWithoutChatsInput
  >;
};

export type UserCreateNestedOneWithoutAiDocumentsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAiDocumentsInput,
    Prisma.UserUncheckedCreateWithoutAiDocumentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAiDocumentsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAiDocumentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAiDocumentsInput,
    Prisma.UserUncheckedCreateWithoutAiDocumentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAiDocumentsInput;
  upsert?: Prisma.UserUpsertWithoutAiDocumentsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAiDocumentsInput,
      Prisma.UserUpdateWithoutAiDocumentsInput
    >,
    Prisma.UserUncheckedUpdateWithoutAiDocumentsInput
  >;
};

export type UserCreateNestedOneWithoutAiSuggestionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAiSuggestionsInput,
    Prisma.UserUncheckedCreateWithoutAiSuggestionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAiSuggestionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAiSuggestionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAiSuggestionsInput,
    Prisma.UserUncheckedCreateWithoutAiSuggestionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAiSuggestionsInput;
  upsert?: Prisma.UserUpsertWithoutAiSuggestionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAiSuggestionsInput,
      Prisma.UserUpdateWithoutAiSuggestionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutAiSuggestionsInput
  >;
};

export type UserCreateNestedOneWithoutAssetAssignmentUsagesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAssetAssignmentUsagesInput,
    Prisma.UserUncheckedCreateWithoutAssetAssignmentUsagesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAssetAssignmentUsagesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAssetAssignmentUsagesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAssetAssignmentUsagesInput,
    Prisma.UserUncheckedCreateWithoutAssetAssignmentUsagesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAssetAssignmentUsagesInput;
  upsert?: Prisma.UserUpsertWithoutAssetAssignmentUsagesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAssetAssignmentUsagesInput,
      Prisma.UserUpdateWithoutAssetAssignmentUsagesInput
    >,
    Prisma.UserUncheckedUpdateWithoutAssetAssignmentUsagesInput
  >;
};

export type UserCreateNestedOneWithoutConsumableUsagesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutConsumableUsagesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutCreatedConsumableUsagesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutCreatedConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedConsumableUsagesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutConsumableUsagesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutConsumableUsagesInput;
  upsert?: Prisma.UserUpsertWithoutConsumableUsagesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutConsumableUsagesInput,
      Prisma.UserUpdateWithoutConsumableUsagesInput
    >,
    Prisma.UserUncheckedUpdateWithoutConsumableUsagesInput
  >;
};

export type UserUpdateOneRequiredWithoutCreatedConsumableUsagesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutCreatedConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedConsumableUsagesInput;
  upsert?: Prisma.UserUpsertWithoutCreatedConsumableUsagesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutCreatedConsumableUsagesInput,
      Prisma.UserUpdateWithoutCreatedConsumableUsagesInput
    >,
    Prisma.UserUncheckedUpdateWithoutCreatedConsumableUsagesInput
  >;
};

export type UserCreateNestedOneWithoutStockMovementsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutStockMovementsInput,
    Prisma.UserUncheckedCreateWithoutStockMovementsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutStockMovementsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutStockMovementsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutStockMovementsInput,
    Prisma.UserUncheckedCreateWithoutStockMovementsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutStockMovementsInput;
  upsert?: Prisma.UserUpsertWithoutStockMovementsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutStockMovementsInput,
      Prisma.UserUpdateWithoutStockMovementsInput
    >,
    Prisma.UserUncheckedUpdateWithoutStockMovementsInput
  >;
};

export type UserCreateNestedOneWithoutBorrowedBooksInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutBorrowedBooksInput,
    Prisma.UserUncheckedCreateWithoutBorrowedBooksInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBorrowedBooksInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutBorrowedBooksNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutBorrowedBooksInput,
    Prisma.UserUncheckedCreateWithoutBorrowedBooksInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutBorrowedBooksInput;
  upsert?: Prisma.UserUpsertWithoutBorrowedBooksInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutBorrowedBooksInput,
      Prisma.UserUpdateWithoutBorrowedBooksInput
    >,
    Prisma.UserUncheckedUpdateWithoutBorrowedBooksInput
  >;
};

export type UserCreateNestedOneWithoutSentEmailsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSentEmailsInput,
    Prisma.UserUncheckedCreateWithoutSentEmailsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSentEmailsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutSentEmailsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSentEmailsInput,
    Prisma.UserUncheckedCreateWithoutSentEmailsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSentEmailsInput;
  upsert?: Prisma.UserUpsertWithoutSentEmailsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutSentEmailsInput,
      Prisma.UserUpdateWithoutSentEmailsInput
    >,
    Prisma.UserUncheckedUpdateWithoutSentEmailsInput
  >;
};

export type UserCreateNestedOneWithoutReceivedEmailsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReceivedEmailsInput,
    Prisma.UserUncheckedCreateWithoutReceivedEmailsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReceivedEmailsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutReceivedEmailsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReceivedEmailsInput,
    Prisma.UserUncheckedCreateWithoutReceivedEmailsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReceivedEmailsInput;
  upsert?: Prisma.UserUpsertWithoutReceivedEmailsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutReceivedEmailsInput,
      Prisma.UserUpdateWithoutReceivedEmailsInput
    >,
    Prisma.UserUncheckedUpdateWithoutReceivedEmailsInput
  >;
};

export type UserCreateNestedOneWithoutAccessedCommunicationChannelInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccessedCommunicationChannelInput,
    Prisma.UserUncheckedCreateWithoutAccessedCommunicationChannelInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccessedCommunicationChannelInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutAccessedCommunicationChannelNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccessedCommunicationChannelInput,
    Prisma.UserUncheckedCreateWithoutAccessedCommunicationChannelInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccessedCommunicationChannelInput;
  upsert?: Prisma.UserUpsertWithoutAccessedCommunicationChannelInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAccessedCommunicationChannelInput,
      Prisma.UserUpdateWithoutAccessedCommunicationChannelInput
    >,
    Prisma.UserUncheckedUpdateWithoutAccessedCommunicationChannelInput
  >;
};

export type UserCreateNestedOneWithoutRecipientsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutRecipientsInput,
    Prisma.UserUncheckedCreateWithoutRecipientsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRecipientsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutRecipientsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutRecipientsInput,
    Prisma.UserUncheckedCreateWithoutRecipientsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRecipientsInput;
  upsert?: Prisma.UserUpsertWithoutRecipientsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutRecipientsInput,
      Prisma.UserUpdateWithoutRecipientsInput
    >,
    Prisma.UserUncheckedUpdateWithoutRecipientsInput
  >;
};

export type UserCreateNestedOneWithoutAnnouncementsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAnnouncementsInput,
    Prisma.UserUncheckedCreateWithoutAnnouncementsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAnnouncementsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAnnouncementsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAnnouncementsInput,
    Prisma.UserUncheckedCreateWithoutAnnouncementsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAnnouncementsInput;
  upsert?: Prisma.UserUpsertWithoutAnnouncementsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAnnouncementsInput,
      Prisma.UserUpdateWithoutAnnouncementsInput
    >,
    Prisma.UserUncheckedUpdateWithoutAnnouncementsInput
  >;
};

export type UserCreateNestedOneWithoutReportCardsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReportCardsInput,
    Prisma.UserUncheckedCreateWithoutReportCardsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportCardsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutReportCardsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReportCardsInput,
    Prisma.UserUncheckedCreateWithoutReportCardsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportCardsInput;
  upsert?: Prisma.UserUpsertWithoutReportCardsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutReportCardsInput,
      Prisma.UserUpdateWithoutReportCardsInput
    >,
    Prisma.UserUncheckedUpdateWithoutReportCardsInput
  >;
};

export type UserCreateNestedOneWithoutHealthVisitsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutHealthVisitsInput,
    Prisma.UserUncheckedCreateWithoutHealthVisitsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutHealthVisitsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutHealthVisitsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutHealthVisitsInput,
    Prisma.UserUncheckedCreateWithoutHealthVisitsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutHealthVisitsInput;
  upsert?: Prisma.UserUpsertWithoutHealthVisitsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutHealthVisitsInput,
      Prisma.UserUpdateWithoutHealthVisitsInput
    >,
    Prisma.UserUncheckedUpdateWithoutHealthVisitsInput
  >;
};

export type UserCreateNestedOneWithoutClassroomCreatedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutClassroomCreatedByInput,
    Prisma.UserUncheckedCreateWithoutClassroomCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutClassroomCreatedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutClassroomCreatedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutClassroomCreatedByInput,
    Prisma.UserUncheckedCreateWithoutClassroomCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutClassroomCreatedByInput;
  upsert?: Prisma.UserUpsertWithoutClassroomCreatedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutClassroomCreatedByInput,
      Prisma.UserUpdateWithoutClassroomCreatedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutClassroomCreatedByInput
  >;
};

export type UserCreateNestedOneWithoutEnrollmentCreatedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutEnrollmentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutEnrollmentCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutEnrollmentCreatedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutEnrollmentCreatedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutEnrollmentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutEnrollmentCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutEnrollmentCreatedByInput;
  upsert?: Prisma.UserUpsertWithoutEnrollmentCreatedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutEnrollmentCreatedByInput,
      Prisma.UserUpdateWithoutEnrollmentCreatedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutEnrollmentCreatedByInput
  >;
};

export type UserCreateNestedOneWithoutGradeSheetsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutGradeSheetsInput,
    Prisma.UserUncheckedCreateWithoutGradeSheetsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutGradeSheetsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutGradeSheetsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutGradeSheetsInput,
    Prisma.UserUncheckedCreateWithoutGradeSheetsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutGradeSheetsInput;
  upsert?: Prisma.UserUpsertWithoutGradeSheetsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutGradeSheetsInput,
      Prisma.UserUpdateWithoutGradeSheetsInput
    >,
    Prisma.UserUncheckedUpdateWithoutGradeSheetsInput
  >;
};

export type UserCreateNestedOneWithoutAssignmentsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAssignmentsInput,
    Prisma.UserUncheckedCreateWithoutAssignmentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAssignmentsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutAssignmentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAssignmentsInput,
    Prisma.UserUncheckedCreateWithoutAssignmentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAssignmentsInput;
  upsert?: Prisma.UserUpsertWithoutAssignmentsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAssignmentsInput,
      Prisma.UserUpdateWithoutAssignmentsInput
    >,
    Prisma.UserUncheckedUpdateWithoutAssignmentsInput
  >;
};

export type UserCreateNestedOneWithoutStaffsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutStaffsInput,
    Prisma.UserUncheckedCreateWithoutStaffsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutStaffsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutStaffsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutStaffsInput,
    Prisma.UserUncheckedCreateWithoutStaffsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutStaffsInput;
  upsert?: Prisma.UserUpsertWithoutStaffsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutStaffsInput,
      Prisma.UserUpdateWithoutStaffsInput
    >,
    Prisma.UserUncheckedUpdateWithoutStaffsInput
  >;
};

export type UserCreateNestedOneWithoutDocumentsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentsInput,
    Prisma.UserUncheckedCreateWithoutDocumentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDocumentsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutDocumentCreatedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutDocumentCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDocumentCreatedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutDocumentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentsInput,
    Prisma.UserUncheckedCreateWithoutDocumentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDocumentsInput;
  upsert?: Prisma.UserUpsertWithoutDocumentsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutDocumentsInput,
      Prisma.UserUpdateWithoutDocumentsInput
    >,
    Prisma.UserUncheckedUpdateWithoutDocumentsInput
  >;
};

export type UserUpdateOneRequiredWithoutDocumentCreatedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutDocumentCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDocumentCreatedByInput;
  upsert?: Prisma.UserUpsertWithoutDocumentCreatedByInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutDocumentCreatedByInput,
      Prisma.UserUpdateWithoutDocumentCreatedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutDocumentCreatedByInput
  >;
};

export type UserCreateNestedOneWithoutStudentsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutStudentsInput,
    Prisma.UserUncheckedCreateWithoutStudentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutStudentsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutStudentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutStudentsInput,
    Prisma.UserUncheckedCreateWithoutStudentsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutStudentsInput;
  upsert?: Prisma.UserUpsertWithoutStudentsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutStudentsInput,
      Prisma.UserUpdateWithoutStudentsInput
    >,
    Prisma.UserUncheckedUpdateWithoutStudentsInput
  >;
};

export type UserCreateNestedOneWithoutContactsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutContactsInput,
    Prisma.UserUncheckedCreateWithoutContactsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutContactsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutContactsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutContactsInput,
    Prisma.UserUncheckedCreateWithoutContactsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutContactsInput;
  upsert?: Prisma.UserUpsertWithoutContactsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutContactsInput,
      Prisma.UserUpdateWithoutContactsInput
    >,
    Prisma.UserUncheckedUpdateWithoutContactsInput
  >;
};

export type UserCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutSchoolInput,
        Prisma.UserUncheckedCreateWithoutSchoolInput
      >
    | Prisma.UserCreateWithoutSchoolInput[]
    | Prisma.UserUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutSchoolInput
    | Prisma.UserCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.UserCreateManySchoolInputEnvelope;
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
};

export type UserUncheckedCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutSchoolInput,
        Prisma.UserUncheckedCreateWithoutSchoolInput
      >
    | Prisma.UserCreateWithoutSchoolInput[]
    | Prisma.UserUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutSchoolInput
    | Prisma.UserCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.UserCreateManySchoolInputEnvelope;
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
};

export type UserUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutSchoolInput,
        Prisma.UserUncheckedCreateWithoutSchoolInput
      >
    | Prisma.UserCreateWithoutSchoolInput[]
    | Prisma.UserUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutSchoolInput
    | Prisma.UserCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.UserUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.UserUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.UserCreateManySchoolInputEnvelope;
  set?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  disconnect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  delete?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  update?:
    | Prisma.UserUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.UserUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.UserUpdateManyWithWhereWithoutSchoolInput
    | Prisma.UserUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
};

export type UserUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.UserCreateWithoutSchoolInput,
        Prisma.UserUncheckedCreateWithoutSchoolInput
      >
    | Prisma.UserCreateWithoutSchoolInput[]
    | Prisma.UserUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.UserCreateOrConnectWithoutSchoolInput
    | Prisma.UserCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.UserUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.UserUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.UserCreateManySchoolInputEnvelope;
  set?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  disconnect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  delete?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[];
  update?:
    | Prisma.UserUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.UserUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.UserUpdateManyWithWhereWithoutSchoolInput
    | Prisma.UserUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
};

export type UserCreateNestedOneWithoutRolesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutRolesInput,
    Prisma.UserUncheckedCreateWithoutRolesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRolesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutRolesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutRolesInput,
    Prisma.UserUncheckedCreateWithoutRolesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRolesInput;
  upsert?: Prisma.UserUpsertWithoutRolesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutRolesInput,
      Prisma.UserUpdateWithoutRolesInput
    >,
    Prisma.UserUncheckedUpdateWithoutRolesInput
  >;
};

export type UserCreateNestedOneWithoutTokensInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTokensInput,
    Prisma.UserUncheckedCreateWithoutTokensInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTokensInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutTokensNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTokensInput,
    Prisma.UserUncheckedCreateWithoutTokensInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTokensInput;
  upsert?: Prisma.UserUpsertWithoutTokensInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTokensInput,
      Prisma.UserUpdateWithoutTokensInput
    >,
    Prisma.UserUncheckedUpdateWithoutTokensInput
  >;
};

export type UserCreateNestedOneWithoutTeachingSessionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTeachingSessionsInput,
    Prisma.UserUncheckedCreateWithoutTeachingSessionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTeachingSessionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutTeachingSessionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTeachingSessionsInput,
    Prisma.UserUncheckedCreateWithoutTeachingSessionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTeachingSessionsInput;
  upsert?: Prisma.UserUpsertWithoutTeachingSessionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTeachingSessionsInput,
      Prisma.UserUpdateWithoutTeachingSessionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutTeachingSessionsInput
  >;
};

export type UserCreateNestedOneWithoutPhotosInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutPhotosInput,
    Prisma.UserUncheckedCreateWithoutPhotosInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPhotosInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutPhotosNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutPhotosInput,
    Prisma.UserUncheckedCreateWithoutPhotosInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPhotosInput;
  upsert?: Prisma.UserUpsertWithoutPhotosInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutPhotosInput,
      Prisma.UserUpdateWithoutPhotosInput
    >,
    Prisma.UserUncheckedUpdateWithoutPhotosInput
  >;
};

export type UserCreateNestedOneWithoutReportQueuesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReportQueuesInput,
    Prisma.UserUncheckedCreateWithoutReportQueuesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportQueuesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutReportQueuesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReportQueuesInput,
    Prisma.UserUncheckedCreateWithoutReportQueuesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReportQueuesInput;
  upsert?: Prisma.UserUpsertWithoutReportQueuesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutReportQueuesInput,
      Prisma.UserUpdateWithoutReportQueuesInput
    >,
    Prisma.UserUncheckedUpdateWithoutReportQueuesInput
  >;
};

export type UserCreateNestedOneWithoutReligionInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReligionInput,
    Prisma.UserUncheckedCreateWithoutReligionInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReligionInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutReligionNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutReligionInput,
    Prisma.UserUncheckedCreateWithoutReligionInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReligionInput;
  upsert?: Prisma.UserUpsertWithoutReligionInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutReligionInput,
      Prisma.UserUpdateWithoutReligionInput
    >,
    Prisma.UserUncheckedUpdateWithoutReligionInput
  >;
};

export type UserCreateNestedOneWithoutClubsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutClubsInput,
    Prisma.UserUncheckedCreateWithoutClubsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutClubsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutClubs2Input = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutClubs2Input,
    Prisma.UserUncheckedCreateWithoutClubs2Input
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutClubs2Input;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutClubsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutClubsInput,
    Prisma.UserUncheckedCreateWithoutClubsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutClubsInput;
  upsert?: Prisma.UserUpsertWithoutClubsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutClubsInput,
      Prisma.UserUpdateWithoutClubsInput
    >,
    Prisma.UserUncheckedUpdateWithoutClubsInput
  >;
};

export type UserUpdateOneWithoutClubs2NestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutClubs2Input,
    Prisma.UserUncheckedCreateWithoutClubs2Input
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutClubs2Input;
  upsert?: Prisma.UserUpsertWithoutClubs2Input;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutClubs2Input,
      Prisma.UserUpdateWithoutClubs2Input
    >,
    Prisma.UserUncheckedUpdateWithoutClubs2Input
  >;
};

export type UserCreateNestedOneWithoutTransactionCreatedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionCreatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionCreatedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutTransactionReceivedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionReceivedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionReceivedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionReceivedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutTransactionPrintedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionPrintedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionPrintedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionPrintedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutTransactionDeletedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionDeletedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionDeletedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionDeletedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutTransactionUpdatedByInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionUpdatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionUpdatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionUpdatedByInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutTransactionCreatedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionCreatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionCreatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionCreatedByInput;
  upsert?: Prisma.UserUpsertWithoutTransactionCreatedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTransactionCreatedByInput,
      Prisma.UserUpdateWithoutTransactionCreatedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutTransactionCreatedByInput
  >;
};

export type UserUpdateOneWithoutTransactionReceivedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionReceivedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionReceivedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionReceivedByInput;
  upsert?: Prisma.UserUpsertWithoutTransactionReceivedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTransactionReceivedByInput,
      Prisma.UserUpdateWithoutTransactionReceivedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutTransactionReceivedByInput
  >;
};

export type UserUpdateOneWithoutTransactionPrintedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionPrintedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionPrintedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionPrintedByInput;
  upsert?: Prisma.UserUpsertWithoutTransactionPrintedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTransactionPrintedByInput,
      Prisma.UserUpdateWithoutTransactionPrintedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutTransactionPrintedByInput
  >;
};

export type UserUpdateOneWithoutTransactionDeletedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionDeletedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionDeletedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionDeletedByInput;
  upsert?: Prisma.UserUpsertWithoutTransactionDeletedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTransactionDeletedByInput,
      Prisma.UserUpdateWithoutTransactionDeletedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutTransactionDeletedByInput
  >;
};

export type UserUpdateOneWithoutTransactionUpdatedByNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionUpdatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionUpdatedByInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTransactionUpdatedByInput;
  upsert?: Prisma.UserUpsertWithoutTransactionUpdatedByInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutTransactionUpdatedByInput,
      Prisma.UserUpdateWithoutTransactionUpdatedByInput
    >,
    Prisma.UserUncheckedUpdateWithoutTransactionUpdatedByInput
  >;
};

export type UserCreateNestedOneWithoutPoliciesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutPoliciesInput,
    Prisma.UserUncheckedCreateWithoutPoliciesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPoliciesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutPoliciesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutPoliciesInput,
    Prisma.UserUncheckedCreateWithoutPoliciesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPoliciesInput;
  upsert?: Prisma.UserUpsertWithoutPoliciesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutPoliciesInput,
      Prisma.UserUpdateWithoutPoliciesInput
    >,
    Prisma.UserUncheckedUpdateWithoutPoliciesInput
  >;
};

export type UserCreateNestedOneWithoutNotificationPreferencesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationPreferencesInput,
    Prisma.UserUncheckedCreateWithoutNotificationPreferencesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationPreferencesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutNotificationPreferencesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationPreferencesInput,
    Prisma.UserUncheckedCreateWithoutNotificationPreferencesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationPreferencesInput;
  upsert?: Prisma.UserUpsertWithoutNotificationPreferencesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutNotificationPreferencesInput,
      Prisma.UserUpdateWithoutNotificationPreferencesInput
    >,
    Prisma.UserUncheckedUpdateWithoutNotificationPreferencesInput
  >;
};

export type UserCreateNestedOneWithoutSubscriptionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubscriptionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutCreatedSubscriptionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutCreatedSubscriptionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedSubscriptionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutSubscriptionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubscriptionsInput;
  upsert?: Prisma.UserUpsertWithoutSubscriptionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutSubscriptionsInput,
      Prisma.UserUpdateWithoutSubscriptionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutSubscriptionsInput
  >;
};

export type UserUpdateOneRequiredWithoutCreatedSubscriptionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutCreatedSubscriptionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedSubscriptionsInput;
  upsert?: Prisma.UserUpsertWithoutCreatedSubscriptionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutCreatedSubscriptionsInput,
      Prisma.UserUpdateWithoutCreatedSubscriptionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutCreatedSubscriptionsInput
  >;
};

export type UserCreateNestedOneWithoutLogActivitiesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutLogActivitiesInput,
    Prisma.UserUncheckedCreateWithoutLogActivitiesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLogActivitiesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutLogActivitiesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutLogActivitiesInput,
    Prisma.UserUncheckedCreateWithoutLogActivitiesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLogActivitiesInput;
  upsert?: Prisma.UserUpsertWithoutLogActivitiesInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutLogActivitiesInput,
      Prisma.UserUpdateWithoutLogActivitiesInput
    >,
    Prisma.UserUncheckedUpdateWithoutLogActivitiesInput
  >;
};

export type UserCreateNestedOneWithoutSessionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput;
  upsert?: Prisma.UserUpsertWithoutSessionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutSessionsInput,
      Prisma.UserUpdateWithoutSessionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutSessionsInput
  >;
};

export type UserCreateNestedOneWithoutAccountsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccountsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccountsInput;
  upsert?: Prisma.UserUpsertWithoutAccountsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAccountsInput,
      Prisma.UserUpdateWithoutAccountsInput
    >,
    Prisma.UserUncheckedUpdateWithoutAccountsInput
  >;
};

export type UserCreateNestedOneWithoutApikeysInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutApikeysInput,
    Prisma.UserUncheckedCreateWithoutApikeysInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutApikeysInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutApikeysNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutApikeysInput,
    Prisma.UserUncheckedCreateWithoutApikeysInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutApikeysInput;
  upsert?: Prisma.UserUpsertWithoutApikeysInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutApikeysInput,
      Prisma.UserUpdateWithoutApikeysInput
    >,
    Prisma.UserUncheckedUpdateWithoutApikeysInput
  >;
};

export type UserCreateNestedOneWithoutNotificationsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationsInput,
    Prisma.UserUncheckedCreateWithoutNotificationsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationsInput,
    Prisma.UserUncheckedCreateWithoutNotificationsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsInput;
  upsert?: Prisma.UserUpsertWithoutNotificationsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutNotificationsInput,
      Prisma.UserUpdateWithoutNotificationsInput
    >,
    Prisma.UserUncheckedUpdateWithoutNotificationsInput
  >;
};

export type UserCreateWithoutChatsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutChatsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutChatsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutChatsInput,
    Prisma.UserUncheckedCreateWithoutChatsInput
  >;
};

export type UserUpsertWithoutChatsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutChatsInput,
    Prisma.UserUncheckedUpdateWithoutChatsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutChatsInput,
    Prisma.UserUncheckedCreateWithoutChatsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutChatsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutChatsInput,
    Prisma.UserUncheckedUpdateWithoutChatsInput
  >;
};

export type UserUpdateWithoutChatsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutChatsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAiDocumentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAiDocumentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAiDocumentsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAiDocumentsInput,
    Prisma.UserUncheckedCreateWithoutAiDocumentsInput
  >;
};

export type UserUpsertWithoutAiDocumentsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAiDocumentsInput,
    Prisma.UserUncheckedUpdateWithoutAiDocumentsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAiDocumentsInput,
    Prisma.UserUncheckedCreateWithoutAiDocumentsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAiDocumentsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAiDocumentsInput,
    Prisma.UserUncheckedUpdateWithoutAiDocumentsInput
  >;
};

export type UserUpdateWithoutAiDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAiDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAiSuggestionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAiSuggestionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAiSuggestionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAiSuggestionsInput,
    Prisma.UserUncheckedCreateWithoutAiSuggestionsInput
  >;
};

export type UserUpsertWithoutAiSuggestionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAiSuggestionsInput,
    Prisma.UserUncheckedUpdateWithoutAiSuggestionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAiSuggestionsInput,
    Prisma.UserUncheckedCreateWithoutAiSuggestionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAiSuggestionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAiSuggestionsInput,
    Prisma.UserUncheckedUpdateWithoutAiSuggestionsInput
  >;
};

export type UserUpdateWithoutAiSuggestionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAiSuggestionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAssetAssignmentUsagesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAssetAssignmentUsagesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAssetAssignmentUsagesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAssetAssignmentUsagesInput,
    Prisma.UserUncheckedCreateWithoutAssetAssignmentUsagesInput
  >;
};

export type UserUpsertWithoutAssetAssignmentUsagesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAssetAssignmentUsagesInput,
    Prisma.UserUncheckedUpdateWithoutAssetAssignmentUsagesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAssetAssignmentUsagesInput,
    Prisma.UserUncheckedCreateWithoutAssetAssignmentUsagesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAssetAssignmentUsagesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAssetAssignmentUsagesInput,
    Prisma.UserUncheckedUpdateWithoutAssetAssignmentUsagesInput
  >;
};

export type UserUpdateWithoutAssetAssignmentUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAssetAssignmentUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutConsumableUsagesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutConsumableUsagesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutConsumableUsagesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutConsumableUsagesInput
  >;
};

export type UserCreateWithoutCreatedConsumableUsagesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutCreatedConsumableUsagesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutCreatedConsumableUsagesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutCreatedConsumableUsagesInput
  >;
};

export type UserUpsertWithoutConsumableUsagesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutConsumableUsagesInput,
    Prisma.UserUncheckedUpdateWithoutConsumableUsagesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutConsumableUsagesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutConsumableUsagesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutConsumableUsagesInput,
    Prisma.UserUncheckedUpdateWithoutConsumableUsagesInput
  >;
};

export type UserUpdateWithoutConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutCreatedConsumableUsagesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutCreatedConsumableUsagesInput,
    Prisma.UserUncheckedUpdateWithoutCreatedConsumableUsagesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedConsumableUsagesInput,
    Prisma.UserUncheckedCreateWithoutCreatedConsumableUsagesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutCreatedConsumableUsagesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutCreatedConsumableUsagesInput,
    Prisma.UserUncheckedUpdateWithoutCreatedConsumableUsagesInput
  >;
};

export type UserUpdateWithoutCreatedConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutCreatedConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutStockMovementsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutStockMovementsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutStockMovementsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutStockMovementsInput,
    Prisma.UserUncheckedCreateWithoutStockMovementsInput
  >;
};

export type UserUpsertWithoutStockMovementsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutStockMovementsInput,
    Prisma.UserUncheckedUpdateWithoutStockMovementsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutStockMovementsInput,
    Prisma.UserUncheckedCreateWithoutStockMovementsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutStockMovementsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutStockMovementsInput,
    Prisma.UserUncheckedUpdateWithoutStockMovementsInput
  >;
};

export type UserUpdateWithoutStockMovementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutStockMovementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutBorrowedBooksInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutBorrowedBooksInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutBorrowedBooksInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutBorrowedBooksInput,
    Prisma.UserUncheckedCreateWithoutBorrowedBooksInput
  >;
};

export type UserUpsertWithoutBorrowedBooksInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutBorrowedBooksInput,
    Prisma.UserUncheckedUpdateWithoutBorrowedBooksInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutBorrowedBooksInput,
    Prisma.UserUncheckedCreateWithoutBorrowedBooksInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutBorrowedBooksInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutBorrowedBooksInput,
    Prisma.UserUncheckedUpdateWithoutBorrowedBooksInput
  >;
};

export type UserUpdateWithoutBorrowedBooksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutBorrowedBooksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutSentEmailsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutSentEmailsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutSentEmailsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSentEmailsInput,
    Prisma.UserUncheckedCreateWithoutSentEmailsInput
  >;
};

export type UserUpsertWithoutSentEmailsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSentEmailsInput,
    Prisma.UserUncheckedUpdateWithoutSentEmailsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSentEmailsInput,
    Prisma.UserUncheckedCreateWithoutSentEmailsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutSentEmailsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSentEmailsInput,
    Prisma.UserUncheckedUpdateWithoutSentEmailsInput
  >;
};

export type UserUpdateWithoutSentEmailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutSentEmailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutReceivedEmailsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutReceivedEmailsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutReceivedEmailsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReceivedEmailsInput,
    Prisma.UserUncheckedCreateWithoutReceivedEmailsInput
  >;
};

export type UserUpsertWithoutReceivedEmailsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutReceivedEmailsInput,
    Prisma.UserUncheckedUpdateWithoutReceivedEmailsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReceivedEmailsInput,
    Prisma.UserUncheckedCreateWithoutReceivedEmailsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutReceivedEmailsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutReceivedEmailsInput,
    Prisma.UserUncheckedUpdateWithoutReceivedEmailsInput
  >;
};

export type UserUpdateWithoutReceivedEmailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutReceivedEmailsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAccessedCommunicationChannelInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAccessedCommunicationChannelInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAccessedCommunicationChannelInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccessedCommunicationChannelInput,
    Prisma.UserUncheckedCreateWithoutAccessedCommunicationChannelInput
  >;
};

export type UserUpsertWithoutAccessedCommunicationChannelInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAccessedCommunicationChannelInput,
    Prisma.UserUncheckedUpdateWithoutAccessedCommunicationChannelInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccessedCommunicationChannelInput,
    Prisma.UserUncheckedCreateWithoutAccessedCommunicationChannelInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAccessedCommunicationChannelInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAccessedCommunicationChannelInput,
    Prisma.UserUncheckedUpdateWithoutAccessedCommunicationChannelInput
  >;
};

export type UserUpdateWithoutAccessedCommunicationChannelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAccessedCommunicationChannelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutRecipientsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutRecipientsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutRecipientsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutRecipientsInput,
    Prisma.UserUncheckedCreateWithoutRecipientsInput
  >;
};

export type UserUpsertWithoutRecipientsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutRecipientsInput,
    Prisma.UserUncheckedUpdateWithoutRecipientsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutRecipientsInput,
    Prisma.UserUncheckedCreateWithoutRecipientsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutRecipientsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutRecipientsInput,
    Prisma.UserUncheckedUpdateWithoutRecipientsInput
  >;
};

export type UserUpdateWithoutRecipientsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutRecipientsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAnnouncementsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAnnouncementsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAnnouncementsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAnnouncementsInput,
    Prisma.UserUncheckedCreateWithoutAnnouncementsInput
  >;
};

export type UserUpsertWithoutAnnouncementsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAnnouncementsInput,
    Prisma.UserUncheckedUpdateWithoutAnnouncementsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAnnouncementsInput,
    Prisma.UserUncheckedCreateWithoutAnnouncementsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAnnouncementsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAnnouncementsInput,
    Prisma.UserUncheckedUpdateWithoutAnnouncementsInput
  >;
};

export type UserUpdateWithoutAnnouncementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAnnouncementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutReportCardsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutReportCardsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutReportCardsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReportCardsInput,
    Prisma.UserUncheckedCreateWithoutReportCardsInput
  >;
};

export type UserUpsertWithoutReportCardsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutReportCardsInput,
    Prisma.UserUncheckedUpdateWithoutReportCardsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReportCardsInput,
    Prisma.UserUncheckedCreateWithoutReportCardsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutReportCardsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutReportCardsInput,
    Prisma.UserUncheckedUpdateWithoutReportCardsInput
  >;
};

export type UserUpdateWithoutReportCardsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutReportCardsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutHealthVisitsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutHealthVisitsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutHealthVisitsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutHealthVisitsInput,
    Prisma.UserUncheckedCreateWithoutHealthVisitsInput
  >;
};

export type UserUpsertWithoutHealthVisitsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutHealthVisitsInput,
    Prisma.UserUncheckedUpdateWithoutHealthVisitsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutHealthVisitsInput,
    Prisma.UserUncheckedCreateWithoutHealthVisitsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutHealthVisitsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutHealthVisitsInput,
    Prisma.UserUncheckedUpdateWithoutHealthVisitsInput
  >;
};

export type UserUpdateWithoutHealthVisitsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutHealthVisitsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutClassroomCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutClassroomCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutClassroomCreatedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutClassroomCreatedByInput,
    Prisma.UserUncheckedCreateWithoutClassroomCreatedByInput
  >;
};

export type UserUpsertWithoutClassroomCreatedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutClassroomCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutClassroomCreatedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutClassroomCreatedByInput,
    Prisma.UserUncheckedCreateWithoutClassroomCreatedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutClassroomCreatedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutClassroomCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutClassroomCreatedByInput
  >;
};

export type UserUpdateWithoutClassroomCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutClassroomCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutEnrollmentCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutEnrollmentCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutEnrollmentCreatedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutEnrollmentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutEnrollmentCreatedByInput
  >;
};

export type UserUpsertWithoutEnrollmentCreatedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutEnrollmentCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutEnrollmentCreatedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutEnrollmentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutEnrollmentCreatedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutEnrollmentCreatedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutEnrollmentCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutEnrollmentCreatedByInput
  >;
};

export type UserUpdateWithoutEnrollmentCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutEnrollmentCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutGradeSheetsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutGradeSheetsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutGradeSheetsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutGradeSheetsInput,
    Prisma.UserUncheckedCreateWithoutGradeSheetsInput
  >;
};

export type UserUpsertWithoutGradeSheetsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutGradeSheetsInput,
    Prisma.UserUncheckedUpdateWithoutGradeSheetsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutGradeSheetsInput,
    Prisma.UserUncheckedCreateWithoutGradeSheetsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutGradeSheetsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutGradeSheetsInput,
    Prisma.UserUncheckedUpdateWithoutGradeSheetsInput
  >;
};

export type UserUpdateWithoutGradeSheetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutGradeSheetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAssignmentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAssignmentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAssignmentsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAssignmentsInput,
    Prisma.UserUncheckedCreateWithoutAssignmentsInput
  >;
};

export type UserUpsertWithoutAssignmentsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAssignmentsInput,
    Prisma.UserUncheckedUpdateWithoutAssignmentsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAssignmentsInput,
    Prisma.UserUncheckedCreateWithoutAssignmentsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAssignmentsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAssignmentsInput,
    Prisma.UserUncheckedUpdateWithoutAssignmentsInput
  >;
};

export type UserUpdateWithoutAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutStaffsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutStaffsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutStaffsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutStaffsInput,
    Prisma.UserUncheckedCreateWithoutStaffsInput
  >;
};

export type UserUpsertWithoutStaffsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutStaffsInput,
    Prisma.UserUncheckedUpdateWithoutStaffsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutStaffsInput,
    Prisma.UserUncheckedCreateWithoutStaffsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutStaffsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutStaffsInput,
    Prisma.UserUncheckedUpdateWithoutStaffsInput
  >;
};

export type UserUpdateWithoutStaffsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutStaffsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutDocumentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutDocumentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutDocumentsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentsInput,
    Prisma.UserUncheckedCreateWithoutDocumentsInput
  >;
};

export type UserCreateWithoutDocumentCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutDocumentCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutDocumentCreatedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutDocumentCreatedByInput
  >;
};

export type UserUpsertWithoutDocumentsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutDocumentsInput,
    Prisma.UserUncheckedUpdateWithoutDocumentsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentsInput,
    Prisma.UserUncheckedCreateWithoutDocumentsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutDocumentsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutDocumentsInput,
    Prisma.UserUncheckedUpdateWithoutDocumentsInput
  >;
};

export type UserUpdateWithoutDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutDocumentCreatedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutDocumentCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutDocumentCreatedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutDocumentCreatedByInput,
    Prisma.UserUncheckedCreateWithoutDocumentCreatedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutDocumentCreatedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutDocumentCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutDocumentCreatedByInput
  >;
};

export type UserUpdateWithoutDocumentCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutDocumentCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutStudentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutStudentsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutStudentsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutStudentsInput,
    Prisma.UserUncheckedCreateWithoutStudentsInput
  >;
};

export type UserUpsertWithoutStudentsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutStudentsInput,
    Prisma.UserUncheckedUpdateWithoutStudentsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutStudentsInput,
    Prisma.UserUncheckedCreateWithoutStudentsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutStudentsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutStudentsInput,
    Prisma.UserUncheckedUpdateWithoutStudentsInput
  >;
};

export type UserUpdateWithoutStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutContactsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutContactsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutContactsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutContactsInput,
    Prisma.UserUncheckedCreateWithoutContactsInput
  >;
};

export type UserUpsertWithoutContactsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutContactsInput,
    Prisma.UserUncheckedUpdateWithoutContactsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutContactsInput,
    Prisma.UserUncheckedCreateWithoutContactsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutContactsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutContactsInput,
    Prisma.UserUncheckedUpdateWithoutContactsInput
  >;
};

export type UserUpdateWithoutContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutSchoolInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutSchoolInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutSchoolInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSchoolInput,
    Prisma.UserUncheckedCreateWithoutSchoolInput
  >;
};

export type UserCreateManySchoolInputEnvelope = {
  data: Prisma.UserCreateManySchoolInput | Prisma.UserCreateManySchoolInput[];
  skipDuplicates?: boolean;
};

export type UserUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.UserWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSchoolInput,
    Prisma.UserUncheckedUpdateWithoutSchoolInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSchoolInput,
    Prisma.UserUncheckedCreateWithoutSchoolInput
  >;
};

export type UserUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.UserWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSchoolInput,
    Prisma.UserUncheckedUpdateWithoutSchoolInput
  >;
};

export type UserUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.UserScalarWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateManyMutationInput,
    Prisma.UserUncheckedUpdateManyWithoutSchoolInput
  >;
};

export type UserScalarWhereInput = {
  AND?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
  OR?: Prisma.UserScalarWhereInput[];
  NOT?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[];
  id?: Prisma.StringFilter<"User"> | string;
  name?: Prisma.StringFilter<"User"> | string;
  email?: Prisma.StringFilter<"User"> | string;
  emailVerified?: Prisma.BoolFilter<"User"> | boolean;
  image?: Prisma.StringNullableFilter<"User"> | string | null;
  username?: Prisma.StringFilter<"User"> | string;
  displayUsername?: Prisma.StringNullableFilter<"User"> | string | null;
  role?: Prisma.StringNullableFilter<"User"> | string | null;
  banned?: Prisma.BoolNullableFilter<"User"> | boolean | null;
  banReason?: Prisma.StringNullableFilter<"User"> | string | null;
  banExpires?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null;
  avatar?: Prisma.StringNullableFilter<"User"> | string | null;
  isActive?: Prisma.BoolFilter<"User"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string;
  profile?: Prisma.StringFilter<"User"> | string;
  permissions?: Prisma.JsonNullableFilter<"User">;
  schoolId?: Prisma.StringFilter<"User"> | string;
};

export type UserCreateWithoutRolesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutRolesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutRolesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutRolesInput,
    Prisma.UserUncheckedCreateWithoutRolesInput
  >;
};

export type UserUpsertWithoutRolesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutRolesInput,
    Prisma.UserUncheckedUpdateWithoutRolesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutRolesInput,
    Prisma.UserUncheckedCreateWithoutRolesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutRolesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutRolesInput,
    Prisma.UserUncheckedUpdateWithoutRolesInput
  >;
};

export type UserUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutTokensInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTokensInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTokensInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTokensInput,
    Prisma.UserUncheckedCreateWithoutTokensInput
  >;
};

export type UserUpsertWithoutTokensInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTokensInput,
    Prisma.UserUncheckedUpdateWithoutTokensInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTokensInput,
    Prisma.UserUncheckedCreateWithoutTokensInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTokensInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTokensInput,
    Prisma.UserUncheckedUpdateWithoutTokensInput
  >;
};

export type UserUpdateWithoutTokensInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTokensInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutTeachingSessionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTeachingSessionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTeachingSessionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTeachingSessionsInput,
    Prisma.UserUncheckedCreateWithoutTeachingSessionsInput
  >;
};

export type UserUpsertWithoutTeachingSessionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTeachingSessionsInput,
    Prisma.UserUncheckedUpdateWithoutTeachingSessionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTeachingSessionsInput,
    Prisma.UserUncheckedCreateWithoutTeachingSessionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTeachingSessionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTeachingSessionsInput,
    Prisma.UserUncheckedUpdateWithoutTeachingSessionsInput
  >;
};

export type UserUpdateWithoutTeachingSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTeachingSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutPhotosInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutPhotosInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutPhotosInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutPhotosInput,
    Prisma.UserUncheckedCreateWithoutPhotosInput
  >;
};

export type UserUpsertWithoutPhotosInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutPhotosInput,
    Prisma.UserUncheckedUpdateWithoutPhotosInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutPhotosInput,
    Prisma.UserUncheckedCreateWithoutPhotosInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutPhotosInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutPhotosInput,
    Prisma.UserUncheckedUpdateWithoutPhotosInput
  >;
};

export type UserUpdateWithoutPhotosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutPhotosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutReportQueuesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutReportQueuesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutReportQueuesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReportQueuesInput,
    Prisma.UserUncheckedCreateWithoutReportQueuesInput
  >;
};

export type UserUpsertWithoutReportQueuesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutReportQueuesInput,
    Prisma.UserUncheckedUpdateWithoutReportQueuesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReportQueuesInput,
    Prisma.UserUncheckedCreateWithoutReportQueuesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutReportQueuesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutReportQueuesInput,
    Prisma.UserUncheckedUpdateWithoutReportQueuesInput
  >;
};

export type UserUpdateWithoutReportQueuesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutReportQueuesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutReligionInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutReligionInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutReligionInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReligionInput,
    Prisma.UserUncheckedCreateWithoutReligionInput
  >;
};

export type UserUpsertWithoutReligionInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutReligionInput,
    Prisma.UserUncheckedUpdateWithoutReligionInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutReligionInput,
    Prisma.UserUncheckedCreateWithoutReligionInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutReligionInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutReligionInput,
    Prisma.UserUncheckedUpdateWithoutReligionInput
  >;
};

export type UserUpdateWithoutReligionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutReligionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutClubsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutClubsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutClubsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutClubsInput,
    Prisma.UserUncheckedCreateWithoutClubsInput
  >;
};

export type UserCreateWithoutClubs2Input = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutClubs2Input = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutClubs2Input = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutClubs2Input,
    Prisma.UserUncheckedCreateWithoutClubs2Input
  >;
};

export type UserUpsertWithoutClubsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutClubsInput,
    Prisma.UserUncheckedUpdateWithoutClubsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutClubsInput,
    Prisma.UserUncheckedCreateWithoutClubsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutClubsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutClubsInput,
    Prisma.UserUncheckedUpdateWithoutClubsInput
  >;
};

export type UserUpdateWithoutClubsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutClubsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutClubs2Input = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutClubs2Input,
    Prisma.UserUncheckedUpdateWithoutClubs2Input
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutClubs2Input,
    Prisma.UserUncheckedCreateWithoutClubs2Input
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutClubs2Input = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutClubs2Input,
    Prisma.UserUncheckedUpdateWithoutClubs2Input
  >;
};

export type UserUpdateWithoutClubs2Input = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutClubs2Input = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutTransactionCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTransactionCreatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTransactionCreatedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionCreatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionCreatedByInput
  >;
};

export type UserCreateWithoutTransactionReceivedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTransactionReceivedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTransactionReceivedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionReceivedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionReceivedByInput
  >;
};

export type UserCreateWithoutTransactionPrintedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTransactionPrintedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTransactionPrintedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionPrintedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionPrintedByInput
  >;
};

export type UserCreateWithoutTransactionDeletedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTransactionDeletedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTransactionDeletedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionDeletedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionDeletedByInput
  >;
};

export type UserCreateWithoutTransactionUpdatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutTransactionUpdatedByInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutTransactionUpdatedByInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionUpdatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionUpdatedByInput
  >;
};

export type UserUpsertWithoutTransactionCreatedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionCreatedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionCreatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionCreatedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTransactionCreatedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionCreatedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionCreatedByInput
  >;
};

export type UserUpdateWithoutTransactionCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTransactionCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutTransactionReceivedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionReceivedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionReceivedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionReceivedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionReceivedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTransactionReceivedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionReceivedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionReceivedByInput
  >;
};

export type UserUpdateWithoutTransactionReceivedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTransactionReceivedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutTransactionPrintedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionPrintedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionPrintedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionPrintedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionPrintedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTransactionPrintedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionPrintedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionPrintedByInput
  >;
};

export type UserUpdateWithoutTransactionPrintedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTransactionPrintedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutTransactionDeletedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionDeletedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionDeletedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionDeletedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionDeletedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTransactionDeletedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionDeletedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionDeletedByInput
  >;
};

export type UserUpdateWithoutTransactionDeletedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTransactionDeletedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutTransactionUpdatedByInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionUpdatedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionUpdatedByInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutTransactionUpdatedByInput,
    Prisma.UserUncheckedCreateWithoutTransactionUpdatedByInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutTransactionUpdatedByInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutTransactionUpdatedByInput,
    Prisma.UserUncheckedUpdateWithoutTransactionUpdatedByInput
  >;
};

export type UserUpdateWithoutTransactionUpdatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutTransactionUpdatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutPoliciesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutPoliciesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutPoliciesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutPoliciesInput,
    Prisma.UserUncheckedCreateWithoutPoliciesInput
  >;
};

export type UserUpsertWithoutPoliciesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutPoliciesInput,
    Prisma.UserUncheckedUpdateWithoutPoliciesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutPoliciesInput,
    Prisma.UserUncheckedCreateWithoutPoliciesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutPoliciesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutPoliciesInput,
    Prisma.UserUncheckedUpdateWithoutPoliciesInput
  >;
};

export type UserUpdateWithoutPoliciesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutPoliciesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutNotificationPreferencesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutNotificationPreferencesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutNotificationPreferencesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationPreferencesInput,
    Prisma.UserUncheckedCreateWithoutNotificationPreferencesInput
  >;
};

export type UserUpsertWithoutNotificationPreferencesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutNotificationPreferencesInput,
    Prisma.UserUncheckedUpdateWithoutNotificationPreferencesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationPreferencesInput,
    Prisma.UserUncheckedCreateWithoutNotificationPreferencesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutNotificationPreferencesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutNotificationPreferencesInput,
    Prisma.UserUncheckedUpdateWithoutNotificationPreferencesInput
  >;
};

export type UserUpdateWithoutNotificationPreferencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutNotificationPreferencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutSubscriptionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutSubscriptionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutSubscriptionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
};

export type UserCreateWithoutCreatedSubscriptionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutCreatedSubscriptionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutCreatedSubscriptionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutCreatedSubscriptionsInput
  >;
};

export type UserUpsertWithoutSubscriptionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSubscriptionsInput,
    Prisma.UserUncheckedUpdateWithoutSubscriptionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutSubscriptionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSubscriptionsInput,
    Prisma.UserUncheckedUpdateWithoutSubscriptionsInput
  >;
};

export type UserUpdateWithoutSubscriptionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutSubscriptionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUpsertWithoutCreatedSubscriptionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutCreatedSubscriptionsInput,
    Prisma.UserUncheckedUpdateWithoutCreatedSubscriptionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutCreatedSubscriptionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutCreatedSubscriptionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutCreatedSubscriptionsInput,
    Prisma.UserUncheckedUpdateWithoutCreatedSubscriptionsInput
  >;
};

export type UserUpdateWithoutCreatedSubscriptionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutCreatedSubscriptionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutLogActivitiesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutLogActivitiesInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutLogActivitiesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutLogActivitiesInput,
    Prisma.UserUncheckedCreateWithoutLogActivitiesInput
  >;
};

export type UserUpsertWithoutLogActivitiesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutLogActivitiesInput,
    Prisma.UserUncheckedUpdateWithoutLogActivitiesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutLogActivitiesInput,
    Prisma.UserUncheckedCreateWithoutLogActivitiesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutLogActivitiesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutLogActivitiesInput,
    Prisma.UserUncheckedUpdateWithoutLogActivitiesInput
  >;
};

export type UserUpdateWithoutLogActivitiesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutLogActivitiesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutSessionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutSessionsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutSessionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
};

export type UserUpsertWithoutSessionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSessionsInput,
    Prisma.UserUncheckedUpdateWithoutSessionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutSessionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSessionsInput,
    Prisma.UserUncheckedUpdateWithoutSessionsInput
  >;
};

export type UserUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutAccountsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutAccountsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutAccountsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
};

export type UserUpsertWithoutAccountsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountsInput,
    Prisma.UserUncheckedUpdateWithoutAccountsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAccountsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountsInput,
    Prisma.UserUncheckedUpdateWithoutAccountsInput
  >;
};

export type UserUpdateWithoutAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutApikeysInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutApikeysInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  notifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutUserInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutApikeysInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutApikeysInput,
    Prisma.UserUncheckedCreateWithoutApikeysInput
  >;
};

export type UserUpsertWithoutApikeysInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutApikeysInput,
    Prisma.UserUncheckedUpdateWithoutApikeysInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutApikeysInput,
    Prisma.UserUncheckedCreateWithoutApikeysInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutApikeysInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutApikeysInput,
    Prisma.UserUncheckedUpdateWithoutApikeysInput
  >;
};

export type UserUpdateWithoutApikeysInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutApikeysInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutNotificationsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubCreateNestedManyWithoutDeputyInput;
  school: Prisma.SchoolCreateNestedOneWithoutUsersInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutCreatedByInput;
  enrollmentCreatedBy?: Prisma.EnrollmentCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutNotificationsInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId: string;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  apikeys?: Prisma.ApikeyUncheckedCreateNestedManyWithoutUserInput;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutUserInput;
  photos?: Prisma.PhotoUncheckedCreateNestedManyWithoutUserInput;
  reportQueues?: Prisma.ReportQueueUncheckedCreateNestedManyWithoutUserInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutUserInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutUserInput;
  tokens?: Prisma.TokenUncheckedCreateNestedManyWithoutUserInput;
  roles?: Prisma.UserRoleUncheckedCreateNestedManyWithoutUserInput;
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutCreatedByInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutCreatedByInput;
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutCreatedByInput;
  recipients?: Prisma.RecipientUncheckedCreateNestedManyWithoutUserInput;
  policies?: Prisma.UserPolicyUncheckedCreateNestedManyWithoutUserInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutCreatedByInput;
  religion?: Prisma.ReligionUncheckedCreateNestedManyWithoutCreatedByInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutPresidentInput;
  clubs2?: Prisma.ClubUncheckedCreateNestedManyWithoutDeputyInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutUserInput;
  documentCreatedBy?: Prisma.DocumentUncheckedCreateNestedManyWithoutCreatedByInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedCreateNestedManyWithoutCreatedByInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedCreateNestedManyWithoutUserInput;
  healthVisits?: Prisma.HealthVisitUncheckedCreateNestedManyWithoutUserInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutUserInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedCreateNestedManyWithoutUserInput;
  sentEmails?: Prisma.EmailUncheckedCreateNestedManyWithoutSenderInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedCreateNestedManyWithoutUserInput;
  subscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutUserInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedCreateNestedManyWithoutCreatedByInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedCreateNestedManyWithoutLastAccessedByInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutUserInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutUserInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutCreatedByInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutCreatedByInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutCreatedByInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutReceivedByInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutPrintedByInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutDeletedByInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedCreateNestedManyWithoutUpdatedBy2Input;
  chats?: Prisma.AiChatUncheckedCreateNestedManyWithoutUserInput;
  aiDocuments?: Prisma.AiDocumentUncheckedCreateNestedManyWithoutUserInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutNotificationsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationsInput,
    Prisma.UserUncheckedCreateWithoutNotificationsInput
  >;
};

export type UserUpsertWithoutNotificationsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutNotificationsInput,
    Prisma.UserUncheckedUpdateWithoutNotificationsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutNotificationsInput,
    Prisma.UserUncheckedCreateWithoutNotificationsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutNotificationsInput,
    Prisma.UserUncheckedUpdateWithoutNotificationsInput
  >;
};

export type UserUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutUsersNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateManySchoolInput = {
  id?: string;
  name: string;
  email: string;
  emailVerified?: boolean;
  image?: string | null;
  username: string;
  displayUsername?: string | null;
  role?: string | null;
  banned?: boolean | null;
  banReason?: string | null;
  banExpires?: Date | string | null;
  avatar?: string | null;
  isActive?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  profile: string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
};

export type UserUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  apikeys?: Prisma.ApikeyUncheckedUpdateManyWithoutUserNestedInput;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutUserNestedInput;
  photos?: Prisma.PhotoUncheckedUpdateManyWithoutUserNestedInput;
  reportQueues?: Prisma.ReportQueueUncheckedUpdateManyWithoutUserNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutUserNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutUserNestedInput;
  tokens?: Prisma.TokenUncheckedUpdateManyWithoutUserNestedInput;
  roles?: Prisma.UserRoleUncheckedUpdateManyWithoutUserNestedInput;
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutCreatedByNestedInput;
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutCreatedByNestedInput;
  recipients?: Prisma.RecipientUncheckedUpdateManyWithoutUserNestedInput;
  policies?: Prisma.UserPolicyUncheckedUpdateManyWithoutUserNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutCreatedByNestedInput;
  religion?: Prisma.ReligionUncheckedUpdateManyWithoutCreatedByNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutPresidentNestedInput;
  clubs2?: Prisma.ClubUncheckedUpdateManyWithoutDeputyNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutUserNestedInput;
  documentCreatedBy?: Prisma.DocumentUncheckedUpdateManyWithoutCreatedByNestedInput;
  teachingSessions?: Prisma.TeachingSessionUncheckedUpdateManyWithoutCreatedByNestedInput;
  borrowedBooks?: Prisma.BorrowedBookUncheckedUpdateManyWithoutUserNestedInput;
  healthVisits?: Prisma.HealthVisitUncheckedUpdateManyWithoutUserNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutUserNestedInput;
  notificationPreferences?: Prisma.NotificationPreferenceUncheckedUpdateManyWithoutUserNestedInput;
  sentEmails?: Prisma.EmailUncheckedUpdateManyWithoutSenderNestedInput;
  receivedEmails?: Prisma.EmailRecipientUncheckedUpdateManyWithoutUserNestedInput;
  subscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutUserNestedInput;
  createdSubscriptions?: Prisma.SubscriptionUncheckedUpdateManyWithoutCreatedByNestedInput;
  accessedCommunicationChannel?: Prisma.CommunicationChannelUncheckedUpdateManyWithoutLastAccessedByNestedInput;
  assetAssignmentUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutUserNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutUserNestedInput;
  createdConsumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutCreatedByNestedInput;
  notifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutUserNestedInput;
  enrollmentCreatedBy?: Prisma.EnrollmentUncheckedUpdateManyWithoutCreatedByNestedInput;
  classroomCreatedBy?: Prisma.ClassroomUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionCreatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutCreatedByNestedInput;
  transactionReceivedBy?: Prisma.TransactionUncheckedUpdateManyWithoutReceivedByNestedInput;
  transactionPrintedBy?: Prisma.TransactionUncheckedUpdateManyWithoutPrintedByNestedInput;
  transactionDeletedBy?: Prisma.TransactionUncheckedUpdateManyWithoutDeletedByNestedInput;
  transactionUpdatedBy?: Prisma.TransactionUncheckedUpdateManyWithoutUpdatedBy2NestedInput;
  chats?: Prisma.AiChatUncheckedUpdateManyWithoutUserNestedInput;
  aiDocuments?: Prisma.AiDocumentUncheckedUpdateManyWithoutUserNestedInput;
  aiSuggestions?: Prisma.AiSuggestionUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  username?: Prisma.StringFieldUpdateOperationsInput | string;
  displayUsername?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banned?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  banReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  banExpires?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  profile?: Prisma.StringFieldUpdateOperationsInput | string;
  permissions?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
};

/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  sessions: number;
  accounts: number;
  apikeys: number;
  contacts: number;
  photos: number;
  reportQueues: number;
  staffs: number;
  students: number;
  tokens: number;
  roles: number;
  assignments: number;
  reportCards: number;
  announcements: number;
  recipients: number;
  policies: number;
  gradeSheets: number;
  religion: number;
  clubs: number;
  clubs2: number;
  documents: number;
  documentCreatedBy: number;
  teachingSessions: number;
  borrowedBooks: number;
  healthVisits: number;
  logActivities: number;
  notificationPreferences: number;
  sentEmails: number;
  receivedEmails: number;
  subscriptions: number;
  createdSubscriptions: number;
  accessedCommunicationChannel: number;
  assetAssignmentUsages: number;
  stockMovements: number;
  consumableUsages: number;
  createdConsumableUsages: number;
  notifications: number;
  enrollmentCreatedBy: number;
  classroomCreatedBy: number;
  transactionCreatedBy: number;
  transactionReceivedBy: number;
  transactionPrintedBy: number;
  transactionDeletedBy: number;
  transactionUpdatedBy: number;
  chats: number;
  aiDocuments: number;
  aiSuggestions: number;
};

export type UserCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  sessions?: boolean | UserCountOutputTypeCountSessionsArgs;
  accounts?: boolean | UserCountOutputTypeCountAccountsArgs;
  apikeys?: boolean | UserCountOutputTypeCountApikeysArgs;
  contacts?: boolean | UserCountOutputTypeCountContactsArgs;
  photos?: boolean | UserCountOutputTypeCountPhotosArgs;
  reportQueues?: boolean | UserCountOutputTypeCountReportQueuesArgs;
  staffs?: boolean | UserCountOutputTypeCountStaffsArgs;
  students?: boolean | UserCountOutputTypeCountStudentsArgs;
  tokens?: boolean | UserCountOutputTypeCountTokensArgs;
  roles?: boolean | UserCountOutputTypeCountRolesArgs;
  assignments?: boolean | UserCountOutputTypeCountAssignmentsArgs;
  reportCards?: boolean | UserCountOutputTypeCountReportCardsArgs;
  announcements?: boolean | UserCountOutputTypeCountAnnouncementsArgs;
  recipients?: boolean | UserCountOutputTypeCountRecipientsArgs;
  policies?: boolean | UserCountOutputTypeCountPoliciesArgs;
  gradeSheets?: boolean | UserCountOutputTypeCountGradeSheetsArgs;
  religion?: boolean | UserCountOutputTypeCountReligionArgs;
  clubs?: boolean | UserCountOutputTypeCountClubsArgs;
  clubs2?: boolean | UserCountOutputTypeCountClubs2Args;
  documents?: boolean | UserCountOutputTypeCountDocumentsArgs;
  documentCreatedBy?: boolean | UserCountOutputTypeCountDocumentCreatedByArgs;
  teachingSessions?: boolean | UserCountOutputTypeCountTeachingSessionsArgs;
  borrowedBooks?: boolean | UserCountOutputTypeCountBorrowedBooksArgs;
  healthVisits?: boolean | UserCountOutputTypeCountHealthVisitsArgs;
  logActivities?: boolean | UserCountOutputTypeCountLogActivitiesArgs;
  notificationPreferences?:
    | boolean
    | UserCountOutputTypeCountNotificationPreferencesArgs;
  sentEmails?: boolean | UserCountOutputTypeCountSentEmailsArgs;
  receivedEmails?: boolean | UserCountOutputTypeCountReceivedEmailsArgs;
  subscriptions?: boolean | UserCountOutputTypeCountSubscriptionsArgs;
  createdSubscriptions?:
    | boolean
    | UserCountOutputTypeCountCreatedSubscriptionsArgs;
  accessedCommunicationChannel?:
    | boolean
    | UserCountOutputTypeCountAccessedCommunicationChannelArgs;
  assetAssignmentUsages?:
    | boolean
    | UserCountOutputTypeCountAssetAssignmentUsagesArgs;
  stockMovements?: boolean | UserCountOutputTypeCountStockMovementsArgs;
  consumableUsages?: boolean | UserCountOutputTypeCountConsumableUsagesArgs;
  createdConsumableUsages?:
    | boolean
    | UserCountOutputTypeCountCreatedConsumableUsagesArgs;
  notifications?: boolean | UserCountOutputTypeCountNotificationsArgs;
  enrollmentCreatedBy?:
    | boolean
    | UserCountOutputTypeCountEnrollmentCreatedByArgs;
  classroomCreatedBy?: boolean | UserCountOutputTypeCountClassroomCreatedByArgs;
  transactionCreatedBy?:
    | boolean
    | UserCountOutputTypeCountTransactionCreatedByArgs;
  transactionReceivedBy?:
    | boolean
    | UserCountOutputTypeCountTransactionReceivedByArgs;
  transactionPrintedBy?:
    | boolean
    | UserCountOutputTypeCountTransactionPrintedByArgs;
  transactionDeletedBy?:
    | boolean
    | UserCountOutputTypeCountTransactionDeletedByArgs;
  transactionUpdatedBy?:
    | boolean
    | UserCountOutputTypeCountTransactionUpdatedByArgs;
  chats?: boolean | UserCountOutputTypeCountChatsArgs;
  aiDocuments?: boolean | UserCountOutputTypeCountAiDocumentsArgs;
  aiSuggestions?: boolean | UserCountOutputTypeCountAiSuggestionsArgs;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSessionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SessionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAccountsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AccountWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountApikeysArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ApikeyWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountContactsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ContactWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountPhotosArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PhotoWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReportQueuesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReportQueueWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountStaffsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StaffWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountStudentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTokensArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TokenWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRolesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserRoleWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAssignmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AssignmentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReportCardsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReportCardWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAnnouncementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AnnouncementWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRecipientsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.RecipientWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountPoliciesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserPolicyWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountGradeSheetsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.GradeSheetWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReligionArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReligionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountClubsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClubWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountClubs2Args<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClubWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountDocumentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.DocumentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountDocumentCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.DocumentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTeachingSessionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TeachingSessionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountBorrowedBooksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.BorrowedBookWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountHealthVisitsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.HealthVisitWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountLogActivitiesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.LogActivityWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationPreferencesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.NotificationPreferenceWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSentEmailsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EmailWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReceivedEmailsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EmailRecipientWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSubscriptionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SubscriptionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedSubscriptionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SubscriptionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAccessedCommunicationChannelArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CommunicationChannelWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAssetAssignmentUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryAssetUsageWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountStockMovementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryStockMovementWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountConsumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryConsumableUsageWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedConsumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryConsumableUsageWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserNotificationWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountEnrollmentCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EnrollmentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountClassroomCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionReceivedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionPrintedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionDeletedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTransactionUpdatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountChatsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AiChatWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAiDocumentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AiDocumentWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAiSuggestionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AiSuggestionWhereInput;
};

export type UserSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    email?: boolean;
    emailVerified?: boolean;
    image?: boolean;
    username?: boolean;
    displayUsername?: boolean;
    role?: boolean;
    banned?: boolean;
    banReason?: boolean;
    banExpires?: boolean;
    avatar?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    profile?: boolean;
    permissions?: boolean;
    schoolId?: boolean;
    sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>;
    accounts?: boolean | Prisma.User$accountsArgs<ExtArgs>;
    apikeys?: boolean | Prisma.User$apikeysArgs<ExtArgs>;
    contacts?: boolean | Prisma.User$contactsArgs<ExtArgs>;
    photos?: boolean | Prisma.User$photosArgs<ExtArgs>;
    reportQueues?: boolean | Prisma.User$reportQueuesArgs<ExtArgs>;
    staffs?: boolean | Prisma.User$staffsArgs<ExtArgs>;
    students?: boolean | Prisma.User$studentsArgs<ExtArgs>;
    tokens?: boolean | Prisma.User$tokensArgs<ExtArgs>;
    roles?: boolean | Prisma.User$rolesArgs<ExtArgs>;
    assignments?: boolean | Prisma.User$assignmentsArgs<ExtArgs>;
    reportCards?: boolean | Prisma.User$reportCardsArgs<ExtArgs>;
    announcements?: boolean | Prisma.User$announcementsArgs<ExtArgs>;
    recipients?: boolean | Prisma.User$recipientsArgs<ExtArgs>;
    policies?: boolean | Prisma.User$policiesArgs<ExtArgs>;
    gradeSheets?: boolean | Prisma.User$gradeSheetsArgs<ExtArgs>;
    religion?: boolean | Prisma.User$religionArgs<ExtArgs>;
    clubs?: boolean | Prisma.User$clubsArgs<ExtArgs>;
    clubs2?: boolean | Prisma.User$clubs2Args<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
    documents?: boolean | Prisma.User$documentsArgs<ExtArgs>;
    documentCreatedBy?: boolean | Prisma.User$documentCreatedByArgs<ExtArgs>;
    teachingSessions?: boolean | Prisma.User$teachingSessionsArgs<ExtArgs>;
    borrowedBooks?: boolean | Prisma.User$borrowedBooksArgs<ExtArgs>;
    healthVisits?: boolean | Prisma.User$healthVisitsArgs<ExtArgs>;
    logActivities?: boolean | Prisma.User$logActivitiesArgs<ExtArgs>;
    notificationPreferences?:
      | boolean
      | Prisma.User$notificationPreferencesArgs<ExtArgs>;
    sentEmails?: boolean | Prisma.User$sentEmailsArgs<ExtArgs>;
    receivedEmails?: boolean | Prisma.User$receivedEmailsArgs<ExtArgs>;
    subscriptions?: boolean | Prisma.User$subscriptionsArgs<ExtArgs>;
    createdSubscriptions?:
      | boolean
      | Prisma.User$createdSubscriptionsArgs<ExtArgs>;
    accessedCommunicationChannel?:
      | boolean
      | Prisma.User$accessedCommunicationChannelArgs<ExtArgs>;
    assetAssignmentUsages?:
      | boolean
      | Prisma.User$assetAssignmentUsagesArgs<ExtArgs>;
    stockMovements?: boolean | Prisma.User$stockMovementsArgs<ExtArgs>;
    consumableUsages?: boolean | Prisma.User$consumableUsagesArgs<ExtArgs>;
    createdConsumableUsages?:
      | boolean
      | Prisma.User$createdConsumableUsagesArgs<ExtArgs>;
    notifications?: boolean | Prisma.User$notificationsArgs<ExtArgs>;
    enrollmentCreatedBy?:
      | boolean
      | Prisma.User$enrollmentCreatedByArgs<ExtArgs>;
    classroomCreatedBy?: boolean | Prisma.User$classroomCreatedByArgs<ExtArgs>;
    transactionCreatedBy?:
      | boolean
      | Prisma.User$transactionCreatedByArgs<ExtArgs>;
    transactionReceivedBy?:
      | boolean
      | Prisma.User$transactionReceivedByArgs<ExtArgs>;
    transactionPrintedBy?:
      | boolean
      | Prisma.User$transactionPrintedByArgs<ExtArgs>;
    transactionDeletedBy?:
      | boolean
      | Prisma.User$transactionDeletedByArgs<ExtArgs>;
    transactionUpdatedBy?:
      | boolean
      | Prisma.User$transactionUpdatedByArgs<ExtArgs>;
    chats?: boolean | Prisma.User$chatsArgs<ExtArgs>;
    aiDocuments?: boolean | Prisma.User$aiDocumentsArgs<ExtArgs>;
    aiSuggestions?: boolean | Prisma.User$aiSuggestionsArgs<ExtArgs>;
    _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["user"]
>;

export type UserSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    email?: boolean;
    emailVerified?: boolean;
    image?: boolean;
    username?: boolean;
    displayUsername?: boolean;
    role?: boolean;
    banned?: boolean;
    banReason?: boolean;
    banExpires?: boolean;
    avatar?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    profile?: boolean;
    permissions?: boolean;
    schoolId?: boolean;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["user"]
>;

export type UserSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    email?: boolean;
    emailVerified?: boolean;
    image?: boolean;
    username?: boolean;
    displayUsername?: boolean;
    role?: boolean;
    banned?: boolean;
    banReason?: boolean;
    banExpires?: boolean;
    avatar?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    profile?: boolean;
    permissions?: boolean;
    schoolId?: boolean;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["user"]
>;

export type UserSelectScalar = {
  id?: boolean;
  name?: boolean;
  email?: boolean;
  emailVerified?: boolean;
  image?: boolean;
  username?: boolean;
  displayUsername?: boolean;
  role?: boolean;
  banned?: boolean;
  banReason?: boolean;
  banExpires?: boolean;
  avatar?: boolean;
  isActive?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  profile?: boolean;
  permissions?: boolean;
  schoolId?: boolean;
};

export type UserOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "name"
  | "email"
  | "emailVerified"
  | "image"
  | "username"
  | "displayUsername"
  | "role"
  | "banned"
  | "banReason"
  | "banExpires"
  | "avatar"
  | "isActive"
  | "createdAt"
  | "updatedAt"
  | "profile"
  | "permissions"
  | "schoolId",
  ExtArgs["result"]["user"]
>;
export type UserInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>;
  accounts?: boolean | Prisma.User$accountsArgs<ExtArgs>;
  apikeys?: boolean | Prisma.User$apikeysArgs<ExtArgs>;
  contacts?: boolean | Prisma.User$contactsArgs<ExtArgs>;
  photos?: boolean | Prisma.User$photosArgs<ExtArgs>;
  reportQueues?: boolean | Prisma.User$reportQueuesArgs<ExtArgs>;
  staffs?: boolean | Prisma.User$staffsArgs<ExtArgs>;
  students?: boolean | Prisma.User$studentsArgs<ExtArgs>;
  tokens?: boolean | Prisma.User$tokensArgs<ExtArgs>;
  roles?: boolean | Prisma.User$rolesArgs<ExtArgs>;
  assignments?: boolean | Prisma.User$assignmentsArgs<ExtArgs>;
  reportCards?: boolean | Prisma.User$reportCardsArgs<ExtArgs>;
  announcements?: boolean | Prisma.User$announcementsArgs<ExtArgs>;
  recipients?: boolean | Prisma.User$recipientsArgs<ExtArgs>;
  policies?: boolean | Prisma.User$policiesArgs<ExtArgs>;
  gradeSheets?: boolean | Prisma.User$gradeSheetsArgs<ExtArgs>;
  religion?: boolean | Prisma.User$religionArgs<ExtArgs>;
  clubs?: boolean | Prisma.User$clubsArgs<ExtArgs>;
  clubs2?: boolean | Prisma.User$clubs2Args<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  documents?: boolean | Prisma.User$documentsArgs<ExtArgs>;
  documentCreatedBy?: boolean | Prisma.User$documentCreatedByArgs<ExtArgs>;
  teachingSessions?: boolean | Prisma.User$teachingSessionsArgs<ExtArgs>;
  borrowedBooks?: boolean | Prisma.User$borrowedBooksArgs<ExtArgs>;
  healthVisits?: boolean | Prisma.User$healthVisitsArgs<ExtArgs>;
  logActivities?: boolean | Prisma.User$logActivitiesArgs<ExtArgs>;
  notificationPreferences?:
    | boolean
    | Prisma.User$notificationPreferencesArgs<ExtArgs>;
  sentEmails?: boolean | Prisma.User$sentEmailsArgs<ExtArgs>;
  receivedEmails?: boolean | Prisma.User$receivedEmailsArgs<ExtArgs>;
  subscriptions?: boolean | Prisma.User$subscriptionsArgs<ExtArgs>;
  createdSubscriptions?:
    | boolean
    | Prisma.User$createdSubscriptionsArgs<ExtArgs>;
  accessedCommunicationChannel?:
    | boolean
    | Prisma.User$accessedCommunicationChannelArgs<ExtArgs>;
  assetAssignmentUsages?:
    | boolean
    | Prisma.User$assetAssignmentUsagesArgs<ExtArgs>;
  stockMovements?: boolean | Prisma.User$stockMovementsArgs<ExtArgs>;
  consumableUsages?: boolean | Prisma.User$consumableUsagesArgs<ExtArgs>;
  createdConsumableUsages?:
    | boolean
    | Prisma.User$createdConsumableUsagesArgs<ExtArgs>;
  notifications?: boolean | Prisma.User$notificationsArgs<ExtArgs>;
  enrollmentCreatedBy?: boolean | Prisma.User$enrollmentCreatedByArgs<ExtArgs>;
  classroomCreatedBy?: boolean | Prisma.User$classroomCreatedByArgs<ExtArgs>;
  transactionCreatedBy?:
    | boolean
    | Prisma.User$transactionCreatedByArgs<ExtArgs>;
  transactionReceivedBy?:
    | boolean
    | Prisma.User$transactionReceivedByArgs<ExtArgs>;
  transactionPrintedBy?:
    | boolean
    | Prisma.User$transactionPrintedByArgs<ExtArgs>;
  transactionDeletedBy?:
    | boolean
    | Prisma.User$transactionDeletedByArgs<ExtArgs>;
  transactionUpdatedBy?:
    | boolean
    | Prisma.User$transactionUpdatedByArgs<ExtArgs>;
  chats?: boolean | Prisma.User$chatsArgs<ExtArgs>;
  aiDocuments?: boolean | Prisma.User$aiDocumentsArgs<ExtArgs>;
  aiSuggestions?: boolean | Prisma.User$aiSuggestionsArgs<ExtArgs>;
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>;
};
export type UserIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};
export type UserIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};

export type $UserPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "User";
  objects: {
    sessions: Prisma.$SessionPayload<ExtArgs>[];
    accounts: Prisma.$AccountPayload<ExtArgs>[];
    apikeys: Prisma.$ApikeyPayload<ExtArgs>[];
    contacts: Prisma.$ContactPayload<ExtArgs>[];
    photos: Prisma.$PhotoPayload<ExtArgs>[];
    reportQueues: Prisma.$ReportQueuePayload<ExtArgs>[];
    staffs: Prisma.$StaffPayload<ExtArgs>[];
    students: Prisma.$StudentPayload<ExtArgs>[];
    tokens: Prisma.$TokenPayload<ExtArgs>[];
    roles: Prisma.$UserRolePayload<ExtArgs>[];
    assignments: Prisma.$AssignmentPayload<ExtArgs>[];
    reportCards: Prisma.$ReportCardPayload<ExtArgs>[];
    announcements: Prisma.$AnnouncementPayload<ExtArgs>[];
    recipients: Prisma.$RecipientPayload<ExtArgs>[];
    policies: Prisma.$UserPolicyPayload<ExtArgs>[];
    gradeSheets: Prisma.$GradeSheetPayload<ExtArgs>[];
    religion: Prisma.$ReligionPayload<ExtArgs>[];
    clubs: Prisma.$ClubPayload<ExtArgs>[];
    clubs2: Prisma.$ClubPayload<ExtArgs>[];
    school: Prisma.$SchoolPayload<ExtArgs>;
    documents: Prisma.$DocumentPayload<ExtArgs>[];
    documentCreatedBy: Prisma.$DocumentPayload<ExtArgs>[];
    teachingSessions: Prisma.$TeachingSessionPayload<ExtArgs>[];
    borrowedBooks: Prisma.$BorrowedBookPayload<ExtArgs>[];
    healthVisits: Prisma.$HealthVisitPayload<ExtArgs>[];
    logActivities: Prisma.$LogActivityPayload<ExtArgs>[];
    notificationPreferences: Prisma.$NotificationPreferencePayload<ExtArgs>[];
    sentEmails: Prisma.$EmailPayload<ExtArgs>[];
    receivedEmails: Prisma.$EmailRecipientPayload<ExtArgs>[];
    subscriptions: Prisma.$SubscriptionPayload<ExtArgs>[];
    createdSubscriptions: Prisma.$SubscriptionPayload<ExtArgs>[];
    accessedCommunicationChannel: Prisma.$CommunicationChannelPayload<ExtArgs>[];
    assetAssignmentUsages: Prisma.$InventoryAssetUsagePayload<ExtArgs>[];
    stockMovements: Prisma.$InventoryStockMovementPayload<ExtArgs>[];
    consumableUsages: Prisma.$InventoryConsumableUsagePayload<ExtArgs>[];
    createdConsumableUsages: Prisma.$InventoryConsumableUsagePayload<ExtArgs>[];
    notifications: Prisma.$UserNotificationPayload<ExtArgs>[];
    enrollmentCreatedBy: Prisma.$EnrollmentPayload<ExtArgs>[];
    classroomCreatedBy: Prisma.$ClassroomPayload<ExtArgs>[];
    transactionCreatedBy: Prisma.$TransactionPayload<ExtArgs>[];
    transactionReceivedBy: Prisma.$TransactionPayload<ExtArgs>[];
    transactionPrintedBy: Prisma.$TransactionPayload<ExtArgs>[];
    transactionDeletedBy: Prisma.$TransactionPayload<ExtArgs>[];
    transactionUpdatedBy: Prisma.$TransactionPayload<ExtArgs>[];
    chats: Prisma.$AiChatPayload<ExtArgs>[];
    aiDocuments: Prisma.$AiDocumentPayload<ExtArgs>[];
    aiSuggestions: Prisma.$AiSuggestionPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      name: string;
      email: string;
      emailVerified: boolean;
      image: string | null;
      username: string;
      displayUsername: string | null;
      role: string | null;
      banned: boolean | null;
      banReason: string | null;
      banExpires: Date | null;
      avatar: string | null;
      isActive: boolean;
      createdAt: Date;
      updatedAt: Date;
      profile: string;
      permissions: runtime.JsonValue | null;
      schoolId: string;
    },
    ExtArgs["result"]["user"]
  >;
  composites: {};
};

export type UserGetPayload<
  S extends boolean | null | undefined | UserDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>;

export type UserCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<UserFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: UserCountAggregateInputType | true;
};

export interface UserDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["User"];
    meta: { name: "User" };
  };
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(
    args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(
    args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   *
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   *
   */
  findMany<T extends UserFindManyArgs>(
    args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   *
   */
  create<T extends UserCreateArgs>(
    args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends UserCreateManyArgs>(
    args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   *
   */
  delete<T extends UserDeleteArgs>(
    args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends UserUpdateArgs>(
    args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends UserDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends UserUpdateManyArgs>(
    args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(
    args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
   **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], UserCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends UserAggregateArgs>(
    args: Prisma.Subset<T, UserAggregateArgs>,
  ): Prisma.PrismaPromise<GetUserAggregateType<T>>;

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs["orderBy"] }
      : { orderBy?: UserGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetUserGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  sessions<T extends Prisma.User$sessionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$sessionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SessionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  accounts<T extends Prisma.User$accountsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$accountsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AccountPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  apikeys<T extends Prisma.User$apikeysArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$apikeysArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ApikeyPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  contacts<T extends Prisma.User$contactsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$contactsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ContactPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  photos<T extends Prisma.User$photosArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$photosArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PhotoPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  reportQueues<T extends Prisma.User$reportQueuesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$reportQueuesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReportQueuePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  staffs<T extends Prisma.User$staffsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$staffsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StaffPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  students<T extends Prisma.User$studentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$studentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  tokens<T extends Prisma.User$tokensArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$tokensArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TokenPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  roles<T extends Prisma.User$rolesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$rolesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$UserRolePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  assignments<T extends Prisma.User$assignmentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$assignmentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AssignmentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  reportCards<T extends Prisma.User$reportCardsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$reportCardsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReportCardPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  announcements<T extends Prisma.User$announcementsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$announcementsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AnnouncementPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  recipients<T extends Prisma.User$recipientsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$recipientsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$RecipientPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  policies<T extends Prisma.User$policiesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$policiesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPolicyPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  gradeSheets<T extends Prisma.User$gradeSheetsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$gradeSheetsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$GradeSheetPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  religion<T extends Prisma.User$religionArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$religionArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReligionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  clubs<T extends Prisma.User$clubsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$clubsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClubPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  clubs2<T extends Prisma.User$clubs2Args<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$clubs2Args<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClubPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  documents<T extends Prisma.User$documentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$documentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$DocumentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  documentCreatedBy<T extends Prisma.User$documentCreatedByArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$documentCreatedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$DocumentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  teachingSessions<T extends Prisma.User$teachingSessionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$teachingSessionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TeachingSessionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  borrowedBooks<T extends Prisma.User$borrowedBooksArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$borrowedBooksArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$BorrowedBookPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  healthVisits<T extends Prisma.User$healthVisitsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$healthVisitsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$HealthVisitPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  logActivities<T extends Prisma.User$logActivitiesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$logActivitiesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$LogActivityPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  notificationPreferences<
    T extends Prisma.User$notificationPreferencesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$notificationPreferencesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$NotificationPreferencePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  sentEmails<T extends Prisma.User$sentEmailsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$sentEmailsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EmailPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  receivedEmails<T extends Prisma.User$receivedEmailsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$receivedEmailsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EmailRecipientPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  subscriptions<T extends Prisma.User$subscriptionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$subscriptionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SubscriptionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  createdSubscriptions<
    T extends Prisma.User$createdSubscriptionsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$createdSubscriptionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SubscriptionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  accessedCommunicationChannel<
    T extends Prisma.User$accessedCommunicationChannelArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.User$accessedCommunicationChannelArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CommunicationChannelPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  assetAssignmentUsages<
    T extends Prisma.User$assetAssignmentUsagesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$assetAssignmentUsagesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryAssetUsagePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  stockMovements<T extends Prisma.User$stockMovementsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$stockMovementsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryStockMovementPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  consumableUsages<T extends Prisma.User$consumableUsagesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$consumableUsagesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumableUsagePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  createdConsumableUsages<
    T extends Prisma.User$createdConsumableUsagesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$createdConsumableUsagesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumableUsagePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  notifications<T extends Prisma.User$notificationsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$notificationsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$UserNotificationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  enrollmentCreatedBy<
    T extends Prisma.User$enrollmentCreatedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$enrollmentCreatedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EnrollmentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  classroomCreatedBy<
    T extends Prisma.User$classroomCreatedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$classroomCreatedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactionCreatedBy<
    T extends Prisma.User$transactionCreatedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$transactionCreatedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactionReceivedBy<
    T extends Prisma.User$transactionReceivedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$transactionReceivedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactionPrintedBy<
    T extends Prisma.User$transactionPrintedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$transactionPrintedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactionDeletedBy<
    T extends Prisma.User$transactionDeletedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$transactionDeletedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactionUpdatedBy<
    T extends Prisma.User$transactionUpdatedByArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$transactionUpdatedByArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  chats<T extends Prisma.User$chatsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$chatsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AiChatPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  aiDocuments<T extends Prisma.User$aiDocumentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$aiDocumentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AiDocumentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  aiSuggestions<T extends Prisma.User$aiSuggestionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$aiSuggestionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AiSuggestionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", "String">;
  readonly name: Prisma.FieldRef<"User", "String">;
  readonly email: Prisma.FieldRef<"User", "String">;
  readonly emailVerified: Prisma.FieldRef<"User", "Boolean">;
  readonly image: Prisma.FieldRef<"User", "String">;
  readonly username: Prisma.FieldRef<"User", "String">;
  readonly displayUsername: Prisma.FieldRef<"User", "String">;
  readonly role: Prisma.FieldRef<"User", "String">;
  readonly banned: Prisma.FieldRef<"User", "Boolean">;
  readonly banReason: Prisma.FieldRef<"User", "String">;
  readonly banExpires: Prisma.FieldRef<"User", "DateTime">;
  readonly avatar: Prisma.FieldRef<"User", "String">;
  readonly isActive: Prisma.FieldRef<"User", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"User", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"User", "DateTime">;
  readonly profile: Prisma.FieldRef<"User", "String">;
  readonly permissions: Prisma.FieldRef<"User", "Json">;
  readonly schoolId: Prisma.FieldRef<"User", "String">;
}

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User findFirst
 */
export type UserFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User findMany
 */
export type UserFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User create
 */
export type UserCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>;
};

/**
 * User createMany
 */
export type UserCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * User update
 */
export type UserUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>;
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User updateMany
 */
export type UserUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<
    Prisma.UserUpdateManyMutationInput,
    Prisma.UserUncheckedUpdateManyInput
  >;
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to update.
   */
  limit?: number;
};

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<
    Prisma.UserUpdateManyMutationInput,
    Prisma.UserUncheckedUpdateManyInput
  >;
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * User upsert
 */
export type UserUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput;
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>;
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>;
};

/**
 * User delete
 */
export type UserDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to delete.
   */
  limit?: number;
};

/**
 * User.sessions
 */
export type User$sessionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null;
  where?: Prisma.SessionWhereInput;
  orderBy?:
    | Prisma.SessionOrderByWithRelationInput
    | Prisma.SessionOrderByWithRelationInput[];
  cursor?: Prisma.SessionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[];
};

/**
 * User.accounts
 */
export type User$accountsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Account
   */
  select?: Prisma.AccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Account
   */
  omit?: Prisma.AccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountInclude<ExtArgs> | null;
  where?: Prisma.AccountWhereInput;
  orderBy?:
    | Prisma.AccountOrderByWithRelationInput
    | Prisma.AccountOrderByWithRelationInput[];
  cursor?: Prisma.AccountWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.AccountScalarFieldEnum | Prisma.AccountScalarFieldEnum[];
};

/**
 * User.apikeys
 */
export type User$apikeysArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Apikey
   */
  select?: Prisma.ApikeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Apikey
   */
  omit?: Prisma.ApikeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApikeyInclude<ExtArgs> | null;
  where?: Prisma.ApikeyWhereInput;
  orderBy?:
    | Prisma.ApikeyOrderByWithRelationInput
    | Prisma.ApikeyOrderByWithRelationInput[];
  cursor?: Prisma.ApikeyWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ApikeyScalarFieldEnum | Prisma.ApikeyScalarFieldEnum[];
};

/**
 * User.contacts
 */
export type User$contactsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Contact
   */
  select?: Prisma.ContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Contact
   */
  omit?: Prisma.ContactOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContactInclude<ExtArgs> | null;
  where?: Prisma.ContactWhereInput;
  orderBy?:
    | Prisma.ContactOrderByWithRelationInput
    | Prisma.ContactOrderByWithRelationInput[];
  cursor?: Prisma.ContactWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ContactScalarFieldEnum | Prisma.ContactScalarFieldEnum[];
};

/**
 * User.photos
 */
export type User$photosArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Photo
   */
  select?: Prisma.PhotoSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Photo
   */
  omit?: Prisma.PhotoOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PhotoInclude<ExtArgs> | null;
  where?: Prisma.PhotoWhereInput;
  orderBy?:
    | Prisma.PhotoOrderByWithRelationInput
    | Prisma.PhotoOrderByWithRelationInput[];
  cursor?: Prisma.PhotoWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.PhotoScalarFieldEnum | Prisma.PhotoScalarFieldEnum[];
};

/**
 * User.reportQueues
 */
export type User$reportQueuesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ReportQueue
   */
  select?: Prisma.ReportQueueSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ReportQueue
   */
  omit?: Prisma.ReportQueueOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReportQueueInclude<ExtArgs> | null;
  where?: Prisma.ReportQueueWhereInput;
  orderBy?:
    | Prisma.ReportQueueOrderByWithRelationInput
    | Prisma.ReportQueueOrderByWithRelationInput[];
  cursor?: Prisma.ReportQueueWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ReportQueueScalarFieldEnum
    | Prisma.ReportQueueScalarFieldEnum[];
};

/**
 * User.staffs
 */
export type User$staffsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  where?: Prisma.StaffWhereInput;
  orderBy?:
    | Prisma.StaffOrderByWithRelationInput
    | Prisma.StaffOrderByWithRelationInput[];
  cursor?: Prisma.StaffWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[];
};

/**
 * User.students
 */
export type User$studentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  where?: Prisma.StudentWhereInput;
  orderBy?:
    | Prisma.StudentOrderByWithRelationInput
    | Prisma.StudentOrderByWithRelationInput[];
  cursor?: Prisma.StudentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[];
};

/**
 * User.tokens
 */
export type User$tokensArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Token
   */
  select?: Prisma.TokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Token
   */
  omit?: Prisma.TokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TokenInclude<ExtArgs> | null;
  where?: Prisma.TokenWhereInput;
  orderBy?:
    | Prisma.TokenOrderByWithRelationInput
    | Prisma.TokenOrderByWithRelationInput[];
  cursor?: Prisma.TokenWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.TokenScalarFieldEnum | Prisma.TokenScalarFieldEnum[];
};

/**
 * User.roles
 */
export type User$rolesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserRole
   */
  select?: Prisma.UserRoleSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the UserRole
   */
  omit?: Prisma.UserRoleOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserRoleInclude<ExtArgs> | null;
  where?: Prisma.UserRoleWhereInput;
  orderBy?:
    | Prisma.UserRoleOrderByWithRelationInput
    | Prisma.UserRoleOrderByWithRelationInput[];
  cursor?: Prisma.UserRoleWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.UserRoleScalarFieldEnum | Prisma.UserRoleScalarFieldEnum[];
};

/**
 * User.assignments
 */
export type User$assignmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Assignment
   */
  select?: Prisma.AssignmentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Assignment
   */
  omit?: Prisma.AssignmentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssignmentInclude<ExtArgs> | null;
  where?: Prisma.AssignmentWhereInput;
  orderBy?:
    | Prisma.AssignmentOrderByWithRelationInput
    | Prisma.AssignmentOrderByWithRelationInput[];
  cursor?: Prisma.AssignmentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AssignmentScalarFieldEnum
    | Prisma.AssignmentScalarFieldEnum[];
};

/**
 * User.reportCards
 */
export type User$reportCardsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ReportCard
   */
  select?: Prisma.ReportCardSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ReportCard
   */
  omit?: Prisma.ReportCardOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReportCardInclude<ExtArgs> | null;
  where?: Prisma.ReportCardWhereInput;
  orderBy?:
    | Prisma.ReportCardOrderByWithRelationInput
    | Prisma.ReportCardOrderByWithRelationInput[];
  cursor?: Prisma.ReportCardWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ReportCardScalarFieldEnum
    | Prisma.ReportCardScalarFieldEnum[];
};

/**
 * User.announcements
 */
export type User$announcementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null;
  where?: Prisma.AnnouncementWhereInput;
  orderBy?:
    | Prisma.AnnouncementOrderByWithRelationInput
    | Prisma.AnnouncementOrderByWithRelationInput[];
  cursor?: Prisma.AnnouncementWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AnnouncementScalarFieldEnum
    | Prisma.AnnouncementScalarFieldEnum[];
};

/**
 * User.recipients
 */
export type User$recipientsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Recipient
   */
  select?: Prisma.RecipientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Recipient
   */
  omit?: Prisma.RecipientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecipientInclude<ExtArgs> | null;
  where?: Prisma.RecipientWhereInput;
  orderBy?:
    | Prisma.RecipientOrderByWithRelationInput
    | Prisma.RecipientOrderByWithRelationInput[];
  cursor?: Prisma.RecipientWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.RecipientScalarFieldEnum
    | Prisma.RecipientScalarFieldEnum[];
};

/**
 * User.policies
 */
export type User$policiesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserPolicy
   */
  select?: Prisma.UserPolicySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the UserPolicy
   */
  omit?: Prisma.UserPolicyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserPolicyInclude<ExtArgs> | null;
  where?: Prisma.UserPolicyWhereInput;
  orderBy?:
    | Prisma.UserPolicyOrderByWithRelationInput
    | Prisma.UserPolicyOrderByWithRelationInput[];
  cursor?: Prisma.UserPolicyWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.UserPolicyScalarFieldEnum
    | Prisma.UserPolicyScalarFieldEnum[];
};

/**
 * User.gradeSheets
 */
export type User$gradeSheetsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeSheet
   */
  select?: Prisma.GradeSheetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeSheet
   */
  omit?: Prisma.GradeSheetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeSheetInclude<ExtArgs> | null;
  where?: Prisma.GradeSheetWhereInput;
  orderBy?:
    | Prisma.GradeSheetOrderByWithRelationInput
    | Prisma.GradeSheetOrderByWithRelationInput[];
  cursor?: Prisma.GradeSheetWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.GradeSheetScalarFieldEnum
    | Prisma.GradeSheetScalarFieldEnum[];
};

/**
 * User.religion
 */
export type User$religionArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Religion
   */
  select?: Prisma.ReligionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Religion
   */
  omit?: Prisma.ReligionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReligionInclude<ExtArgs> | null;
  where?: Prisma.ReligionWhereInput;
  orderBy?:
    | Prisma.ReligionOrderByWithRelationInput
    | Prisma.ReligionOrderByWithRelationInput[];
  cursor?: Prisma.ReligionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ReligionScalarFieldEnum | Prisma.ReligionScalarFieldEnum[];
};

/**
 * User.clubs
 */
export type User$clubsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Club
   */
  select?: Prisma.ClubSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Club
   */
  omit?: Prisma.ClubOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClubInclude<ExtArgs> | null;
  where?: Prisma.ClubWhereInput;
  orderBy?:
    | Prisma.ClubOrderByWithRelationInput
    | Prisma.ClubOrderByWithRelationInput[];
  cursor?: Prisma.ClubWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ClubScalarFieldEnum | Prisma.ClubScalarFieldEnum[];
};

/**
 * User.clubs2
 */
export type User$clubs2Args<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Club
   */
  select?: Prisma.ClubSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Club
   */
  omit?: Prisma.ClubOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClubInclude<ExtArgs> | null;
  where?: Prisma.ClubWhereInput;
  orderBy?:
    | Prisma.ClubOrderByWithRelationInput
    | Prisma.ClubOrderByWithRelationInput[];
  cursor?: Prisma.ClubWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ClubScalarFieldEnum | Prisma.ClubScalarFieldEnum[];
};

/**
 * User.documents
 */
export type User$documentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Document
   */
  select?: Prisma.DocumentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Document
   */
  omit?: Prisma.DocumentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DocumentInclude<ExtArgs> | null;
  where?: Prisma.DocumentWhereInput;
  orderBy?:
    | Prisma.DocumentOrderByWithRelationInput
    | Prisma.DocumentOrderByWithRelationInput[];
  cursor?: Prisma.DocumentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.DocumentScalarFieldEnum | Prisma.DocumentScalarFieldEnum[];
};

/**
 * User.documentCreatedBy
 */
export type User$documentCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Document
   */
  select?: Prisma.DocumentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Document
   */
  omit?: Prisma.DocumentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DocumentInclude<ExtArgs> | null;
  where?: Prisma.DocumentWhereInput;
  orderBy?:
    | Prisma.DocumentOrderByWithRelationInput
    | Prisma.DocumentOrderByWithRelationInput[];
  cursor?: Prisma.DocumentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.DocumentScalarFieldEnum | Prisma.DocumentScalarFieldEnum[];
};

/**
 * User.teachingSessions
 */
export type User$teachingSessionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the TeachingSession
   */
  select?: Prisma.TeachingSessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the TeachingSession
   */
  omit?: Prisma.TeachingSessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeachingSessionInclude<ExtArgs> | null;
  where?: Prisma.TeachingSessionWhereInput;
  orderBy?:
    | Prisma.TeachingSessionOrderByWithRelationInput
    | Prisma.TeachingSessionOrderByWithRelationInput[];
  cursor?: Prisma.TeachingSessionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TeachingSessionScalarFieldEnum
    | Prisma.TeachingSessionScalarFieldEnum[];
};

/**
 * User.borrowedBooks
 */
export type User$borrowedBooksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the BorrowedBook
   */
  select?: Prisma.BorrowedBookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BorrowedBook
   */
  omit?: Prisma.BorrowedBookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BorrowedBookInclude<ExtArgs> | null;
  where?: Prisma.BorrowedBookWhereInput;
  orderBy?:
    | Prisma.BorrowedBookOrderByWithRelationInput
    | Prisma.BorrowedBookOrderByWithRelationInput[];
  cursor?: Prisma.BorrowedBookWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.BorrowedBookScalarFieldEnum
    | Prisma.BorrowedBookScalarFieldEnum[];
};

/**
 * User.healthVisits
 */
export type User$healthVisitsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the HealthVisit
   */
  select?: Prisma.HealthVisitSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the HealthVisit
   */
  omit?: Prisma.HealthVisitOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HealthVisitInclude<ExtArgs> | null;
  where?: Prisma.HealthVisitWhereInput;
  orderBy?:
    | Prisma.HealthVisitOrderByWithRelationInput
    | Prisma.HealthVisitOrderByWithRelationInput[];
  cursor?: Prisma.HealthVisitWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.HealthVisitScalarFieldEnum
    | Prisma.HealthVisitScalarFieldEnum[];
};

/**
 * User.logActivities
 */
export type User$logActivitiesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the LogActivity
   */
  select?: Prisma.LogActivitySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the LogActivity
   */
  omit?: Prisma.LogActivityOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LogActivityInclude<ExtArgs> | null;
  where?: Prisma.LogActivityWhereInput;
  orderBy?:
    | Prisma.LogActivityOrderByWithRelationInput
    | Prisma.LogActivityOrderByWithRelationInput[];
  cursor?: Prisma.LogActivityWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.LogActivityScalarFieldEnum
    | Prisma.LogActivityScalarFieldEnum[];
};

/**
 * User.notificationPreferences
 */
export type User$notificationPreferencesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the NotificationPreference
   */
  select?: Prisma.NotificationPreferenceSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the NotificationPreference
   */
  omit?: Prisma.NotificationPreferenceOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationPreferenceInclude<ExtArgs> | null;
  where?: Prisma.NotificationPreferenceWhereInput;
  orderBy?:
    | Prisma.NotificationPreferenceOrderByWithRelationInput
    | Prisma.NotificationPreferenceOrderByWithRelationInput[];
  cursor?: Prisma.NotificationPreferenceWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.NotificationPreferenceScalarFieldEnum
    | Prisma.NotificationPreferenceScalarFieldEnum[];
};

/**
 * User.sentEmails
 */
export type User$sentEmailsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Email
   */
  select?: Prisma.EmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Email
   */
  omit?: Prisma.EmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailInclude<ExtArgs> | null;
  where?: Prisma.EmailWhereInput;
  orderBy?:
    | Prisma.EmailOrderByWithRelationInput
    | Prisma.EmailOrderByWithRelationInput[];
  cursor?: Prisma.EmailWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.EmailScalarFieldEnum | Prisma.EmailScalarFieldEnum[];
};

/**
 * User.receivedEmails
 */
export type User$receivedEmailsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailRecipient
   */
  select?: Prisma.EmailRecipientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailRecipient
   */
  omit?: Prisma.EmailRecipientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailRecipientInclude<ExtArgs> | null;
  where?: Prisma.EmailRecipientWhereInput;
  orderBy?:
    | Prisma.EmailRecipientOrderByWithRelationInput
    | Prisma.EmailRecipientOrderByWithRelationInput[];
  cursor?: Prisma.EmailRecipientWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.EmailRecipientScalarFieldEnum
    | Prisma.EmailRecipientScalarFieldEnum[];
};

/**
 * User.subscriptions
 */
export type User$subscriptionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Subscription
   */
  select?: Prisma.SubscriptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Subscription
   */
  omit?: Prisma.SubscriptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubscriptionInclude<ExtArgs> | null;
  where?: Prisma.SubscriptionWhereInput;
  orderBy?:
    | Prisma.SubscriptionOrderByWithRelationInput
    | Prisma.SubscriptionOrderByWithRelationInput[];
  cursor?: Prisma.SubscriptionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SubscriptionScalarFieldEnum
    | Prisma.SubscriptionScalarFieldEnum[];
};

/**
 * User.createdSubscriptions
 */
export type User$createdSubscriptionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Subscription
   */
  select?: Prisma.SubscriptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Subscription
   */
  omit?: Prisma.SubscriptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubscriptionInclude<ExtArgs> | null;
  where?: Prisma.SubscriptionWhereInput;
  orderBy?:
    | Prisma.SubscriptionOrderByWithRelationInput
    | Prisma.SubscriptionOrderByWithRelationInput[];
  cursor?: Prisma.SubscriptionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SubscriptionScalarFieldEnum
    | Prisma.SubscriptionScalarFieldEnum[];
};

/**
 * User.accessedCommunicationChannel
 */
export type User$accessedCommunicationChannelArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CommunicationChannel
   */
  select?: Prisma.CommunicationChannelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CommunicationChannel
   */
  omit?: Prisma.CommunicationChannelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CommunicationChannelInclude<ExtArgs> | null;
  where?: Prisma.CommunicationChannelWhereInput;
  orderBy?:
    | Prisma.CommunicationChannelOrderByWithRelationInput
    | Prisma.CommunicationChannelOrderByWithRelationInput[];
  cursor?: Prisma.CommunicationChannelWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.CommunicationChannelScalarFieldEnum
    | Prisma.CommunicationChannelScalarFieldEnum[];
};

/**
 * User.assetAssignmentUsages
 */
export type User$assetAssignmentUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryAssetUsage
   */
  select?: Prisma.InventoryAssetUsageSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryAssetUsage
   */
  omit?: Prisma.InventoryAssetUsageOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryAssetUsageInclude<ExtArgs> | null;
  where?: Prisma.InventoryAssetUsageWhereInput;
  orderBy?:
    | Prisma.InventoryAssetUsageOrderByWithRelationInput
    | Prisma.InventoryAssetUsageOrderByWithRelationInput[];
  cursor?: Prisma.InventoryAssetUsageWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryAssetUsageScalarFieldEnum
    | Prisma.InventoryAssetUsageScalarFieldEnum[];
};

/**
 * User.stockMovements
 */
export type User$stockMovementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  where?: Prisma.InventoryStockMovementWhereInput;
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryStockMovementScalarFieldEnum
    | Prisma.InventoryStockMovementScalarFieldEnum[];
};

/**
 * User.consumableUsages
 */
export type User$consumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryConsumableUsage
   */
  select?: Prisma.InventoryConsumableUsageSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryConsumableUsage
   */
  omit?: Prisma.InventoryConsumableUsageOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryConsumableUsageInclude<ExtArgs> | null;
  where?: Prisma.InventoryConsumableUsageWhereInput;
  orderBy?:
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput[];
  cursor?: Prisma.InventoryConsumableUsageWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryConsumableUsageScalarFieldEnum
    | Prisma.InventoryConsumableUsageScalarFieldEnum[];
};

/**
 * User.createdConsumableUsages
 */
export type User$createdConsumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryConsumableUsage
   */
  select?: Prisma.InventoryConsumableUsageSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryConsumableUsage
   */
  omit?: Prisma.InventoryConsumableUsageOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryConsumableUsageInclude<ExtArgs> | null;
  where?: Prisma.InventoryConsumableUsageWhereInput;
  orderBy?:
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput[];
  cursor?: Prisma.InventoryConsumableUsageWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryConsumableUsageScalarFieldEnum
    | Prisma.InventoryConsumableUsageScalarFieldEnum[];
};

/**
 * User.notifications
 */
export type User$notificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserNotification
   */
  select?: Prisma.UserNotificationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the UserNotification
   */
  omit?: Prisma.UserNotificationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserNotificationInclude<ExtArgs> | null;
  where?: Prisma.UserNotificationWhereInput;
  orderBy?:
    | Prisma.UserNotificationOrderByWithRelationInput
    | Prisma.UserNotificationOrderByWithRelationInput[];
  cursor?: Prisma.UserNotificationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.UserNotificationScalarFieldEnum
    | Prisma.UserNotificationScalarFieldEnum[];
};

/**
 * User.enrollmentCreatedBy
 */
export type User$enrollmentCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Enrollment
   */
  select?: Prisma.EnrollmentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Enrollment
   */
  omit?: Prisma.EnrollmentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EnrollmentInclude<ExtArgs> | null;
  where?: Prisma.EnrollmentWhereInput;
  orderBy?:
    | Prisma.EnrollmentOrderByWithRelationInput
    | Prisma.EnrollmentOrderByWithRelationInput[];
  cursor?: Prisma.EnrollmentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.EnrollmentScalarFieldEnum
    | Prisma.EnrollmentScalarFieldEnum[];
};

/**
 * User.classroomCreatedBy
 */
export type User$classroomCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * User.transactionCreatedBy
 */
export type User$transactionCreatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * User.transactionReceivedBy
 */
export type User$transactionReceivedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * User.transactionPrintedBy
 */
export type User$transactionPrintedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * User.transactionDeletedBy
 */
export type User$transactionDeletedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * User.transactionUpdatedBy
 */
export type User$transactionUpdatedByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * User.chats
 */
export type User$chatsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AiChat
   */
  select?: Prisma.AiChatSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AiChat
   */
  omit?: Prisma.AiChatOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AiChatInclude<ExtArgs> | null;
  where?: Prisma.AiChatWhereInput;
  orderBy?:
    | Prisma.AiChatOrderByWithRelationInput
    | Prisma.AiChatOrderByWithRelationInput[];
  cursor?: Prisma.AiChatWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.AiChatScalarFieldEnum | Prisma.AiChatScalarFieldEnum[];
};

/**
 * User.aiDocuments
 */
export type User$aiDocumentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AiDocument
   */
  select?: Prisma.AiDocumentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AiDocument
   */
  omit?: Prisma.AiDocumentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AiDocumentInclude<ExtArgs> | null;
  where?: Prisma.AiDocumentWhereInput;
  orderBy?:
    | Prisma.AiDocumentOrderByWithRelationInput
    | Prisma.AiDocumentOrderByWithRelationInput[];
  cursor?: Prisma.AiDocumentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AiDocumentScalarFieldEnum
    | Prisma.AiDocumentScalarFieldEnum[];
};

/**
 * User.aiSuggestions
 */
export type User$aiSuggestionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AiSuggestion
   */
  select?: Prisma.AiSuggestionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AiSuggestion
   */
  omit?: Prisma.AiSuggestionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AiSuggestionInclude<ExtArgs> | null;
  where?: Prisma.AiSuggestionWhereInput;
  orderBy?:
    | Prisma.AiSuggestionOrderByWithRelationInput
    | Prisma.AiSuggestionOrderByWithRelationInput[];
  cursor?: Prisma.AiSuggestionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AiSuggestionScalarFieldEnum
    | Prisma.AiSuggestionScalarFieldEnum[];
};

/**
 * User without action
 */
export type UserDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
};
