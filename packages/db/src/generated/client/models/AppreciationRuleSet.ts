/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `AppreciationRuleSet` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model AppreciationRuleSet
 *
 */
export type AppreciationRuleSetModel =
  runtime.Types.Result.DefaultSelection<Prisma.$AppreciationRuleSetPayload>;

export type AggregateAppreciationRuleSet = {
  _count: AppreciationRuleSetCountAggregateOutputType | null;
  _avg: AppreciationRuleSetAvgAggregateOutputType | null;
  _sum: AppreciationRuleSetSumAggregateOutputType | null;
  _min: AppreciationRuleSetMinAggregateOutputType | null;
  _max: AppreciationRuleSetMaxAggregateOutputType | null;
};

export type AppreciationRuleSetAvgAggregateOutputType = {
  scale: number | null;
};

export type AppreciationRuleSetSumAggregateOutputType = {
  scale: number | null;
};

export type AppreciationRuleSetMinAggregateOutputType = {
  id: string | null;
  name: string | null;
  scale: number | null;
};

export type AppreciationRuleSetMaxAggregateOutputType = {
  id: string | null;
  name: string | null;
  scale: number | null;
};

export type AppreciationRuleSetCountAggregateOutputType = {
  id: number;
  name: number;
  scale: number;
  _all: number;
};

export type AppreciationRuleSetAvgAggregateInputType = {
  scale?: true;
};

export type AppreciationRuleSetSumAggregateInputType = {
  scale?: true;
};

export type AppreciationRuleSetMinAggregateInputType = {
  id?: true;
  name?: true;
  scale?: true;
};

export type AppreciationRuleSetMaxAggregateInputType = {
  id?: true;
  name?: true;
  scale?: true;
};

export type AppreciationRuleSetCountAggregateInputType = {
  id?: true;
  name?: true;
  scale?: true;
  _all?: true;
};

export type AppreciationRuleSetAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AppreciationRuleSet to aggregate.
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationRuleSets to fetch.
   */
  orderBy?:
    | Prisma.AppreciationRuleSetOrderByWithRelationInput
    | Prisma.AppreciationRuleSetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AppreciationRuleSetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationRuleSets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationRuleSets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned AppreciationRuleSets
   **/
  _count?: true | AppreciationRuleSetCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: AppreciationRuleSetAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: AppreciationRuleSetSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AppreciationRuleSetMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AppreciationRuleSetMaxAggregateInputType;
};

export type GetAppreciationRuleSetAggregateType<
  T extends AppreciationRuleSetAggregateArgs,
> = {
  [P in keyof T & keyof AggregateAppreciationRuleSet]: P extends
    | "_count"
    | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAppreciationRuleSet[P]>
    : Prisma.GetScalarType<T[P], AggregateAppreciationRuleSet[P]>;
};

export type AppreciationRuleSetGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AppreciationRuleSetWhereInput;
  orderBy?:
    | Prisma.AppreciationRuleSetOrderByWithAggregationInput
    | Prisma.AppreciationRuleSetOrderByWithAggregationInput[];
  by:
    | Prisma.AppreciationRuleSetScalarFieldEnum[]
    | Prisma.AppreciationRuleSetScalarFieldEnum;
  having?: Prisma.AppreciationRuleSetScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AppreciationRuleSetCountAggregateInputType | true;
  _avg?: AppreciationRuleSetAvgAggregateInputType;
  _sum?: AppreciationRuleSetSumAggregateInputType;
  _min?: AppreciationRuleSetMinAggregateInputType;
  _max?: AppreciationRuleSetMaxAggregateInputType;
};

export type AppreciationRuleSetGroupByOutputType = {
  id: string;
  name: string;
  scale: number;
  _count: AppreciationRuleSetCountAggregateOutputType | null;
  _avg: AppreciationRuleSetAvgAggregateOutputType | null;
  _sum: AppreciationRuleSetSumAggregateOutputType | null;
  _min: AppreciationRuleSetMinAggregateOutputType | null;
  _max: AppreciationRuleSetMaxAggregateOutputType | null;
};

type GetAppreciationRuleSetGroupByPayload<
  T extends AppreciationRuleSetGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AppreciationRuleSetGroupByOutputType, T["by"]> & {
      [P in keyof T &
        keyof AppreciationRuleSetGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], AppreciationRuleSetGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], AppreciationRuleSetGroupByOutputType[P]>;
    }
  >
>;

export type AppreciationRuleSetWhereInput = {
  AND?:
    | Prisma.AppreciationRuleSetWhereInput
    | Prisma.AppreciationRuleSetWhereInput[];
  OR?: Prisma.AppreciationRuleSetWhereInput[];
  NOT?:
    | Prisma.AppreciationRuleSetWhereInput
    | Prisma.AppreciationRuleSetWhereInput[];
  id?: Prisma.StringFilter<"AppreciationRuleSet"> | string;
  name?: Prisma.StringFilter<"AppreciationRuleSet"> | string;
  scale?: Prisma.IntFilter<"AppreciationRuleSet"> | number;
  rules?: Prisma.AppreciationRuleListRelationFilter;
  schools?: Prisma.SchoolListRelationFilter;
  classrooms?: Prisma.ClassroomListRelationFilter;
  gradeSheets?: Prisma.GradeSheetListRelationFilter;
};

export type AppreciationRuleSetOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  scale?: Prisma.SortOrder;
  rules?: Prisma.AppreciationRuleOrderByRelationAggregateInput;
  schools?: Prisma.SchoolOrderByRelationAggregateInput;
  classrooms?: Prisma.ClassroomOrderByRelationAggregateInput;
  gradeSheets?: Prisma.GradeSheetOrderByRelationAggregateInput;
};

export type AppreciationRuleSetWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?:
      | Prisma.AppreciationRuleSetWhereInput
      | Prisma.AppreciationRuleSetWhereInput[];
    OR?: Prisma.AppreciationRuleSetWhereInput[];
    NOT?:
      | Prisma.AppreciationRuleSetWhereInput
      | Prisma.AppreciationRuleSetWhereInput[];
    name?: Prisma.StringFilter<"AppreciationRuleSet"> | string;
    scale?: Prisma.IntFilter<"AppreciationRuleSet"> | number;
    rules?: Prisma.AppreciationRuleListRelationFilter;
    schools?: Prisma.SchoolListRelationFilter;
    classrooms?: Prisma.ClassroomListRelationFilter;
    gradeSheets?: Prisma.GradeSheetListRelationFilter;
  },
  "id"
>;

export type AppreciationRuleSetOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  scale?: Prisma.SortOrder;
  _count?: Prisma.AppreciationRuleSetCountOrderByAggregateInput;
  _avg?: Prisma.AppreciationRuleSetAvgOrderByAggregateInput;
  _max?: Prisma.AppreciationRuleSetMaxOrderByAggregateInput;
  _min?: Prisma.AppreciationRuleSetMinOrderByAggregateInput;
  _sum?: Prisma.AppreciationRuleSetSumOrderByAggregateInput;
};

export type AppreciationRuleSetScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AppreciationRuleSetScalarWhereWithAggregatesInput
    | Prisma.AppreciationRuleSetScalarWhereWithAggregatesInput[];
  OR?: Prisma.AppreciationRuleSetScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AppreciationRuleSetScalarWhereWithAggregatesInput
    | Prisma.AppreciationRuleSetScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"AppreciationRuleSet"> | string;
  name?: Prisma.StringWithAggregatesFilter<"AppreciationRuleSet"> | string;
  scale?: Prisma.IntWithAggregatesFilter<"AppreciationRuleSet"> | number;
};

export type AppreciationRuleSetCreateInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleCreateNestedManyWithoutAppreciationRuleSetInput;
  schools?: Prisma.SchoolCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetUncheckedCreateInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  schools?: Prisma.SchoolUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUpdateManyWithoutAppreciationRuleSetNestedInput;
  schools?: Prisma.SchoolUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  schools?: Prisma.SchoolUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetCreateManyInput = {
  id?: string;
  name: string;
  scale?: number;
};

export type AppreciationRuleSetUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type AppreciationRuleSetUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type AppreciationRuleSetNullableScalarRelationFilter = {
  is?: Prisma.AppreciationRuleSetWhereInput | null;
  isNot?: Prisma.AppreciationRuleSetWhereInput | null;
};

export type AppreciationRuleSetCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  scale?: Prisma.SortOrder;
};

export type AppreciationRuleSetAvgOrderByAggregateInput = {
  scale?: Prisma.SortOrder;
};

export type AppreciationRuleSetMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  scale?: Prisma.SortOrder;
};

export type AppreciationRuleSetMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  scale?: Prisma.SortOrder;
};

export type AppreciationRuleSetSumOrderByAggregateInput = {
  scale?: Prisma.SortOrder;
};

export type AppreciationRuleSetScalarRelationFilter = {
  is?: Prisma.AppreciationRuleSetWhereInput;
  isNot?: Prisma.AppreciationRuleSetWhereInput;
};

export type AppreciationRuleSetCreateNestedOneWithoutClassroomsInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutClassroomsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutClassroomsInput;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
};

export type AppreciationRuleSetUpdateOneWithoutClassroomsNestedInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutClassroomsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutClassroomsInput;
  upsert?: Prisma.AppreciationRuleSetUpsertWithoutClassroomsInput;
  disconnect?: Prisma.AppreciationRuleSetWhereInput | boolean;
  delete?: Prisma.AppreciationRuleSetWhereInput | boolean;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AppreciationRuleSetUpdateToOneWithWhereWithoutClassroomsInput,
      Prisma.AppreciationRuleSetUpdateWithoutClassroomsInput
    >,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutClassroomsInput
  >;
};

export type AppreciationRuleSetCreateNestedOneWithoutGradeSheetsInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutGradeSheetsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutGradeSheetsInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutGradeSheetsInput;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
};

export type AppreciationRuleSetUpdateOneWithoutGradeSheetsNestedInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutGradeSheetsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutGradeSheetsInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutGradeSheetsInput;
  upsert?: Prisma.AppreciationRuleSetUpsertWithoutGradeSheetsInput;
  disconnect?: Prisma.AppreciationRuleSetWhereInput | boolean;
  delete?: Prisma.AppreciationRuleSetWhereInput | boolean;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AppreciationRuleSetUpdateToOneWithWhereWithoutGradeSheetsInput,
      Prisma.AppreciationRuleSetUpdateWithoutGradeSheetsInput
    >,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutGradeSheetsInput
  >;
};

export type AppreciationRuleSetCreateNestedOneWithoutSchoolsInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutSchoolsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutSchoolsInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutSchoolsInput;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
};

export type AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutSchoolsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutSchoolsInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutSchoolsInput;
  upsert?: Prisma.AppreciationRuleSetUpsertWithoutSchoolsInput;
  disconnect?: Prisma.AppreciationRuleSetWhereInput | boolean;
  delete?: Prisma.AppreciationRuleSetWhereInput | boolean;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AppreciationRuleSetUpdateToOneWithWhereWithoutSchoolsInput,
      Prisma.AppreciationRuleSetUpdateWithoutSchoolsInput
    >,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutSchoolsInput
  >;
};

export type AppreciationRuleSetCreateNestedOneWithoutRulesInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutRulesInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutRulesInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutRulesInput;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
};

export type AppreciationRuleSetUpdateOneRequiredWithoutRulesNestedInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutRulesInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutRulesInput
  >;
  connectOrCreate?: Prisma.AppreciationRuleSetCreateOrConnectWithoutRulesInput;
  upsert?: Prisma.AppreciationRuleSetUpsertWithoutRulesInput;
  connect?: Prisma.AppreciationRuleSetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AppreciationRuleSetUpdateToOneWithWhereWithoutRulesInput,
      Prisma.AppreciationRuleSetUpdateWithoutRulesInput
    >,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutRulesInput
  >;
};

export type AppreciationRuleSetCreateWithoutClassroomsInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleCreateNestedManyWithoutAppreciationRuleSetInput;
  schools?: Prisma.SchoolCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetUncheckedCreateWithoutClassroomsInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  schools?: Prisma.SchoolUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetCreateOrConnectWithoutClassroomsInput = {
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutClassroomsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutClassroomsInput
  >;
};

export type AppreciationRuleSetUpsertWithoutClassroomsInput = {
  update: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutClassroomsInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutClassroomsInput
  >;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutClassroomsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutClassroomsInput
  >;
  where?: Prisma.AppreciationRuleSetWhereInput;
};

export type AppreciationRuleSetUpdateToOneWithWhereWithoutClassroomsInput = {
  where?: Prisma.AppreciationRuleSetWhereInput;
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutClassroomsInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutClassroomsInput
  >;
};

export type AppreciationRuleSetUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUpdateManyWithoutAppreciationRuleSetNestedInput;
  schools?: Prisma.SchoolUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetUncheckedUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  schools?: Prisma.SchoolUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetCreateWithoutGradeSheetsInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleCreateNestedManyWithoutAppreciationRuleSetInput;
  schools?: Prisma.SchoolCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetUncheckedCreateWithoutGradeSheetsInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  schools?: Prisma.SchoolUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetCreateOrConnectWithoutGradeSheetsInput = {
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutGradeSheetsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutGradeSheetsInput
  >;
};

export type AppreciationRuleSetUpsertWithoutGradeSheetsInput = {
  update: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutGradeSheetsInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutGradeSheetsInput
  >;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutGradeSheetsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutGradeSheetsInput
  >;
  where?: Prisma.AppreciationRuleSetWhereInput;
};

export type AppreciationRuleSetUpdateToOneWithWhereWithoutGradeSheetsInput = {
  where?: Prisma.AppreciationRuleSetWhereInput;
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutGradeSheetsInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutGradeSheetsInput
  >;
};

export type AppreciationRuleSetUpdateWithoutGradeSheetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUpdateManyWithoutAppreciationRuleSetNestedInput;
  schools?: Prisma.SchoolUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetUncheckedUpdateWithoutGradeSheetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  schools?: Prisma.SchoolUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetCreateWithoutSchoolsInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetUncheckedCreateWithoutSchoolsInput = {
  id?: string;
  name: string;
  scale?: number;
  rules?: Prisma.AppreciationRuleUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetCreateOrConnectWithoutSchoolsInput = {
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutSchoolsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutSchoolsInput
  >;
};

export type AppreciationRuleSetUpsertWithoutSchoolsInput = {
  update: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutSchoolsInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutSchoolsInput
  >;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutSchoolsInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutSchoolsInput
  >;
  where?: Prisma.AppreciationRuleSetWhereInput;
};

export type AppreciationRuleSetUpdateToOneWithWhereWithoutSchoolsInput = {
  where?: Prisma.AppreciationRuleSetWhereInput;
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutSchoolsInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutSchoolsInput
  >;
};

export type AppreciationRuleSetUpdateWithoutSchoolsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetUncheckedUpdateWithoutSchoolsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  rules?: Prisma.AppreciationRuleUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetCreateWithoutRulesInput = {
  id?: string;
  name: string;
  scale?: number;
  schools?: Prisma.SchoolCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetUncheckedCreateWithoutRulesInput = {
  id?: string;
  name: string;
  scale?: number;
  schools?: Prisma.SchoolUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
  gradeSheets?: Prisma.GradeSheetUncheckedCreateNestedManyWithoutAppreciationRuleSetInput;
};

export type AppreciationRuleSetCreateOrConnectWithoutRulesInput = {
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutRulesInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutRulesInput
  >;
};

export type AppreciationRuleSetUpsertWithoutRulesInput = {
  update: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutRulesInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutRulesInput
  >;
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateWithoutRulesInput,
    Prisma.AppreciationRuleSetUncheckedCreateWithoutRulesInput
  >;
  where?: Prisma.AppreciationRuleSetWhereInput;
};

export type AppreciationRuleSetUpdateToOneWithWhereWithoutRulesInput = {
  where?: Prisma.AppreciationRuleSetWhereInput;
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateWithoutRulesInput,
    Prisma.AppreciationRuleSetUncheckedUpdateWithoutRulesInput
  >;
};

export type AppreciationRuleSetUpdateWithoutRulesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  schools?: Prisma.SchoolUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUpdateManyWithoutAppreciationRuleSetNestedInput;
};

export type AppreciationRuleSetUncheckedUpdateWithoutRulesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  scale?: Prisma.IntFieldUpdateOperationsInput | number;
  schools?: Prisma.SchoolUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
  gradeSheets?: Prisma.GradeSheetUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput;
};

/**
 * Count Type AppreciationRuleSetCountOutputType
 */

export type AppreciationRuleSetCountOutputType = {
  rules: number;
  schools: number;
  classrooms: number;
  gradeSheets: number;
};

export type AppreciationRuleSetCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  rules?: boolean | AppreciationRuleSetCountOutputTypeCountRulesArgs;
  schools?: boolean | AppreciationRuleSetCountOutputTypeCountSchoolsArgs;
  classrooms?: boolean | AppreciationRuleSetCountOutputTypeCountClassroomsArgs;
  gradeSheets?:
    | boolean
    | AppreciationRuleSetCountOutputTypeCountGradeSheetsArgs;
};

/**
 * AppreciationRuleSetCountOutputType without action
 */
export type AppreciationRuleSetCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSetCountOutputType
   */
  select?: Prisma.AppreciationRuleSetCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * AppreciationRuleSetCountOutputType without action
 */
export type AppreciationRuleSetCountOutputTypeCountRulesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AppreciationRuleWhereInput;
};

/**
 * AppreciationRuleSetCountOutputType without action
 */
export type AppreciationRuleSetCountOutputTypeCountSchoolsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolWhereInput;
};

/**
 * AppreciationRuleSetCountOutputType without action
 */
export type AppreciationRuleSetCountOutputTypeCountClassroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

/**
 * AppreciationRuleSetCountOutputType without action
 */
export type AppreciationRuleSetCountOutputTypeCountGradeSheetsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.GradeSheetWhereInput;
};

export type AppreciationRuleSetSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    scale?: boolean;
    rules?: boolean | Prisma.AppreciationRuleSet$rulesArgs<ExtArgs>;
    schools?: boolean | Prisma.AppreciationRuleSet$schoolsArgs<ExtArgs>;
    classrooms?: boolean | Prisma.AppreciationRuleSet$classroomsArgs<ExtArgs>;
    gradeSheets?: boolean | Prisma.AppreciationRuleSet$gradeSheetsArgs<ExtArgs>;
    _count?:
      | boolean
      | Prisma.AppreciationRuleSetCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["appreciationRuleSet"]
>;

export type AppreciationRuleSetSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    scale?: boolean;
  },
  ExtArgs["result"]["appreciationRuleSet"]
>;

export type AppreciationRuleSetSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    scale?: boolean;
  },
  ExtArgs["result"]["appreciationRuleSet"]
>;

export type AppreciationRuleSetSelectScalar = {
  id?: boolean;
  name?: boolean;
  scale?: boolean;
};

export type AppreciationRuleSetOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  "id" | "name" | "scale",
  ExtArgs["result"]["appreciationRuleSet"]
>;
export type AppreciationRuleSetInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  rules?: boolean | Prisma.AppreciationRuleSet$rulesArgs<ExtArgs>;
  schools?: boolean | Prisma.AppreciationRuleSet$schoolsArgs<ExtArgs>;
  classrooms?: boolean | Prisma.AppreciationRuleSet$classroomsArgs<ExtArgs>;
  gradeSheets?: boolean | Prisma.AppreciationRuleSet$gradeSheetsArgs<ExtArgs>;
  _count?:
    | boolean
    | Prisma.AppreciationRuleSetCountOutputTypeDefaultArgs<ExtArgs>;
};
export type AppreciationRuleSetIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};
export type AppreciationRuleSetIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};

export type $AppreciationRuleSetPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "AppreciationRuleSet";
  objects: {
    rules: Prisma.$AppreciationRulePayload<ExtArgs>[];
    schools: Prisma.$SchoolPayload<ExtArgs>[];
    classrooms: Prisma.$ClassroomPayload<ExtArgs>[];
    gradeSheets: Prisma.$GradeSheetPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      name: string;
      scale: number;
    },
    ExtArgs["result"]["appreciationRuleSet"]
  >;
  composites: {};
};

export type AppreciationRuleSetGetPayload<
  S extends boolean | null | undefined | AppreciationRuleSetDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$AppreciationRuleSetPayload, S>;

export type AppreciationRuleSetCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  AppreciationRuleSetFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: AppreciationRuleSetCountAggregateInputType | true;
};

export interface AppreciationRuleSetDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["AppreciationRuleSet"];
    meta: { name: "AppreciationRuleSet" };
  };
  /**
   * Find zero or one AppreciationRuleSet that matches the filter.
   * @param {AppreciationRuleSetFindUniqueArgs} args - Arguments to find a AppreciationRuleSet
   * @example
   * // Get one AppreciationRuleSet
   * const appreciationRuleSet = await prisma.appreciationRuleSet.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AppreciationRuleSetFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AppreciationRuleSetFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one AppreciationRuleSet that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AppreciationRuleSetFindUniqueOrThrowArgs} args - Arguments to find a AppreciationRuleSet
   * @example
   * // Get one AppreciationRuleSet
   * const appreciationRuleSet = await prisma.appreciationRuleSet.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AppreciationRuleSetFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      AppreciationRuleSetFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AppreciationRuleSet that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetFindFirstArgs} args - Arguments to find a AppreciationRuleSet
   * @example
   * // Get one AppreciationRuleSet
   * const appreciationRuleSet = await prisma.appreciationRuleSet.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AppreciationRuleSetFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AppreciationRuleSetFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AppreciationRuleSet that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetFindFirstOrThrowArgs} args - Arguments to find a AppreciationRuleSet
   * @example
   * // Get one AppreciationRuleSet
   * const appreciationRuleSet = await prisma.appreciationRuleSet.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AppreciationRuleSetFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      AppreciationRuleSetFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more AppreciationRuleSets that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AppreciationRuleSets
   * const appreciationRuleSets = await prisma.appreciationRuleSet.findMany()
   *
   * // Get first 10 AppreciationRuleSets
   * const appreciationRuleSets = await prisma.appreciationRuleSet.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const appreciationRuleSetWithIdOnly = await prisma.appreciationRuleSet.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AppreciationRuleSetFindManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationRuleSetFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a AppreciationRuleSet.
   * @param {AppreciationRuleSetCreateArgs} args - Arguments to create a AppreciationRuleSet.
   * @example
   * // Create one AppreciationRuleSet
   * const AppreciationRuleSet = await prisma.appreciationRuleSet.create({
   *   data: {
   *     // ... data to create a AppreciationRuleSet
   *   }
   * })
   *
   */
  create<T extends AppreciationRuleSetCreateArgs>(
    args: Prisma.SelectSubset<T, AppreciationRuleSetCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many AppreciationRuleSets.
   * @param {AppreciationRuleSetCreateManyArgs} args - Arguments to create many AppreciationRuleSets.
   * @example
   * // Create many AppreciationRuleSets
   * const appreciationRuleSet = await prisma.appreciationRuleSet.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AppreciationRuleSetCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationRuleSetCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many AppreciationRuleSets and returns the data saved in the database.
   * @param {AppreciationRuleSetCreateManyAndReturnArgs} args - Arguments to create many AppreciationRuleSets.
   * @example
   * // Create many AppreciationRuleSets
   * const appreciationRuleSet = await prisma.appreciationRuleSet.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many AppreciationRuleSets and only return the `id`
   * const appreciationRuleSetWithIdOnly = await prisma.appreciationRuleSet.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AppreciationRuleSetCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      AppreciationRuleSetCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a AppreciationRuleSet.
   * @param {AppreciationRuleSetDeleteArgs} args - Arguments to delete one AppreciationRuleSet.
   * @example
   * // Delete one AppreciationRuleSet
   * const AppreciationRuleSet = await prisma.appreciationRuleSet.delete({
   *   where: {
   *     // ... filter to delete one AppreciationRuleSet
   *   }
   * })
   *
   */
  delete<T extends AppreciationRuleSetDeleteArgs>(
    args: Prisma.SelectSubset<T, AppreciationRuleSetDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one AppreciationRuleSet.
   * @param {AppreciationRuleSetUpdateArgs} args - Arguments to update one AppreciationRuleSet.
   * @example
   * // Update one AppreciationRuleSet
   * const appreciationRuleSet = await prisma.appreciationRuleSet.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AppreciationRuleSetUpdateArgs>(
    args: Prisma.SelectSubset<T, AppreciationRuleSetUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more AppreciationRuleSets.
   * @param {AppreciationRuleSetDeleteManyArgs} args - Arguments to filter AppreciationRuleSets to delete.
   * @example
   * // Delete a few AppreciationRuleSets
   * const { count } = await prisma.appreciationRuleSet.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AppreciationRuleSetDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationRuleSetDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AppreciationRuleSets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AppreciationRuleSets
   * const appreciationRuleSet = await prisma.appreciationRuleSet.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AppreciationRuleSetUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AppreciationRuleSetUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AppreciationRuleSets and returns the data updated in the database.
   * @param {AppreciationRuleSetUpdateManyAndReturnArgs} args - Arguments to update many AppreciationRuleSets.
   * @example
   * // Update many AppreciationRuleSets
   * const appreciationRuleSet = await prisma.appreciationRuleSet.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more AppreciationRuleSets and only return the `id`
   * const appreciationRuleSetWithIdOnly = await prisma.appreciationRuleSet.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AppreciationRuleSetUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      AppreciationRuleSetUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one AppreciationRuleSet.
   * @param {AppreciationRuleSetUpsertArgs} args - Arguments to update or create a AppreciationRuleSet.
   * @example
   * // Update or create a AppreciationRuleSet
   * const appreciationRuleSet = await prisma.appreciationRuleSet.upsert({
   *   create: {
   *     // ... data to create a AppreciationRuleSet
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AppreciationRuleSet we want to update
   *   }
   * })
   */
  upsert<T extends AppreciationRuleSetUpsertArgs>(
    args: Prisma.SelectSubset<T, AppreciationRuleSetUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of AppreciationRuleSets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetCountArgs} args - Arguments to filter AppreciationRuleSets to count.
   * @example
   * // Count the number of AppreciationRuleSets
   * const count = await prisma.appreciationRuleSet.count({
   *   where: {
   *     // ... the filter for the AppreciationRuleSets we want to count
   *   }
   * })
   **/
  count<T extends AppreciationRuleSetCountArgs>(
    args?: Prisma.Subset<T, AppreciationRuleSetCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            AppreciationRuleSetCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a AppreciationRuleSet.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AppreciationRuleSetAggregateArgs>(
    args: Prisma.Subset<T, AppreciationRuleSetAggregateArgs>,
  ): Prisma.PrismaPromise<GetAppreciationRuleSetAggregateType<T>>;

  /**
   * Group by AppreciationRuleSet.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationRuleSetGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AppreciationRuleSetGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AppreciationRuleSetGroupByArgs["orderBy"] }
      : { orderBy?: AppreciationRuleSetGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      AppreciationRuleSetGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetAppreciationRuleSetGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the AppreciationRuleSet model
   */
  readonly fields: AppreciationRuleSetFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AppreciationRuleSet.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AppreciationRuleSetClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  rules<T extends Prisma.AppreciationRuleSet$rulesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AppreciationRuleSet$rulesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AppreciationRulePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  schools<T extends Prisma.AppreciationRuleSet$schoolsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AppreciationRuleSet$schoolsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  classrooms<T extends Prisma.AppreciationRuleSet$classroomsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AppreciationRuleSet$classroomsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  gradeSheets<
    T extends Prisma.AppreciationRuleSet$gradeSheetsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.AppreciationRuleSet$gradeSheetsArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$GradeSheetPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the AppreciationRuleSet model
 */
export interface AppreciationRuleSetFieldRefs {
  readonly id: Prisma.FieldRef<"AppreciationRuleSet", "String">;
  readonly name: Prisma.FieldRef<"AppreciationRuleSet", "String">;
  readonly scale: Prisma.FieldRef<"AppreciationRuleSet", "Int">;
}

// Custom InputTypes
/**
 * AppreciationRuleSet findUnique
 */
export type AppreciationRuleSetFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationRuleSet to fetch.
   */
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
};

/**
 * AppreciationRuleSet findUniqueOrThrow
 */
export type AppreciationRuleSetFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationRuleSet to fetch.
   */
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
};

/**
 * AppreciationRuleSet findFirst
 */
export type AppreciationRuleSetFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationRuleSet to fetch.
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationRuleSets to fetch.
   */
  orderBy?:
    | Prisma.AppreciationRuleSetOrderByWithRelationInput
    | Prisma.AppreciationRuleSetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AppreciationRuleSets.
   */
  cursor?: Prisma.AppreciationRuleSetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationRuleSets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationRuleSets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AppreciationRuleSets.
   */
  distinct?:
    | Prisma.AppreciationRuleSetScalarFieldEnum
    | Prisma.AppreciationRuleSetScalarFieldEnum[];
};

/**
 * AppreciationRuleSet findFirstOrThrow
 */
export type AppreciationRuleSetFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationRuleSet to fetch.
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationRuleSets to fetch.
   */
  orderBy?:
    | Prisma.AppreciationRuleSetOrderByWithRelationInput
    | Prisma.AppreciationRuleSetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AppreciationRuleSets.
   */
  cursor?: Prisma.AppreciationRuleSetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationRuleSets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationRuleSets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AppreciationRuleSets.
   */
  distinct?:
    | Prisma.AppreciationRuleSetScalarFieldEnum
    | Prisma.AppreciationRuleSetScalarFieldEnum[];
};

/**
 * AppreciationRuleSet findMany
 */
export type AppreciationRuleSetFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationRuleSets to fetch.
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationRuleSets to fetch.
   */
  orderBy?:
    | Prisma.AppreciationRuleSetOrderByWithRelationInput
    | Prisma.AppreciationRuleSetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing AppreciationRuleSets.
   */
  cursor?: Prisma.AppreciationRuleSetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationRuleSets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationRuleSets.
   */
  skip?: number;
  distinct?:
    | Prisma.AppreciationRuleSetScalarFieldEnum
    | Prisma.AppreciationRuleSetScalarFieldEnum[];
};

/**
 * AppreciationRuleSet create
 */
export type AppreciationRuleSetCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * The data needed to create a AppreciationRuleSet.
   */
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateInput,
    Prisma.AppreciationRuleSetUncheckedCreateInput
  >;
};

/**
 * AppreciationRuleSet createMany
 */
export type AppreciationRuleSetCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many AppreciationRuleSets.
   */
  data:
    | Prisma.AppreciationRuleSetCreateManyInput
    | Prisma.AppreciationRuleSetCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AppreciationRuleSet createManyAndReturn
 */
export type AppreciationRuleSetCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * The data used to create many AppreciationRuleSets.
   */
  data:
    | Prisma.AppreciationRuleSetCreateManyInput
    | Prisma.AppreciationRuleSetCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AppreciationRuleSet update
 */
export type AppreciationRuleSetUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * The data needed to update a AppreciationRuleSet.
   */
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateInput,
    Prisma.AppreciationRuleSetUncheckedUpdateInput
  >;
  /**
   * Choose, which AppreciationRuleSet to update.
   */
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
};

/**
 * AppreciationRuleSet updateMany
 */
export type AppreciationRuleSetUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update AppreciationRuleSets.
   */
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateManyMutationInput,
    Prisma.AppreciationRuleSetUncheckedUpdateManyInput
  >;
  /**
   * Filter which AppreciationRuleSets to update
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * Limit how many AppreciationRuleSets to update.
   */
  limit?: number;
};

/**
 * AppreciationRuleSet updateManyAndReturn
 */
export type AppreciationRuleSetUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * The data used to update AppreciationRuleSets.
   */
  data: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateManyMutationInput,
    Prisma.AppreciationRuleSetUncheckedUpdateManyInput
  >;
  /**
   * Filter which AppreciationRuleSets to update
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * Limit how many AppreciationRuleSets to update.
   */
  limit?: number;
};

/**
 * AppreciationRuleSet upsert
 */
export type AppreciationRuleSetUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * The filter to search for the AppreciationRuleSet to update in case it exists.
   */
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
  /**
   * In case the AppreciationRuleSet found by the `where` argument doesn't exist, create a new AppreciationRuleSet with this data.
   */
  create: Prisma.XOR<
    Prisma.AppreciationRuleSetCreateInput,
    Prisma.AppreciationRuleSetUncheckedCreateInput
  >;
  /**
   * In case the AppreciationRuleSet was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.AppreciationRuleSetUpdateInput,
    Prisma.AppreciationRuleSetUncheckedUpdateInput
  >;
};

/**
 * AppreciationRuleSet delete
 */
export type AppreciationRuleSetDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  /**
   * Filter which AppreciationRuleSet to delete.
   */
  where: Prisma.AppreciationRuleSetWhereUniqueInput;
};

/**
 * AppreciationRuleSet deleteMany
 */
export type AppreciationRuleSetDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AppreciationRuleSets to delete
   */
  where?: Prisma.AppreciationRuleSetWhereInput;
  /**
   * Limit how many AppreciationRuleSets to delete.
   */
  limit?: number;
};

/**
 * AppreciationRuleSet.rules
 */
export type AppreciationRuleSet$rulesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRule
   */
  select?: Prisma.AppreciationRuleSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRule
   */
  omit?: Prisma.AppreciationRuleOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleInclude<ExtArgs> | null;
  where?: Prisma.AppreciationRuleWhereInput;
  orderBy?:
    | Prisma.AppreciationRuleOrderByWithRelationInput
    | Prisma.AppreciationRuleOrderByWithRelationInput[];
  cursor?: Prisma.AppreciationRuleWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AppreciationRuleScalarFieldEnum
    | Prisma.AppreciationRuleScalarFieldEnum[];
};

/**
 * AppreciationRuleSet.schools
 */
export type AppreciationRuleSet$schoolsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  where?: Prisma.SchoolWhereInput;
  orderBy?:
    | Prisma.SchoolOrderByWithRelationInput
    | Prisma.SchoolOrderByWithRelationInput[];
  cursor?: Prisma.SchoolWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SchoolScalarFieldEnum | Prisma.SchoolScalarFieldEnum[];
};

/**
 * AppreciationRuleSet.classrooms
 */
export type AppreciationRuleSet$classroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * AppreciationRuleSet.gradeSheets
 */
export type AppreciationRuleSet$gradeSheetsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeSheet
   */
  select?: Prisma.GradeSheetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeSheet
   */
  omit?: Prisma.GradeSheetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeSheetInclude<ExtArgs> | null;
  where?: Prisma.GradeSheetWhereInput;
  orderBy?:
    | Prisma.GradeSheetOrderByWithRelationInput
    | Prisma.GradeSheetOrderByWithRelationInput[];
  cursor?: Prisma.GradeSheetWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.GradeSheetScalarFieldEnum
    | Prisma.GradeSheetScalarFieldEnum[];
};

/**
 * AppreciationRuleSet without action
 */
export type AppreciationRuleSetDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
};
