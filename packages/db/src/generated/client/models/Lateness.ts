/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Lateness` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Lateness
 *
 */
export type LatenessModel =
  runtime.Types.Result.DefaultSelection<Prisma.$LatenessPayload>;

export type AggregateLateness = {
  _count: LatenessCountAggregateOutputType | null;
  _avg: LatenessAvgAggregateOutputType | null;
  _sum: LatenessSumAggregateOutputType | null;
  _min: LatenessMinAggregateOutputType | null;
  _max: LatenessMaxAggregateOutputType | null;
};

export type LatenessAvgAggregateOutputType = {
  id: number | null;
};

export type LatenessSumAggregateOutputType = {
  id: number | null;
};

export type LatenessMinAggregateOutputType = {
  id: number | null;
  studentId: string | null;
  date: Date | null;
  termId: string | null;
  duration: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  createdById: string | null;
  updatedById: string | null;
  reason: string | null;
};

export type LatenessMaxAggregateOutputType = {
  id: number | null;
  studentId: string | null;
  date: Date | null;
  termId: string | null;
  duration: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  createdById: string | null;
  updatedById: string | null;
  reason: string | null;
};

export type LatenessCountAggregateOutputType = {
  id: number;
  studentId: number;
  date: number;
  termId: number;
  duration: number;
  createdAt: number;
  updatedAt: number;
  createdById: number;
  updatedById: number;
  attachments: number;
  reason: number;
  _all: number;
};

export type LatenessAvgAggregateInputType = {
  id?: true;
};

export type LatenessSumAggregateInputType = {
  id?: true;
};

export type LatenessMinAggregateInputType = {
  id?: true;
  studentId?: true;
  date?: true;
  termId?: true;
  duration?: true;
  createdAt?: true;
  updatedAt?: true;
  createdById?: true;
  updatedById?: true;
  reason?: true;
};

export type LatenessMaxAggregateInputType = {
  id?: true;
  studentId?: true;
  date?: true;
  termId?: true;
  duration?: true;
  createdAt?: true;
  updatedAt?: true;
  createdById?: true;
  updatedById?: true;
  reason?: true;
};

export type LatenessCountAggregateInputType = {
  id?: true;
  studentId?: true;
  date?: true;
  termId?: true;
  duration?: true;
  createdAt?: true;
  updatedAt?: true;
  createdById?: true;
  updatedById?: true;
  attachments?: true;
  reason?: true;
  _all?: true;
};

export type LatenessAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Lateness to aggregate.
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Latenesses to fetch.
   */
  orderBy?:
    | Prisma.LatenessOrderByWithRelationInput
    | Prisma.LatenessOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.LatenessWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Latenesses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Latenesses.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Latenesses
   **/
  _count?: true | LatenessCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: LatenessAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: LatenessSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: LatenessMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: LatenessMaxAggregateInputType;
};

export type GetLatenessAggregateType<T extends LatenessAggregateArgs> = {
  [P in keyof T & keyof AggregateLateness]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateLateness[P]>
    : Prisma.GetScalarType<T[P], AggregateLateness[P]>;
};

export type LatenessGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.LatenessWhereInput;
  orderBy?:
    | Prisma.LatenessOrderByWithAggregationInput
    | Prisma.LatenessOrderByWithAggregationInput[];
  by: Prisma.LatenessScalarFieldEnum[] | Prisma.LatenessScalarFieldEnum;
  having?: Prisma.LatenessScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: LatenessCountAggregateInputType | true;
  _avg?: LatenessAvgAggregateInputType;
  _sum?: LatenessSumAggregateInputType;
  _min?: LatenessMinAggregateInputType;
  _max?: LatenessMaxAggregateInputType;
};

export type LatenessGroupByOutputType = {
  id: number;
  studentId: string;
  date: Date;
  termId: string;
  duration: string;
  createdAt: Date;
  updatedAt: Date;
  createdById: string;
  updatedById: string | null;
  attachments: string[];
  reason: string | null;
  _count: LatenessCountAggregateOutputType | null;
  _avg: LatenessAvgAggregateOutputType | null;
  _sum: LatenessSumAggregateOutputType | null;
  _min: LatenessMinAggregateOutputType | null;
  _max: LatenessMaxAggregateOutputType | null;
};

type GetLatenessGroupByPayload<T extends LatenessGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<LatenessGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof LatenessGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], LatenessGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], LatenessGroupByOutputType[P]>;
      }
    >
  >;

export type LatenessWhereInput = {
  AND?: Prisma.LatenessWhereInput | Prisma.LatenessWhereInput[];
  OR?: Prisma.LatenessWhereInput[];
  NOT?: Prisma.LatenessWhereInput | Prisma.LatenessWhereInput[];
  id?: Prisma.IntFilter<"Lateness"> | number;
  studentId?: Prisma.StringFilter<"Lateness"> | string;
  date?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
  termId?: Prisma.StringFilter<"Lateness"> | string;
  duration?: Prisma.StringFilter<"Lateness"> | string;
  createdAt?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
  createdById?: Prisma.StringFilter<"Lateness"> | string;
  updatedById?: Prisma.StringNullableFilter<"Lateness"> | string | null;
  attachments?: Prisma.StringNullableListFilter<"Lateness">;
  reason?: Prisma.StringNullableFilter<"Lateness"> | string | null;
  student?: Prisma.XOR<
    Prisma.StudentScalarRelationFilter,
    Prisma.StudentWhereInput
  >;
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>;
  justification?: Prisma.XOR<
    Prisma.LatenessJustificationNullableScalarRelationFilter,
    Prisma.LatenessJustificationWhereInput
  > | null;
};

export type LatenessOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  studentId?: Prisma.SortOrder;
  date?: Prisma.SortOrder;
  termId?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  updatedById?: Prisma.SortOrderInput | Prisma.SortOrder;
  attachments?: Prisma.SortOrder;
  reason?: Prisma.SortOrderInput | Prisma.SortOrder;
  student?: Prisma.StudentOrderByWithRelationInput;
  term?: Prisma.TermOrderByWithRelationInput;
  justification?: Prisma.LatenessJustificationOrderByWithRelationInput;
};

export type LatenessWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.LatenessWhereInput | Prisma.LatenessWhereInput[];
    OR?: Prisma.LatenessWhereInput[];
    NOT?: Prisma.LatenessWhereInput | Prisma.LatenessWhereInput[];
    studentId?: Prisma.StringFilter<"Lateness"> | string;
    date?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
    termId?: Prisma.StringFilter<"Lateness"> | string;
    duration?: Prisma.StringFilter<"Lateness"> | string;
    createdAt?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
    createdById?: Prisma.StringFilter<"Lateness"> | string;
    updatedById?: Prisma.StringNullableFilter<"Lateness"> | string | null;
    attachments?: Prisma.StringNullableListFilter<"Lateness">;
    reason?: Prisma.StringNullableFilter<"Lateness"> | string | null;
    student?: Prisma.XOR<
      Prisma.StudentScalarRelationFilter,
      Prisma.StudentWhereInput
    >;
    term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>;
    justification?: Prisma.XOR<
      Prisma.LatenessJustificationNullableScalarRelationFilter,
      Prisma.LatenessJustificationWhereInput
    > | null;
  },
  "id"
>;

export type LatenessOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  studentId?: Prisma.SortOrder;
  date?: Prisma.SortOrder;
  termId?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  updatedById?: Prisma.SortOrderInput | Prisma.SortOrder;
  attachments?: Prisma.SortOrder;
  reason?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.LatenessCountOrderByAggregateInput;
  _avg?: Prisma.LatenessAvgOrderByAggregateInput;
  _max?: Prisma.LatenessMaxOrderByAggregateInput;
  _min?: Prisma.LatenessMinOrderByAggregateInput;
  _sum?: Prisma.LatenessSumOrderByAggregateInput;
};

export type LatenessScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.LatenessScalarWhereWithAggregatesInput
    | Prisma.LatenessScalarWhereWithAggregatesInput[];
  OR?: Prisma.LatenessScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.LatenessScalarWhereWithAggregatesInput
    | Prisma.LatenessScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"Lateness"> | number;
  studentId?: Prisma.StringWithAggregatesFilter<"Lateness"> | string;
  date?: Prisma.DateTimeWithAggregatesFilter<"Lateness"> | Date | string;
  termId?: Prisma.StringWithAggregatesFilter<"Lateness"> | string;
  duration?: Prisma.StringWithAggregatesFilter<"Lateness"> | string;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Lateness"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Lateness"> | Date | string;
  createdById?: Prisma.StringWithAggregatesFilter<"Lateness"> | string;
  updatedById?:
    | Prisma.StringNullableWithAggregatesFilter<"Lateness">
    | string
    | null;
  attachments?: Prisma.StringNullableListFilter<"Lateness">;
  reason?:
    | Prisma.StringNullableWithAggregatesFilter<"Lateness">
    | string
    | null;
};

export type LatenessCreateInput = {
  date: Date | string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  student: Prisma.StudentCreateNestedOneWithoutLatenessesInput;
  term: Prisma.TermCreateNestedOneWithoutLatenessesInput;
  justification?: Prisma.LatenessJustificationCreateNestedOneWithoutLatenessInput;
};

export type LatenessUncheckedCreateInput = {
  id?: number;
  studentId: string;
  date: Date | string;
  termId: string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  justification?: Prisma.LatenessJustificationUncheckedCreateNestedOneWithoutLatenessInput;
};

export type LatenessUpdateInput = {
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  student?: Prisma.StudentUpdateOneRequiredWithoutLatenessesNestedInput;
  term?: Prisma.TermUpdateOneRequiredWithoutLatenessesNestedInput;
  justification?: Prisma.LatenessJustificationUpdateOneWithoutLatenessNestedInput;
};

export type LatenessUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  studentId?: Prisma.StringFieldUpdateOperationsInput | string;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  termId?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  justification?: Prisma.LatenessJustificationUncheckedUpdateOneWithoutLatenessNestedInput;
};

export type LatenessCreateManyInput = {
  id?: number;
  studentId: string;
  date: Date | string;
  termId: string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
};

export type LatenessUpdateManyMutationInput = {
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type LatenessUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  studentId?: Prisma.StringFieldUpdateOperationsInput | string;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  termId?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type LatenessCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  studentId?: Prisma.SortOrder;
  date?: Prisma.SortOrder;
  termId?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  updatedById?: Prisma.SortOrder;
  attachments?: Prisma.SortOrder;
  reason?: Prisma.SortOrder;
};

export type LatenessAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
};

export type LatenessMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  studentId?: Prisma.SortOrder;
  date?: Prisma.SortOrder;
  termId?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  updatedById?: Prisma.SortOrder;
  reason?: Prisma.SortOrder;
};

export type LatenessMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  studentId?: Prisma.SortOrder;
  date?: Prisma.SortOrder;
  termId?: Prisma.SortOrder;
  duration?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  updatedById?: Prisma.SortOrder;
  reason?: Prisma.SortOrder;
};

export type LatenessSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
};

export type LatenessScalarRelationFilter = {
  is?: Prisma.LatenessWhereInput;
  isNot?: Prisma.LatenessWhereInput;
};

export type LatenessListRelationFilter = {
  every?: Prisma.LatenessWhereInput;
  some?: Prisma.LatenessWhereInput;
  none?: Prisma.LatenessWhereInput;
};

export type LatenessOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type LatenessCreateattachmentsInput = {
  set: string[];
};

export type LatenessUpdateattachmentsInput = {
  set?: string[];
  push?: string | string[];
};

export type LatenessCreateNestedOneWithoutJustificationInput = {
  create?: Prisma.XOR<
    Prisma.LatenessCreateWithoutJustificationInput,
    Prisma.LatenessUncheckedCreateWithoutJustificationInput
  >;
  connectOrCreate?: Prisma.LatenessCreateOrConnectWithoutJustificationInput;
  connect?: Prisma.LatenessWhereUniqueInput;
};

export type LatenessUpdateOneRequiredWithoutJustificationNestedInput = {
  create?: Prisma.XOR<
    Prisma.LatenessCreateWithoutJustificationInput,
    Prisma.LatenessUncheckedCreateWithoutJustificationInput
  >;
  connectOrCreate?: Prisma.LatenessCreateOrConnectWithoutJustificationInput;
  upsert?: Prisma.LatenessUpsertWithoutJustificationInput;
  connect?: Prisma.LatenessWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.LatenessUpdateToOneWithWhereWithoutJustificationInput,
      Prisma.LatenessUpdateWithoutJustificationInput
    >,
    Prisma.LatenessUncheckedUpdateWithoutJustificationInput
  >;
};

export type LatenessCreateNestedManyWithoutTermInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutTermInput,
        Prisma.LatenessUncheckedCreateWithoutTermInput
      >
    | Prisma.LatenessCreateWithoutTermInput[]
    | Prisma.LatenessUncheckedCreateWithoutTermInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutTermInput
    | Prisma.LatenessCreateOrConnectWithoutTermInput[];
  createMany?: Prisma.LatenessCreateManyTermInputEnvelope;
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
};

export type LatenessUncheckedCreateNestedManyWithoutTermInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutTermInput,
        Prisma.LatenessUncheckedCreateWithoutTermInput
      >
    | Prisma.LatenessCreateWithoutTermInput[]
    | Prisma.LatenessUncheckedCreateWithoutTermInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutTermInput
    | Prisma.LatenessCreateOrConnectWithoutTermInput[];
  createMany?: Prisma.LatenessCreateManyTermInputEnvelope;
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
};

export type LatenessUpdateManyWithoutTermNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutTermInput,
        Prisma.LatenessUncheckedCreateWithoutTermInput
      >
    | Prisma.LatenessCreateWithoutTermInput[]
    | Prisma.LatenessUncheckedCreateWithoutTermInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutTermInput
    | Prisma.LatenessCreateOrConnectWithoutTermInput[];
  upsert?:
    | Prisma.LatenessUpsertWithWhereUniqueWithoutTermInput
    | Prisma.LatenessUpsertWithWhereUniqueWithoutTermInput[];
  createMany?: Prisma.LatenessCreateManyTermInputEnvelope;
  set?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  disconnect?:
    | Prisma.LatenessWhereUniqueInput
    | Prisma.LatenessWhereUniqueInput[];
  delete?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  update?:
    | Prisma.LatenessUpdateWithWhereUniqueWithoutTermInput
    | Prisma.LatenessUpdateWithWhereUniqueWithoutTermInput[];
  updateMany?:
    | Prisma.LatenessUpdateManyWithWhereWithoutTermInput
    | Prisma.LatenessUpdateManyWithWhereWithoutTermInput[];
  deleteMany?:
    | Prisma.LatenessScalarWhereInput
    | Prisma.LatenessScalarWhereInput[];
};

export type LatenessUncheckedUpdateManyWithoutTermNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutTermInput,
        Prisma.LatenessUncheckedCreateWithoutTermInput
      >
    | Prisma.LatenessCreateWithoutTermInput[]
    | Prisma.LatenessUncheckedCreateWithoutTermInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutTermInput
    | Prisma.LatenessCreateOrConnectWithoutTermInput[];
  upsert?:
    | Prisma.LatenessUpsertWithWhereUniqueWithoutTermInput
    | Prisma.LatenessUpsertWithWhereUniqueWithoutTermInput[];
  createMany?: Prisma.LatenessCreateManyTermInputEnvelope;
  set?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  disconnect?:
    | Prisma.LatenessWhereUniqueInput
    | Prisma.LatenessWhereUniqueInput[];
  delete?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  update?:
    | Prisma.LatenessUpdateWithWhereUniqueWithoutTermInput
    | Prisma.LatenessUpdateWithWhereUniqueWithoutTermInput[];
  updateMany?:
    | Prisma.LatenessUpdateManyWithWhereWithoutTermInput
    | Prisma.LatenessUpdateManyWithWhereWithoutTermInput[];
  deleteMany?:
    | Prisma.LatenessScalarWhereInput
    | Prisma.LatenessScalarWhereInput[];
};

export type LatenessCreateNestedManyWithoutStudentInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutStudentInput,
        Prisma.LatenessUncheckedCreateWithoutStudentInput
      >
    | Prisma.LatenessCreateWithoutStudentInput[]
    | Prisma.LatenessUncheckedCreateWithoutStudentInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutStudentInput
    | Prisma.LatenessCreateOrConnectWithoutStudentInput[];
  createMany?: Prisma.LatenessCreateManyStudentInputEnvelope;
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
};

export type LatenessUncheckedCreateNestedManyWithoutStudentInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutStudentInput,
        Prisma.LatenessUncheckedCreateWithoutStudentInput
      >
    | Prisma.LatenessCreateWithoutStudentInput[]
    | Prisma.LatenessUncheckedCreateWithoutStudentInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutStudentInput
    | Prisma.LatenessCreateOrConnectWithoutStudentInput[];
  createMany?: Prisma.LatenessCreateManyStudentInputEnvelope;
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
};

export type LatenessUpdateManyWithoutStudentNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutStudentInput,
        Prisma.LatenessUncheckedCreateWithoutStudentInput
      >
    | Prisma.LatenessCreateWithoutStudentInput[]
    | Prisma.LatenessUncheckedCreateWithoutStudentInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutStudentInput
    | Prisma.LatenessCreateOrConnectWithoutStudentInput[];
  upsert?:
    | Prisma.LatenessUpsertWithWhereUniqueWithoutStudentInput
    | Prisma.LatenessUpsertWithWhereUniqueWithoutStudentInput[];
  createMany?: Prisma.LatenessCreateManyStudentInputEnvelope;
  set?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  disconnect?:
    | Prisma.LatenessWhereUniqueInput
    | Prisma.LatenessWhereUniqueInput[];
  delete?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  update?:
    | Prisma.LatenessUpdateWithWhereUniqueWithoutStudentInput
    | Prisma.LatenessUpdateWithWhereUniqueWithoutStudentInput[];
  updateMany?:
    | Prisma.LatenessUpdateManyWithWhereWithoutStudentInput
    | Prisma.LatenessUpdateManyWithWhereWithoutStudentInput[];
  deleteMany?:
    | Prisma.LatenessScalarWhereInput
    | Prisma.LatenessScalarWhereInput[];
};

export type LatenessUncheckedUpdateManyWithoutStudentNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.LatenessCreateWithoutStudentInput,
        Prisma.LatenessUncheckedCreateWithoutStudentInput
      >
    | Prisma.LatenessCreateWithoutStudentInput[]
    | Prisma.LatenessUncheckedCreateWithoutStudentInput[];
  connectOrCreate?:
    | Prisma.LatenessCreateOrConnectWithoutStudentInput
    | Prisma.LatenessCreateOrConnectWithoutStudentInput[];
  upsert?:
    | Prisma.LatenessUpsertWithWhereUniqueWithoutStudentInput
    | Prisma.LatenessUpsertWithWhereUniqueWithoutStudentInput[];
  createMany?: Prisma.LatenessCreateManyStudentInputEnvelope;
  set?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  disconnect?:
    | Prisma.LatenessWhereUniqueInput
    | Prisma.LatenessWhereUniqueInput[];
  delete?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  connect?: Prisma.LatenessWhereUniqueInput | Prisma.LatenessWhereUniqueInput[];
  update?:
    | Prisma.LatenessUpdateWithWhereUniqueWithoutStudentInput
    | Prisma.LatenessUpdateWithWhereUniqueWithoutStudentInput[];
  updateMany?:
    | Prisma.LatenessUpdateManyWithWhereWithoutStudentInput
    | Prisma.LatenessUpdateManyWithWhereWithoutStudentInput[];
  deleteMany?:
    | Prisma.LatenessScalarWhereInput
    | Prisma.LatenessScalarWhereInput[];
};

export type LatenessCreateWithoutJustificationInput = {
  date: Date | string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  student: Prisma.StudentCreateNestedOneWithoutLatenessesInput;
  term: Prisma.TermCreateNestedOneWithoutLatenessesInput;
};

export type LatenessUncheckedCreateWithoutJustificationInput = {
  id?: number;
  studentId: string;
  date: Date | string;
  termId: string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
};

export type LatenessCreateOrConnectWithoutJustificationInput = {
  where: Prisma.LatenessWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.LatenessCreateWithoutJustificationInput,
    Prisma.LatenessUncheckedCreateWithoutJustificationInput
  >;
};

export type LatenessUpsertWithoutJustificationInput = {
  update: Prisma.XOR<
    Prisma.LatenessUpdateWithoutJustificationInput,
    Prisma.LatenessUncheckedUpdateWithoutJustificationInput
  >;
  create: Prisma.XOR<
    Prisma.LatenessCreateWithoutJustificationInput,
    Prisma.LatenessUncheckedCreateWithoutJustificationInput
  >;
  where?: Prisma.LatenessWhereInput;
};

export type LatenessUpdateToOneWithWhereWithoutJustificationInput = {
  where?: Prisma.LatenessWhereInput;
  data: Prisma.XOR<
    Prisma.LatenessUpdateWithoutJustificationInput,
    Prisma.LatenessUncheckedUpdateWithoutJustificationInput
  >;
};

export type LatenessUpdateWithoutJustificationInput = {
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  student?: Prisma.StudentUpdateOneRequiredWithoutLatenessesNestedInput;
  term?: Prisma.TermUpdateOneRequiredWithoutLatenessesNestedInput;
};

export type LatenessUncheckedUpdateWithoutJustificationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  studentId?: Prisma.StringFieldUpdateOperationsInput | string;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  termId?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type LatenessCreateWithoutTermInput = {
  date: Date | string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  student: Prisma.StudentCreateNestedOneWithoutLatenessesInput;
  justification?: Prisma.LatenessJustificationCreateNestedOneWithoutLatenessInput;
};

export type LatenessUncheckedCreateWithoutTermInput = {
  id?: number;
  studentId: string;
  date: Date | string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  justification?: Prisma.LatenessJustificationUncheckedCreateNestedOneWithoutLatenessInput;
};

export type LatenessCreateOrConnectWithoutTermInput = {
  where: Prisma.LatenessWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.LatenessCreateWithoutTermInput,
    Prisma.LatenessUncheckedCreateWithoutTermInput
  >;
};

export type LatenessCreateManyTermInputEnvelope = {
  data:
    | Prisma.LatenessCreateManyTermInput
    | Prisma.LatenessCreateManyTermInput[];
  skipDuplicates?: boolean;
};

export type LatenessUpsertWithWhereUniqueWithoutTermInput = {
  where: Prisma.LatenessWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.LatenessUpdateWithoutTermInput,
    Prisma.LatenessUncheckedUpdateWithoutTermInput
  >;
  create: Prisma.XOR<
    Prisma.LatenessCreateWithoutTermInput,
    Prisma.LatenessUncheckedCreateWithoutTermInput
  >;
};

export type LatenessUpdateWithWhereUniqueWithoutTermInput = {
  where: Prisma.LatenessWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.LatenessUpdateWithoutTermInput,
    Prisma.LatenessUncheckedUpdateWithoutTermInput
  >;
};

export type LatenessUpdateManyWithWhereWithoutTermInput = {
  where: Prisma.LatenessScalarWhereInput;
  data: Prisma.XOR<
    Prisma.LatenessUpdateManyMutationInput,
    Prisma.LatenessUncheckedUpdateManyWithoutTermInput
  >;
};

export type LatenessScalarWhereInput = {
  AND?: Prisma.LatenessScalarWhereInput | Prisma.LatenessScalarWhereInput[];
  OR?: Prisma.LatenessScalarWhereInput[];
  NOT?: Prisma.LatenessScalarWhereInput | Prisma.LatenessScalarWhereInput[];
  id?: Prisma.IntFilter<"Lateness"> | number;
  studentId?: Prisma.StringFilter<"Lateness"> | string;
  date?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
  termId?: Prisma.StringFilter<"Lateness"> | string;
  duration?: Prisma.StringFilter<"Lateness"> | string;
  createdAt?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Lateness"> | Date | string;
  createdById?: Prisma.StringFilter<"Lateness"> | string;
  updatedById?: Prisma.StringNullableFilter<"Lateness"> | string | null;
  attachments?: Prisma.StringNullableListFilter<"Lateness">;
  reason?: Prisma.StringNullableFilter<"Lateness"> | string | null;
};

export type LatenessCreateWithoutStudentInput = {
  date: Date | string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  term: Prisma.TermCreateNestedOneWithoutLatenessesInput;
  justification?: Prisma.LatenessJustificationCreateNestedOneWithoutLatenessInput;
};

export type LatenessUncheckedCreateWithoutStudentInput = {
  id?: number;
  date: Date | string;
  termId: string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
  justification?: Prisma.LatenessJustificationUncheckedCreateNestedOneWithoutLatenessInput;
};

export type LatenessCreateOrConnectWithoutStudentInput = {
  where: Prisma.LatenessWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.LatenessCreateWithoutStudentInput,
    Prisma.LatenessUncheckedCreateWithoutStudentInput
  >;
};

export type LatenessCreateManyStudentInputEnvelope = {
  data:
    | Prisma.LatenessCreateManyStudentInput
    | Prisma.LatenessCreateManyStudentInput[];
  skipDuplicates?: boolean;
};

export type LatenessUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.LatenessWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.LatenessUpdateWithoutStudentInput,
    Prisma.LatenessUncheckedUpdateWithoutStudentInput
  >;
  create: Prisma.XOR<
    Prisma.LatenessCreateWithoutStudentInput,
    Prisma.LatenessUncheckedCreateWithoutStudentInput
  >;
};

export type LatenessUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.LatenessWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.LatenessUpdateWithoutStudentInput,
    Prisma.LatenessUncheckedUpdateWithoutStudentInput
  >;
};

export type LatenessUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.LatenessScalarWhereInput;
  data: Prisma.XOR<
    Prisma.LatenessUpdateManyMutationInput,
    Prisma.LatenessUncheckedUpdateManyWithoutStudentInput
  >;
};

export type LatenessCreateManyTermInput = {
  id?: number;
  studentId: string;
  date: Date | string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
};

export type LatenessUpdateWithoutTermInput = {
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  student?: Prisma.StudentUpdateOneRequiredWithoutLatenessesNestedInput;
  justification?: Prisma.LatenessJustificationUpdateOneWithoutLatenessNestedInput;
};

export type LatenessUncheckedUpdateWithoutTermInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  studentId?: Prisma.StringFieldUpdateOperationsInput | string;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  justification?: Prisma.LatenessJustificationUncheckedUpdateOneWithoutLatenessNestedInput;
};

export type LatenessUncheckedUpdateManyWithoutTermInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  studentId?: Prisma.StringFieldUpdateOperationsInput | string;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type LatenessCreateManyStudentInput = {
  id?: number;
  date: Date | string;
  termId: string;
  duration: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById: string;
  updatedById?: string | null;
  attachments?: Prisma.LatenessCreateattachmentsInput | string[];
  reason?: string | null;
};

export type LatenessUpdateWithoutStudentInput = {
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  term?: Prisma.TermUpdateOneRequiredWithoutLatenessesNestedInput;
  justification?: Prisma.LatenessJustificationUpdateOneWithoutLatenessNestedInput;
};

export type LatenessUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  termId?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  justification?: Prisma.LatenessJustificationUncheckedUpdateOneWithoutLatenessNestedInput;
};

export type LatenessUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  termId?: Prisma.StringFieldUpdateOperationsInput | string;
  duration?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  updatedById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  attachments?: Prisma.LatenessUpdateattachmentsInput | string[];
  reason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type LatenessSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    studentId?: boolean;
    date?: boolean;
    termId?: boolean;
    duration?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdById?: boolean;
    updatedById?: boolean;
    attachments?: boolean;
    reason?: boolean;
    student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>;
    term?: boolean | Prisma.TermDefaultArgs<ExtArgs>;
    justification?: boolean | Prisma.Lateness$justificationArgs<ExtArgs>;
  },
  ExtArgs["result"]["lateness"]
>;

export type LatenessSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    studentId?: boolean;
    date?: boolean;
    termId?: boolean;
    duration?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdById?: boolean;
    updatedById?: boolean;
    attachments?: boolean;
    reason?: boolean;
    student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>;
    term?: boolean | Prisma.TermDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["lateness"]
>;

export type LatenessSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    studentId?: boolean;
    date?: boolean;
    termId?: boolean;
    duration?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdById?: boolean;
    updatedById?: boolean;
    attachments?: boolean;
    reason?: boolean;
    student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>;
    term?: boolean | Prisma.TermDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["lateness"]
>;

export type LatenessSelectScalar = {
  id?: boolean;
  studentId?: boolean;
  date?: boolean;
  termId?: boolean;
  duration?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  createdById?: boolean;
  updatedById?: boolean;
  attachments?: boolean;
  reason?: boolean;
};

export type LatenessOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "studentId"
  | "date"
  | "termId"
  | "duration"
  | "createdAt"
  | "updatedAt"
  | "createdById"
  | "updatedById"
  | "attachments"
  | "reason",
  ExtArgs["result"]["lateness"]
>;
export type LatenessInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>;
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>;
  justification?: boolean | Prisma.Lateness$justificationArgs<ExtArgs>;
};
export type LatenessIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>;
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>;
};
export type LatenessIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>;
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>;
};

export type $LatenessPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "Lateness";
  objects: {
    student: Prisma.$StudentPayload<ExtArgs>;
    term: Prisma.$TermPayload<ExtArgs>;
    justification: Prisma.$LatenessJustificationPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      studentId: string;
      date: Date;
      termId: string;
      duration: string;
      createdAt: Date;
      updatedAt: Date;
      createdById: string;
      updatedById: string | null;
      attachments: string[];
      reason: string | null;
    },
    ExtArgs["result"]["lateness"]
  >;
  composites: {};
};

export type LatenessGetPayload<
  S extends boolean | null | undefined | LatenessDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$LatenessPayload, S>;

export type LatenessCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<LatenessFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: LatenessCountAggregateInputType | true;
};

export interface LatenessDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["Lateness"];
    meta: { name: "Lateness" };
  };
  /**
   * Find zero or one Lateness that matches the filter.
   * @param {LatenessFindUniqueArgs} args - Arguments to find a Lateness
   * @example
   * // Get one Lateness
   * const lateness = await prisma.lateness.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends LatenessFindUniqueArgs>(
    args: Prisma.SelectSubset<T, LatenessFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Lateness that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {LatenessFindUniqueOrThrowArgs} args - Arguments to find a Lateness
   * @example
   * // Get one Lateness
   * const lateness = await prisma.lateness.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends LatenessFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, LatenessFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Lateness that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessFindFirstArgs} args - Arguments to find a Lateness
   * @example
   * // Get one Lateness
   * const lateness = await prisma.lateness.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends LatenessFindFirstArgs>(
    args?: Prisma.SelectSubset<T, LatenessFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Lateness that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessFindFirstOrThrowArgs} args - Arguments to find a Lateness
   * @example
   * // Get one Lateness
   * const lateness = await prisma.lateness.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends LatenessFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, LatenessFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Latenesses that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Latenesses
   * const latenesses = await prisma.lateness.findMany()
   *
   * // Get first 10 Latenesses
   * const latenesses = await prisma.lateness.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const latenessWithIdOnly = await prisma.lateness.findMany({ select: { id: true } })
   *
   */
  findMany<T extends LatenessFindManyArgs>(
    args?: Prisma.SelectSubset<T, LatenessFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a Lateness.
   * @param {LatenessCreateArgs} args - Arguments to create a Lateness.
   * @example
   * // Create one Lateness
   * const Lateness = await prisma.lateness.create({
   *   data: {
   *     // ... data to create a Lateness
   *   }
   * })
   *
   */
  create<T extends LatenessCreateArgs>(
    args: Prisma.SelectSubset<T, LatenessCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Latenesses.
   * @param {LatenessCreateManyArgs} args - Arguments to create many Latenesses.
   * @example
   * // Create many Latenesses
   * const lateness = await prisma.lateness.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends LatenessCreateManyArgs>(
    args?: Prisma.SelectSubset<T, LatenessCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Latenesses and returns the data saved in the database.
   * @param {LatenessCreateManyAndReturnArgs} args - Arguments to create many Latenesses.
   * @example
   * // Create many Latenesses
   * const lateness = await prisma.lateness.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Latenesses and only return the `id`
   * const latenessWithIdOnly = await prisma.lateness.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends LatenessCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, LatenessCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Lateness.
   * @param {LatenessDeleteArgs} args - Arguments to delete one Lateness.
   * @example
   * // Delete one Lateness
   * const Lateness = await prisma.lateness.delete({
   *   where: {
   *     // ... filter to delete one Lateness
   *   }
   * })
   *
   */
  delete<T extends LatenessDeleteArgs>(
    args: Prisma.SelectSubset<T, LatenessDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Lateness.
   * @param {LatenessUpdateArgs} args - Arguments to update one Lateness.
   * @example
   * // Update one Lateness
   * const lateness = await prisma.lateness.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends LatenessUpdateArgs>(
    args: Prisma.SelectSubset<T, LatenessUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Latenesses.
   * @param {LatenessDeleteManyArgs} args - Arguments to filter Latenesses to delete.
   * @example
   * // Delete a few Latenesses
   * const { count } = await prisma.lateness.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends LatenessDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, LatenessDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Latenesses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Latenesses
   * const lateness = await prisma.lateness.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends LatenessUpdateManyArgs>(
    args: Prisma.SelectSubset<T, LatenessUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Latenesses and returns the data updated in the database.
   * @param {LatenessUpdateManyAndReturnArgs} args - Arguments to update many Latenesses.
   * @example
   * // Update many Latenesses
   * const lateness = await prisma.lateness.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Latenesses and only return the `id`
   * const latenessWithIdOnly = await prisma.lateness.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends LatenessUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, LatenessUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Lateness.
   * @param {LatenessUpsertArgs} args - Arguments to update or create a Lateness.
   * @example
   * // Update or create a Lateness
   * const lateness = await prisma.lateness.upsert({
   *   create: {
   *     // ... data to create a Lateness
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Lateness we want to update
   *   }
   * })
   */
  upsert<T extends LatenessUpsertArgs>(
    args: Prisma.SelectSubset<T, LatenessUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Latenesses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessCountArgs} args - Arguments to filter Latenesses to count.
   * @example
   * // Count the number of Latenesses
   * const count = await prisma.lateness.count({
   *   where: {
   *     // ... the filter for the Latenesses we want to count
   *   }
   * })
   **/
  count<T extends LatenessCountArgs>(
    args?: Prisma.Subset<T, LatenessCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], LatenessCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Lateness.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends LatenessAggregateArgs>(
    args: Prisma.Subset<T, LatenessAggregateArgs>,
  ): Prisma.PrismaPromise<GetLatenessAggregateType<T>>;

  /**
   * Group by Lateness.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LatenessGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends LatenessGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: LatenessGroupByArgs["orderBy"] }
      : { orderBy?: LatenessGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, LatenessGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetLatenessGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Lateness model
   */
  readonly fields: LatenessFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Lateness.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__LatenessClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  term<T extends Prisma.TermDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TermDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__TermClient<
    | runtime.Types.Result.GetResult<
        Prisma.$TermPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  justification<T extends Prisma.Lateness$justificationArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Lateness$justificationArgs<ExtArgs>>,
  ): Prisma.Prisma__LatenessJustificationClient<
    runtime.Types.Result.GetResult<
      Prisma.$LatenessJustificationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Lateness model
 */
export interface LatenessFieldRefs {
  readonly id: Prisma.FieldRef<"Lateness", "Int">;
  readonly studentId: Prisma.FieldRef<"Lateness", "String">;
  readonly date: Prisma.FieldRef<"Lateness", "DateTime">;
  readonly termId: Prisma.FieldRef<"Lateness", "String">;
  readonly duration: Prisma.FieldRef<"Lateness", "String">;
  readonly createdAt: Prisma.FieldRef<"Lateness", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"Lateness", "DateTime">;
  readonly createdById: Prisma.FieldRef<"Lateness", "String">;
  readonly updatedById: Prisma.FieldRef<"Lateness", "String">;
  readonly attachments: Prisma.FieldRef<"Lateness", "String[]">;
  readonly reason: Prisma.FieldRef<"Lateness", "String">;
}

// Custom InputTypes
/**
 * Lateness findUnique
 */
export type LatenessFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * Filter, which Lateness to fetch.
   */
  where: Prisma.LatenessWhereUniqueInput;
};

/**
 * Lateness findUniqueOrThrow
 */
export type LatenessFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * Filter, which Lateness to fetch.
   */
  where: Prisma.LatenessWhereUniqueInput;
};

/**
 * Lateness findFirst
 */
export type LatenessFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * Filter, which Lateness to fetch.
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Latenesses to fetch.
   */
  orderBy?:
    | Prisma.LatenessOrderByWithRelationInput
    | Prisma.LatenessOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Latenesses.
   */
  cursor?: Prisma.LatenessWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Latenesses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Latenesses.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Latenesses.
   */
  distinct?: Prisma.LatenessScalarFieldEnum | Prisma.LatenessScalarFieldEnum[];
};

/**
 * Lateness findFirstOrThrow
 */
export type LatenessFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * Filter, which Lateness to fetch.
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Latenesses to fetch.
   */
  orderBy?:
    | Prisma.LatenessOrderByWithRelationInput
    | Prisma.LatenessOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Latenesses.
   */
  cursor?: Prisma.LatenessWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Latenesses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Latenesses.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Latenesses.
   */
  distinct?: Prisma.LatenessScalarFieldEnum | Prisma.LatenessScalarFieldEnum[];
};

/**
 * Lateness findMany
 */
export type LatenessFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * Filter, which Latenesses to fetch.
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Latenesses to fetch.
   */
  orderBy?:
    | Prisma.LatenessOrderByWithRelationInput
    | Prisma.LatenessOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Latenesses.
   */
  cursor?: Prisma.LatenessWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Latenesses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Latenesses.
   */
  skip?: number;
  distinct?: Prisma.LatenessScalarFieldEnum | Prisma.LatenessScalarFieldEnum[];
};

/**
 * Lateness create
 */
export type LatenessCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * The data needed to create a Lateness.
   */
  data: Prisma.XOR<
    Prisma.LatenessCreateInput,
    Prisma.LatenessUncheckedCreateInput
  >;
};

/**
 * Lateness createMany
 */
export type LatenessCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Latenesses.
   */
  data: Prisma.LatenessCreateManyInput | Prisma.LatenessCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Lateness createManyAndReturn
 */
export type LatenessCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * The data used to create many Latenesses.
   */
  data: Prisma.LatenessCreateManyInput | Prisma.LatenessCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Lateness update
 */
export type LatenessUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * The data needed to update a Lateness.
   */
  data: Prisma.XOR<
    Prisma.LatenessUpdateInput,
    Prisma.LatenessUncheckedUpdateInput
  >;
  /**
   * Choose, which Lateness to update.
   */
  where: Prisma.LatenessWhereUniqueInput;
};

/**
 * Lateness updateMany
 */
export type LatenessUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Latenesses.
   */
  data: Prisma.XOR<
    Prisma.LatenessUpdateManyMutationInput,
    Prisma.LatenessUncheckedUpdateManyInput
  >;
  /**
   * Filter which Latenesses to update
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * Limit how many Latenesses to update.
   */
  limit?: number;
};

/**
 * Lateness updateManyAndReturn
 */
export type LatenessUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * The data used to update Latenesses.
   */
  data: Prisma.XOR<
    Prisma.LatenessUpdateManyMutationInput,
    Prisma.LatenessUncheckedUpdateManyInput
  >;
  /**
   * Filter which Latenesses to update
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * Limit how many Latenesses to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Lateness upsert
 */
export type LatenessUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * The filter to search for the Lateness to update in case it exists.
   */
  where: Prisma.LatenessWhereUniqueInput;
  /**
   * In case the Lateness found by the `where` argument doesn't exist, create a new Lateness with this data.
   */
  create: Prisma.XOR<
    Prisma.LatenessCreateInput,
    Prisma.LatenessUncheckedCreateInput
  >;
  /**
   * In case the Lateness was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.LatenessUpdateInput,
    Prisma.LatenessUncheckedUpdateInput
  >;
};

/**
 * Lateness delete
 */
export type LatenessDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  /**
   * Filter which Lateness to delete.
   */
  where: Prisma.LatenessWhereUniqueInput;
};

/**
 * Lateness deleteMany
 */
export type LatenessDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Latenesses to delete
   */
  where?: Prisma.LatenessWhereInput;
  /**
   * Limit how many Latenesses to delete.
   */
  limit?: number;
};

/**
 * Lateness.justification
 */
export type Lateness$justificationArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the LatenessJustification
   */
  select?: Prisma.LatenessJustificationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the LatenessJustification
   */
  omit?: Prisma.LatenessJustificationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessJustificationInclude<ExtArgs> | null;
  where?: Prisma.LatenessJustificationWhereInput;
};

/**
 * Lateness without action
 */
export type LatenessDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
};
