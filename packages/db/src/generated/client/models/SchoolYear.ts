/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `SchoolYear` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model SchoolYear
 *
 */
export type SchoolYearModel =
  runtime.Types.Result.DefaultSelection<Prisma.$SchoolYearPayload>;

export type AggregateSchoolYear = {
  _count: SchoolYearCountAggregateOutputType | null;
  _min: SchoolYearMinAggregateOutputType | null;
  _max: SchoolYearMaxAggregateOutputType | null;
};

export type SchoolYearMinAggregateOutputType = {
  id: string | null;
  observation: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  abbreviation: string | null;
  createdBy: string | null;
  updatedBy: string | null;
  isDefault: boolean | null;
  deletedAt: Date | null;
  deletedBy: string | null;
  isActive: boolean | null;
  isDeleted: boolean | null;
  name: string | null;
  startDate: Date | null;
  endDate: Date | null;
  enrollmentStartDate: Date | null;
  enrollmentEndDate: Date | null;
  schoolId: string | null;
};

export type SchoolYearMaxAggregateOutputType = {
  id: string | null;
  observation: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  abbreviation: string | null;
  createdBy: string | null;
  updatedBy: string | null;
  isDefault: boolean | null;
  deletedAt: Date | null;
  deletedBy: string | null;
  isActive: boolean | null;
  isDeleted: boolean | null;
  name: string | null;
  startDate: Date | null;
  endDate: Date | null;
  enrollmentStartDate: Date | null;
  enrollmentEndDate: Date | null;
  schoolId: string | null;
};

export type SchoolYearCountAggregateOutputType = {
  id: number;
  observation: number;
  createdAt: number;
  updatedAt: number;
  abbreviation: number;
  createdBy: number;
  updatedBy: number;
  isDefault: number;
  deletedAt: number;
  deletedBy: number;
  isActive: number;
  isDeleted: number;
  name: number;
  startDate: number;
  endDate: number;
  enrollmentStartDate: number;
  enrollmentEndDate: number;
  schoolId: number;
  _all: number;
};

export type SchoolYearMinAggregateInputType = {
  id?: true;
  observation?: true;
  createdAt?: true;
  updatedAt?: true;
  abbreviation?: true;
  createdBy?: true;
  updatedBy?: true;
  isDefault?: true;
  deletedAt?: true;
  deletedBy?: true;
  isActive?: true;
  isDeleted?: true;
  name?: true;
  startDate?: true;
  endDate?: true;
  enrollmentStartDate?: true;
  enrollmentEndDate?: true;
  schoolId?: true;
};

export type SchoolYearMaxAggregateInputType = {
  id?: true;
  observation?: true;
  createdAt?: true;
  updatedAt?: true;
  abbreviation?: true;
  createdBy?: true;
  updatedBy?: true;
  isDefault?: true;
  deletedAt?: true;
  deletedBy?: true;
  isActive?: true;
  isDeleted?: true;
  name?: true;
  startDate?: true;
  endDate?: true;
  enrollmentStartDate?: true;
  enrollmentEndDate?: true;
  schoolId?: true;
};

export type SchoolYearCountAggregateInputType = {
  id?: true;
  observation?: true;
  createdAt?: true;
  updatedAt?: true;
  abbreviation?: true;
  createdBy?: true;
  updatedBy?: true;
  isDefault?: true;
  deletedAt?: true;
  deletedBy?: true;
  isActive?: true;
  isDeleted?: true;
  name?: true;
  startDate?: true;
  endDate?: true;
  enrollmentStartDate?: true;
  enrollmentEndDate?: true;
  schoolId?: true;
  _all?: true;
};

export type SchoolYearAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which SchoolYear to aggregate.
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SchoolYears to fetch.
   */
  orderBy?:
    | Prisma.SchoolYearOrderByWithRelationInput
    | Prisma.SchoolYearOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.SchoolYearWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SchoolYears from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SchoolYears.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned SchoolYears
   **/
  _count?: true | SchoolYearCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: SchoolYearMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: SchoolYearMaxAggregateInputType;
};

export type GetSchoolYearAggregateType<T extends SchoolYearAggregateArgs> = {
  [P in keyof T & keyof AggregateSchoolYear]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSchoolYear[P]>
    : Prisma.GetScalarType<T[P], AggregateSchoolYear[P]>;
};

export type SchoolYearGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolYearWhereInput;
  orderBy?:
    | Prisma.SchoolYearOrderByWithAggregationInput
    | Prisma.SchoolYearOrderByWithAggregationInput[];
  by: Prisma.SchoolYearScalarFieldEnum[] | Prisma.SchoolYearScalarFieldEnum;
  having?: Prisma.SchoolYearScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: SchoolYearCountAggregateInputType | true;
  _min?: SchoolYearMinAggregateInputType;
  _max?: SchoolYearMaxAggregateInputType;
};

export type SchoolYearGroupByOutputType = {
  id: string;
  observation: string | null;
  createdAt: Date | null;
  updatedAt: Date;
  abbreviation: string | null;
  createdBy: string | null;
  updatedBy: string | null;
  isDefault: boolean | null;
  deletedAt: Date | null;
  deletedBy: string | null;
  isActive: boolean;
  isDeleted: boolean | null;
  name: string;
  startDate: Date;
  endDate: Date;
  enrollmentStartDate: Date | null;
  enrollmentEndDate: Date | null;
  schoolId: string;
  _count: SchoolYearCountAggregateOutputType | null;
  _min: SchoolYearMinAggregateOutputType | null;
  _max: SchoolYearMaxAggregateOutputType | null;
};

type GetSchoolYearGroupByPayload<T extends SchoolYearGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<SchoolYearGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof SchoolYearGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SchoolYearGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SchoolYearGroupByOutputType[P]>;
      }
    >
  >;

export type SchoolYearWhereInput = {
  AND?: Prisma.SchoolYearWhereInput | Prisma.SchoolYearWhereInput[];
  OR?: Prisma.SchoolYearWhereInput[];
  NOT?: Prisma.SchoolYearWhereInput | Prisma.SchoolYearWhereInput[];
  id?: Prisma.StringFilter<"SchoolYear"> | string;
  observation?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  createdAt?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
  abbreviation?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  createdBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  updatedBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  isDefault?: Prisma.BoolNullableFilter<"SchoolYear"> | boolean | null;
  deletedAt?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  deletedBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  isActive?: Prisma.BoolFilter<"SchoolYear"> | boolean;
  isDeleted?: Prisma.BoolNullableFilter<"SchoolYear"> | boolean | null;
  name?: Prisma.StringFilter<"SchoolYear"> | string;
  startDate?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
  endDate?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
  enrollmentStartDate?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFilter<"SchoolYear"> | string;
  classrooms?: Prisma.ClassroomListRelationFilter;
  enrollments?: Prisma.EnrollmentListRelationFilter;
  ProgramCategory?: Prisma.ProgramCategoryListRelationFilter;
  terms?: Prisma.TermListRelationFilter;
  transactions?: Prisma.TransactionListRelationFilter;
  school?: Prisma.XOR<
    Prisma.SchoolScalarRelationFilter,
    Prisma.SchoolWhereInput
  >;
  timetableCategories?: Prisma.TimetableCategoryListRelationFilter;
  inventoryConsumables?: Prisma.InventoryConsumableListRelationFilter;
  consumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
  stockMovements?: Prisma.InventoryStockMovementListRelationFilter;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageListRelationFilter;
  events?: Prisma.SchoolYearEventListRelationFilter;
  userNotifications?: Prisma.UserNotificationListRelationFilter;
  accountingJournals?: Prisma.AccountingJournalListRelationFilter;
  scheduleDivisions?: Prisma.ScheduleDivisionListRelationFilter;
};

export type SchoolYearOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  observation?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  abbreviation?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  isDefault?: Prisma.SortOrderInput | Prisma.SortOrder;
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  deletedBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  isDeleted?: Prisma.SortOrderInput | Prisma.SortOrder;
  name?: Prisma.SortOrder;
  startDate?: Prisma.SortOrder;
  endDate?: Prisma.SortOrder;
  enrollmentStartDate?: Prisma.SortOrderInput | Prisma.SortOrder;
  enrollmentEndDate?: Prisma.SortOrderInput | Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  classrooms?: Prisma.ClassroomOrderByRelationAggregateInput;
  enrollments?: Prisma.EnrollmentOrderByRelationAggregateInput;
  ProgramCategory?: Prisma.ProgramCategoryOrderByRelationAggregateInput;
  terms?: Prisma.TermOrderByRelationAggregateInput;
  transactions?: Prisma.TransactionOrderByRelationAggregateInput;
  school?: Prisma.SchoolOrderByWithRelationInput;
  timetableCategories?: Prisma.TimetableCategoryOrderByRelationAggregateInput;
  inventoryConsumables?: Prisma.InventoryConsumableOrderByRelationAggregateInput;
  consumableUsages?: Prisma.InventoryConsumableUsageOrderByRelationAggregateInput;
  stockMovements?: Prisma.InventoryStockMovementOrderByRelationAggregateInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageOrderByRelationAggregateInput;
  events?: Prisma.SchoolYearEventOrderByRelationAggregateInput;
  userNotifications?: Prisma.UserNotificationOrderByRelationAggregateInput;
  accountingJournals?: Prisma.AccountingJournalOrderByRelationAggregateInput;
  scheduleDivisions?: Prisma.ScheduleDivisionOrderByRelationAggregateInput;
};

export type SchoolYearWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.SchoolYearWhereInput | Prisma.SchoolYearWhereInput[];
    OR?: Prisma.SchoolYearWhereInput[];
    NOT?: Prisma.SchoolYearWhereInput | Prisma.SchoolYearWhereInput[];
    observation?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
    createdAt?:
      | Prisma.DateTimeNullableFilter<"SchoolYear">
      | Date
      | string
      | null;
    updatedAt?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
    abbreviation?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
    createdBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
    updatedBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
    isDefault?: Prisma.BoolNullableFilter<"SchoolYear"> | boolean | null;
    deletedAt?:
      | Prisma.DateTimeNullableFilter<"SchoolYear">
      | Date
      | string
      | null;
    deletedBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
    isActive?: Prisma.BoolFilter<"SchoolYear"> | boolean;
    isDeleted?: Prisma.BoolNullableFilter<"SchoolYear"> | boolean | null;
    name?: Prisma.StringFilter<"SchoolYear"> | string;
    startDate?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
    endDate?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
    enrollmentStartDate?:
      | Prisma.DateTimeNullableFilter<"SchoolYear">
      | Date
      | string
      | null;
    enrollmentEndDate?:
      | Prisma.DateTimeNullableFilter<"SchoolYear">
      | Date
      | string
      | null;
    schoolId?: Prisma.StringFilter<"SchoolYear"> | string;
    classrooms?: Prisma.ClassroomListRelationFilter;
    enrollments?: Prisma.EnrollmentListRelationFilter;
    ProgramCategory?: Prisma.ProgramCategoryListRelationFilter;
    terms?: Prisma.TermListRelationFilter;
    transactions?: Prisma.TransactionListRelationFilter;
    school?: Prisma.XOR<
      Prisma.SchoolScalarRelationFilter,
      Prisma.SchoolWhereInput
    >;
    timetableCategories?: Prisma.TimetableCategoryListRelationFilter;
    inventoryConsumables?: Prisma.InventoryConsumableListRelationFilter;
    consumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
    stockMovements?: Prisma.InventoryStockMovementListRelationFilter;
    inventoryAssetUsages?: Prisma.InventoryAssetUsageListRelationFilter;
    events?: Prisma.SchoolYearEventListRelationFilter;
    userNotifications?: Prisma.UserNotificationListRelationFilter;
    accountingJournals?: Prisma.AccountingJournalListRelationFilter;
    scheduleDivisions?: Prisma.ScheduleDivisionListRelationFilter;
  },
  "id"
>;

export type SchoolYearOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  observation?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  abbreviation?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  isDefault?: Prisma.SortOrderInput | Prisma.SortOrder;
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  deletedBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  isDeleted?: Prisma.SortOrderInput | Prisma.SortOrder;
  name?: Prisma.SortOrder;
  startDate?: Prisma.SortOrder;
  endDate?: Prisma.SortOrder;
  enrollmentStartDate?: Prisma.SortOrderInput | Prisma.SortOrder;
  enrollmentEndDate?: Prisma.SortOrderInput | Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  _count?: Prisma.SchoolYearCountOrderByAggregateInput;
  _max?: Prisma.SchoolYearMaxOrderByAggregateInput;
  _min?: Prisma.SchoolYearMinOrderByAggregateInput;
};

export type SchoolYearScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.SchoolYearScalarWhereWithAggregatesInput
    | Prisma.SchoolYearScalarWhereWithAggregatesInput[];
  OR?: Prisma.SchoolYearScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.SchoolYearScalarWhereWithAggregatesInput
    | Prisma.SchoolYearScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"SchoolYear"> | string;
  observation?:
    | Prisma.StringNullableWithAggregatesFilter<"SchoolYear">
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"SchoolYear">
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"SchoolYear"> | Date | string;
  abbreviation?:
    | Prisma.StringNullableWithAggregatesFilter<"SchoolYear">
    | string
    | null;
  createdBy?:
    | Prisma.StringNullableWithAggregatesFilter<"SchoolYear">
    | string
    | null;
  updatedBy?:
    | Prisma.StringNullableWithAggregatesFilter<"SchoolYear">
    | string
    | null;
  isDefault?:
    | Prisma.BoolNullableWithAggregatesFilter<"SchoolYear">
    | boolean
    | null;
  deletedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"SchoolYear">
    | Date
    | string
    | null;
  deletedBy?:
    | Prisma.StringNullableWithAggregatesFilter<"SchoolYear">
    | string
    | null;
  isActive?: Prisma.BoolWithAggregatesFilter<"SchoolYear"> | boolean;
  isDeleted?:
    | Prisma.BoolNullableWithAggregatesFilter<"SchoolYear">
    | boolean
    | null;
  name?: Prisma.StringWithAggregatesFilter<"SchoolYear"> | string;
  startDate?: Prisma.DateTimeWithAggregatesFilter<"SchoolYear"> | Date | string;
  endDate?: Prisma.DateTimeWithAggregatesFilter<"SchoolYear"> | Date | string;
  enrollmentStartDate?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"SchoolYear">
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"SchoolYear">
    | Date
    | string
    | null;
  schoolId?: Prisma.StringWithAggregatesFilter<"SchoolYear"> | string;
};

export type SchoolYearCreateInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateManyInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
};

export type SchoolYearUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
};

export type SchoolYearUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type SchoolYearScalarRelationFilter = {
  is?: Prisma.SchoolYearWhereInput;
  isNot?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearListRelationFilter = {
  every?: Prisma.SchoolYearWhereInput;
  some?: Prisma.SchoolYearWhereInput;
  none?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type SchoolYearCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  abbreviation?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  isDefault?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
  deletedBy?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  isDeleted?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  startDate?: Prisma.SortOrder;
  endDate?: Prisma.SortOrder;
  enrollmentStartDate?: Prisma.SortOrder;
  enrollmentEndDate?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type SchoolYearMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  abbreviation?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  isDefault?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
  deletedBy?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  isDeleted?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  startDate?: Prisma.SortOrder;
  endDate?: Prisma.SortOrder;
  enrollmentStartDate?: Prisma.SortOrder;
  enrollmentEndDate?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type SchoolYearMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  abbreviation?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
  isDefault?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
  deletedBy?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  isDeleted?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  startDate?: Prisma.SortOrder;
  endDate?: Prisma.SortOrder;
  enrollmentStartDate?: Prisma.SortOrder;
  enrollmentEndDate?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type SchoolYearCreateNestedOneWithoutTimetableCategoriesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolYearUncheckedCreateWithoutTimetableCategoriesInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutTimetableCategoriesInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutTimetableCategoriesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolYearUncheckedCreateWithoutTimetableCategoriesInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutTimetableCategoriesInput;
  upsert?: Prisma.SchoolYearUpsertWithoutTimetableCategoriesInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutTimetableCategoriesInput,
      Prisma.SchoolYearUpdateWithoutTimetableCategoriesInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutTimetableCategoriesInput
  >;
};

export type SchoolYearCreateNestedOneWithoutInventoryConsumablesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolYearUncheckedCreateWithoutInventoryConsumablesInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutInventoryConsumablesInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutInventoryConsumablesNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.SchoolYearCreateWithoutInventoryConsumablesInput,
      Prisma.SchoolYearUncheckedCreateWithoutInventoryConsumablesInput
    >;
    connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutInventoryConsumablesInput;
    upsert?: Prisma.SchoolYearUpsertWithoutInventoryConsumablesInput;
    connect?: Prisma.SchoolYearWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.SchoolYearUpdateToOneWithWhereWithoutInventoryConsumablesInput,
        Prisma.SchoolYearUpdateWithoutInventoryConsumablesInput
      >,
      Prisma.SchoolYearUncheckedUpdateWithoutInventoryConsumablesInput
    >;
  };

export type SchoolYearCreateNestedOneWithoutInventoryAssetUsagesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutInventoryAssetUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutInventoryAssetUsagesInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutInventoryAssetUsagesInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutInventoryAssetUsagesNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.SchoolYearCreateWithoutInventoryAssetUsagesInput,
      Prisma.SchoolYearUncheckedCreateWithoutInventoryAssetUsagesInput
    >;
    connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutInventoryAssetUsagesInput;
    upsert?: Prisma.SchoolYearUpsertWithoutInventoryAssetUsagesInput;
    connect?: Prisma.SchoolYearWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.SchoolYearUpdateToOneWithWhereWithoutInventoryAssetUsagesInput,
        Prisma.SchoolYearUpdateWithoutInventoryAssetUsagesInput
      >,
      Prisma.SchoolYearUncheckedUpdateWithoutInventoryAssetUsagesInput
    >;
  };

export type SchoolYearCreateNestedOneWithoutConsumableUsagesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutConsumableUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutConsumableUsagesInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutConsumableUsagesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutConsumableUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutConsumableUsagesInput;
  upsert?: Prisma.SchoolYearUpsertWithoutConsumableUsagesInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutConsumableUsagesInput,
      Prisma.SchoolYearUpdateWithoutConsumableUsagesInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutConsumableUsagesInput
  >;
};

export type SchoolYearCreateNestedOneWithoutStockMovementsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutStockMovementsInput,
    Prisma.SchoolYearUncheckedCreateWithoutStockMovementsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutStockMovementsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutStockMovementsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutStockMovementsInput,
    Prisma.SchoolYearUncheckedCreateWithoutStockMovementsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutStockMovementsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutStockMovementsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutStockMovementsInput,
      Prisma.SchoolYearUpdateWithoutStockMovementsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutStockMovementsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutClassroomsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutClassroomsInput,
    Prisma.SchoolYearUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutClassroomsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutClassroomsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutClassroomsInput,
    Prisma.SchoolYearUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutClassroomsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutClassroomsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutClassroomsInput,
      Prisma.SchoolYearUpdateWithoutClassroomsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutClassroomsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutEnrollmentsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEnrollmentsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEnrollmentsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutEnrollmentsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutEnrollmentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEnrollmentsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEnrollmentsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutEnrollmentsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutEnrollmentsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutEnrollmentsInput,
      Prisma.SchoolYearUpdateWithoutEnrollmentsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutEnrollmentsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutTermsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTermsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTermsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutTermsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutTermsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTermsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTermsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutTermsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutTermsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutTermsInput,
      Prisma.SchoolYearUpdateWithoutTermsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutTermsInput
  >;
};

export type SchoolYearCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolYearCreateWithoutSchoolInput,
        Prisma.SchoolYearUncheckedCreateWithoutSchoolInput
      >
    | Prisma.SchoolYearCreateWithoutSchoolInput[]
    | Prisma.SchoolYearUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.SchoolYearCreateManySchoolInputEnvelope;
  connect?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
};

export type SchoolYearUncheckedCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolYearCreateWithoutSchoolInput,
        Prisma.SchoolYearUncheckedCreateWithoutSchoolInput
      >
    | Prisma.SchoolYearCreateWithoutSchoolInput[]
    | Prisma.SchoolYearUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.SchoolYearCreateManySchoolInputEnvelope;
  connect?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
};

export type SchoolYearUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolYearCreateWithoutSchoolInput,
        Prisma.SchoolYearUncheckedCreateWithoutSchoolInput
      >
    | Prisma.SchoolYearCreateWithoutSchoolInput[]
    | Prisma.SchoolYearUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.SchoolYearUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.SchoolYearUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.SchoolYearCreateManySchoolInputEnvelope;
  set?: Prisma.SchoolYearWhereUniqueInput | Prisma.SchoolYearWhereUniqueInput[];
  disconnect?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
  delete?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
  connect?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
  update?:
    | Prisma.SchoolYearUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.SchoolYearUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.SchoolYearUpdateManyWithWhereWithoutSchoolInput
    | Prisma.SchoolYearUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?:
    | Prisma.SchoolYearScalarWhereInput
    | Prisma.SchoolYearScalarWhereInput[];
};

export type SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolYearCreateWithoutSchoolInput,
        Prisma.SchoolYearUncheckedCreateWithoutSchoolInput
      >
    | Prisma.SchoolYearCreateWithoutSchoolInput[]
    | Prisma.SchoolYearUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput
    | Prisma.SchoolYearCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.SchoolYearUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.SchoolYearUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.SchoolYearCreateManySchoolInputEnvelope;
  set?: Prisma.SchoolYearWhereUniqueInput | Prisma.SchoolYearWhereUniqueInput[];
  disconnect?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
  delete?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
  connect?:
    | Prisma.SchoolYearWhereUniqueInput
    | Prisma.SchoolYearWhereUniqueInput[];
  update?:
    | Prisma.SchoolYearUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.SchoolYearUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.SchoolYearUpdateManyWithWhereWithoutSchoolInput
    | Prisma.SchoolYearUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?:
    | Prisma.SchoolYearScalarWhereInput
    | Prisma.SchoolYearScalarWhereInput[];
};

export type SchoolYearCreateNestedOneWithoutProgramCategoryInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutProgramCategoryInput,
    Prisma.SchoolYearUncheckedCreateWithoutProgramCategoryInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutProgramCategoryInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutProgramCategoryNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutProgramCategoryInput,
    Prisma.SchoolYearUncheckedCreateWithoutProgramCategoryInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutProgramCategoryInput;
  upsert?: Prisma.SchoolYearUpsertWithoutProgramCategoryInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutProgramCategoryInput,
      Prisma.SchoolYearUpdateWithoutProgramCategoryInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutProgramCategoryInput
  >;
};

export type SchoolYearCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTransactionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutTransactionsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTransactionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutTransactionsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutTransactionsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutTransactionsInput,
      Prisma.SchoolYearUpdateWithoutTransactionsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutTransactionsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutAccountingJournalsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutAccountingJournalsInput,
    Prisma.SchoolYearUncheckedCreateWithoutAccountingJournalsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutAccountingJournalsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutAccountingJournalsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutAccountingJournalsInput,
    Prisma.SchoolYearUncheckedCreateWithoutAccountingJournalsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutAccountingJournalsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutAccountingJournalsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutAccountingJournalsInput,
      Prisma.SchoolYearUpdateWithoutAccountingJournalsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutAccountingJournalsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutEventsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEventsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEventsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutEventsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutEventsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEventsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEventsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutEventsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutEventsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutEventsInput,
      Prisma.SchoolYearUpdateWithoutEventsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutEventsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutUserNotificationsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutUserNotificationsInput,
    Prisma.SchoolYearUncheckedCreateWithoutUserNotificationsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutUserNotificationsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutUserNotificationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutUserNotificationsInput,
    Prisma.SchoolYearUncheckedCreateWithoutUserNotificationsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutUserNotificationsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutUserNotificationsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutUserNotificationsInput,
      Prisma.SchoolYearUpdateWithoutUserNotificationsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutUserNotificationsInput
  >;
};

export type SchoolYearCreateNestedOneWithoutScheduleDivisionsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutScheduleDivisionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutScheduleDivisionsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutScheduleDivisionsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
};

export type SchoolYearUpdateOneRequiredWithoutScheduleDivisionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutScheduleDivisionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutScheduleDivisionsInput
  >;
  connectOrCreate?: Prisma.SchoolYearCreateOrConnectWithoutScheduleDivisionsInput;
  upsert?: Prisma.SchoolYearUpsertWithoutScheduleDivisionsInput;
  connect?: Prisma.SchoolYearWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolYearUpdateToOneWithWhereWithoutScheduleDivisionsInput,
      Prisma.SchoolYearUpdateWithoutScheduleDivisionsInput
    >,
    Prisma.SchoolYearUncheckedUpdateWithoutScheduleDivisionsInput
  >;
};

export type SchoolYearCreateWithoutTimetableCategoriesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutTimetableCategoriesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutTimetableCategoriesInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolYearUncheckedCreateWithoutTimetableCategoriesInput
  >;
};

export type SchoolYearUpsertWithoutTimetableCategoriesInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutTimetableCategoriesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutTimetableCategoriesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolYearUncheckedCreateWithoutTimetableCategoriesInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutTimetableCategoriesInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutTimetableCategoriesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutTimetableCategoriesInput
  >;
};

export type SchoolYearUpdateWithoutTimetableCategoriesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutTimetableCategoriesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutInventoryConsumablesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutInventoryConsumablesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutInventoryConsumablesInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolYearUncheckedCreateWithoutInventoryConsumablesInput
  >;
};

export type SchoolYearUpsertWithoutInventoryConsumablesInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutInventoryConsumablesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutInventoryConsumablesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolYearUncheckedCreateWithoutInventoryConsumablesInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutInventoryConsumablesInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutInventoryConsumablesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutInventoryConsumablesInput
  >;
};

export type SchoolYearUpdateWithoutInventoryConsumablesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutInventoryConsumablesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutInventoryAssetUsagesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutInventoryAssetUsagesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutInventoryAssetUsagesInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutInventoryAssetUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutInventoryAssetUsagesInput
  >;
};

export type SchoolYearUpsertWithoutInventoryAssetUsagesInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutInventoryAssetUsagesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutInventoryAssetUsagesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutInventoryAssetUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutInventoryAssetUsagesInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutInventoryAssetUsagesInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutInventoryAssetUsagesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutInventoryAssetUsagesInput
  >;
};

export type SchoolYearUpdateWithoutInventoryAssetUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutInventoryAssetUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutConsumableUsagesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutConsumableUsagesInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutConsumableUsagesInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutConsumableUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutConsumableUsagesInput
  >;
};

export type SchoolYearUpsertWithoutConsumableUsagesInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutConsumableUsagesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutConsumableUsagesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutConsumableUsagesInput,
    Prisma.SchoolYearUncheckedCreateWithoutConsumableUsagesInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutConsumableUsagesInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutConsumableUsagesInput,
    Prisma.SchoolYearUncheckedUpdateWithoutConsumableUsagesInput
  >;
};

export type SchoolYearUpdateWithoutConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutStockMovementsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutStockMovementsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutStockMovementsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutStockMovementsInput,
    Prisma.SchoolYearUncheckedCreateWithoutStockMovementsInput
  >;
};

export type SchoolYearUpsertWithoutStockMovementsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutStockMovementsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutStockMovementsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutStockMovementsInput,
    Prisma.SchoolYearUncheckedCreateWithoutStockMovementsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutStockMovementsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutStockMovementsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutStockMovementsInput
  >;
};

export type SchoolYearUpdateWithoutStockMovementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutStockMovementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutClassroomsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutClassroomsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutClassroomsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutClassroomsInput,
    Prisma.SchoolYearUncheckedCreateWithoutClassroomsInput
  >;
};

export type SchoolYearUpsertWithoutClassroomsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutClassroomsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutClassroomsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutClassroomsInput,
    Prisma.SchoolYearUncheckedCreateWithoutClassroomsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutClassroomsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutClassroomsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutClassroomsInput
  >;
};

export type SchoolYearUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutEnrollmentsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutEnrollmentsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutEnrollmentsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEnrollmentsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEnrollmentsInput
  >;
};

export type SchoolYearUpsertWithoutEnrollmentsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutEnrollmentsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutEnrollmentsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEnrollmentsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEnrollmentsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutEnrollmentsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutEnrollmentsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutEnrollmentsInput
  >;
};

export type SchoolYearUpdateWithoutEnrollmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutEnrollmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutTermsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutTermsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutTermsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTermsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTermsInput
  >;
};

export type SchoolYearUpsertWithoutTermsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutTermsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutTermsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTermsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTermsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutTermsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutTermsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutTermsInput
  >;
};

export type SchoolYearUpdateWithoutTermsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutTermsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutSchoolInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutSchoolInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutSchoolInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutSchoolInput,
    Prisma.SchoolYearUncheckedCreateWithoutSchoolInput
  >;
};

export type SchoolYearCreateManySchoolInputEnvelope = {
  data:
    | Prisma.SchoolYearCreateManySchoolInput
    | Prisma.SchoolYearCreateManySchoolInput[];
  skipDuplicates?: boolean;
};

export type SchoolYearUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutSchoolInput,
    Prisma.SchoolYearUncheckedUpdateWithoutSchoolInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutSchoolInput,
    Prisma.SchoolYearUncheckedCreateWithoutSchoolInput
  >;
};

export type SchoolYearUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutSchoolInput,
    Prisma.SchoolYearUncheckedUpdateWithoutSchoolInput
  >;
};

export type SchoolYearUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.SchoolYearScalarWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateManyMutationInput,
    Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolInput
  >;
};

export type SchoolYearScalarWhereInput = {
  AND?: Prisma.SchoolYearScalarWhereInput | Prisma.SchoolYearScalarWhereInput[];
  OR?: Prisma.SchoolYearScalarWhereInput[];
  NOT?: Prisma.SchoolYearScalarWhereInput | Prisma.SchoolYearScalarWhereInput[];
  id?: Prisma.StringFilter<"SchoolYear"> | string;
  observation?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  createdAt?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
  abbreviation?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  createdBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  updatedBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  isDefault?: Prisma.BoolNullableFilter<"SchoolYear"> | boolean | null;
  deletedAt?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  deletedBy?: Prisma.StringNullableFilter<"SchoolYear"> | string | null;
  isActive?: Prisma.BoolFilter<"SchoolYear"> | boolean;
  isDeleted?: Prisma.BoolNullableFilter<"SchoolYear"> | boolean | null;
  name?: Prisma.StringFilter<"SchoolYear"> | string;
  startDate?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
  endDate?: Prisma.DateTimeFilter<"SchoolYear"> | Date | string;
  enrollmentStartDate?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.DateTimeNullableFilter<"SchoolYear">
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFilter<"SchoolYear"> | string;
};

export type SchoolYearCreateWithoutProgramCategoryInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutProgramCategoryInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutProgramCategoryInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutProgramCategoryInput,
    Prisma.SchoolYearUncheckedCreateWithoutProgramCategoryInput
  >;
};

export type SchoolYearUpsertWithoutProgramCategoryInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutProgramCategoryInput,
    Prisma.SchoolYearUncheckedUpdateWithoutProgramCategoryInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutProgramCategoryInput,
    Prisma.SchoolYearUncheckedCreateWithoutProgramCategoryInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutProgramCategoryInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutProgramCategoryInput,
    Prisma.SchoolYearUncheckedUpdateWithoutProgramCategoryInput
  >;
};

export type SchoolYearUpdateWithoutProgramCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutProgramCategoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutTransactionsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutTransactionsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTransactionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTransactionsInput
  >;
};

export type SchoolYearUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutTransactionsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutTransactionsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutTransactionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutTransactionsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutTransactionsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutTransactionsInput
  >;
};

export type SchoolYearUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutAccountingJournalsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutAccountingJournalsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutAccountingJournalsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutAccountingJournalsInput,
    Prisma.SchoolYearUncheckedCreateWithoutAccountingJournalsInput
  >;
};

export type SchoolYearUpsertWithoutAccountingJournalsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutAccountingJournalsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutAccountingJournalsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutAccountingJournalsInput,
    Prisma.SchoolYearUncheckedCreateWithoutAccountingJournalsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutAccountingJournalsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutAccountingJournalsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutAccountingJournalsInput
  >;
};

export type SchoolYearUpdateWithoutAccountingJournalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutAccountingJournalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutEventsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutEventsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutEventsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEventsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEventsInput
  >;
};

export type SchoolYearUpsertWithoutEventsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutEventsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutEventsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutEventsInput,
    Prisma.SchoolYearUncheckedCreateWithoutEventsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutEventsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutEventsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutEventsInput
  >;
};

export type SchoolYearUpdateWithoutEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutUserNotificationsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutUserNotificationsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutUserNotificationsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutUserNotificationsInput,
    Prisma.SchoolYearUncheckedCreateWithoutUserNotificationsInput
  >;
};

export type SchoolYearUpsertWithoutUserNotificationsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutUserNotificationsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutUserNotificationsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutUserNotificationsInput,
    Prisma.SchoolYearUncheckedCreateWithoutUserNotificationsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutUserNotificationsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutUserNotificationsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutUserNotificationsInput
  >;
};

export type SchoolYearUpdateWithoutUserNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutUserNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateWithoutScheduleDivisionsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutSchoolYearInput;
  school: Prisma.SchoolCreateNestedOneWithoutSchoolYearsInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearUncheckedCreateWithoutScheduleDivisionsInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolYearInput;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutSchoolYearInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolYearInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutSchoolYearInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolYearInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedCreateNestedManyWithoutSchoolYearInput;
  events?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolYearInput;
  userNotifications?: Prisma.UserNotificationUncheckedCreateNestedManyWithoutSchoolYearInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolYearInput;
};

export type SchoolYearCreateOrConnectWithoutScheduleDivisionsInput = {
  where: Prisma.SchoolYearWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutScheduleDivisionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutScheduleDivisionsInput
  >;
};

export type SchoolYearUpsertWithoutScheduleDivisionsInput = {
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutScheduleDivisionsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutScheduleDivisionsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolYearCreateWithoutScheduleDivisionsInput,
    Prisma.SchoolYearUncheckedCreateWithoutScheduleDivisionsInput
  >;
  where?: Prisma.SchoolYearWhereInput;
};

export type SchoolYearUpdateToOneWithWhereWithoutScheduleDivisionsInput = {
  where?: Prisma.SchoolYearWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateWithoutScheduleDivisionsInput,
    Prisma.SchoolYearUncheckedUpdateWithoutScheduleDivisionsInput
  >;
};

export type SchoolYearUpdateWithoutScheduleDivisionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutScheduleDivisionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearCreateManySchoolInput = {
  id?: string;
  observation?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  abbreviation?: string | null;
  createdBy?: string | null;
  updatedBy?: string | null;
  isDefault?: boolean | null;
  deletedAt?: Date | string | null;
  deletedBy?: string | null;
  isActive?: boolean;
  isDeleted?: boolean | null;
  name: string;
  startDate?: Date | string;
  endDate?: Date | string;
  enrollmentStartDate?: Date | string | null;
  enrollmentEndDate?: Date | string | null;
};

export type SchoolYearUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolYearNestedInput;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutSchoolYearNestedInput;
  ProgramCategory?: Prisma.ProgramCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolYearNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutSchoolYearNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolYearNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput;
  inventoryAssetUsages?: Prisma.InventoryAssetUsageUncheckedUpdateManyWithoutSchoolYearNestedInput;
  events?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolYearNestedInput;
  userNotifications?: Prisma.UserNotificationUncheckedUpdateManyWithoutSchoolYearNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolYearNestedInput;
  scheduleDivisions?: Prisma.ScheduleDivisionUncheckedUpdateManyWithoutSchoolYearNestedInput;
};

export type SchoolYearUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  abbreviation?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDefault?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isDeleted?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  endDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enrollmentStartDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  enrollmentEndDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
};

/**
 * Count Type SchoolYearCountOutputType
 */

export type SchoolYearCountOutputType = {
  classrooms: number;
  enrollments: number;
  ProgramCategory: number;
  terms: number;
  transactions: number;
  timetableCategories: number;
  inventoryConsumables: number;
  consumableUsages: number;
  stockMovements: number;
  inventoryAssetUsages: number;
  events: number;
  userNotifications: number;
  accountingJournals: number;
  scheduleDivisions: number;
};

export type SchoolYearCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  classrooms?: boolean | SchoolYearCountOutputTypeCountClassroomsArgs;
  enrollments?: boolean | SchoolYearCountOutputTypeCountEnrollmentsArgs;
  ProgramCategory?: boolean | SchoolYearCountOutputTypeCountProgramCategoryArgs;
  terms?: boolean | SchoolYearCountOutputTypeCountTermsArgs;
  transactions?: boolean | SchoolYearCountOutputTypeCountTransactionsArgs;
  timetableCategories?:
    | boolean
    | SchoolYearCountOutputTypeCountTimetableCategoriesArgs;
  inventoryConsumables?:
    | boolean
    | SchoolYearCountOutputTypeCountInventoryConsumablesArgs;
  consumableUsages?:
    | boolean
    | SchoolYearCountOutputTypeCountConsumableUsagesArgs;
  stockMovements?: boolean | SchoolYearCountOutputTypeCountStockMovementsArgs;
  inventoryAssetUsages?:
    | boolean
    | SchoolYearCountOutputTypeCountInventoryAssetUsagesArgs;
  events?: boolean | SchoolYearCountOutputTypeCountEventsArgs;
  userNotifications?:
    | boolean
    | SchoolYearCountOutputTypeCountUserNotificationsArgs;
  accountingJournals?:
    | boolean
    | SchoolYearCountOutputTypeCountAccountingJournalsArgs;
  scheduleDivisions?:
    | boolean
    | SchoolYearCountOutputTypeCountScheduleDivisionsArgs;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYearCountOutputType
   */
  select?: Prisma.SchoolYearCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountClassroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountEnrollmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EnrollmentWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountProgramCategoryArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ProgramCategoryWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountTermsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TermWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountTransactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountTimetableCategoriesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TimetableCategoryWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountInventoryConsumablesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryConsumableWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountConsumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryConsumableUsageWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountStockMovementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryStockMovementWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountInventoryAssetUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryAssetUsageWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolYearEventWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountUserNotificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserNotificationWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountAccountingJournalsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AccountingJournalWhereInput;
};

/**
 * SchoolYearCountOutputType without action
 */
export type SchoolYearCountOutputTypeCountScheduleDivisionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ScheduleDivisionWhereInput;
};

export type SchoolYearSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    observation?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    abbreviation?: boolean;
    createdBy?: boolean;
    updatedBy?: boolean;
    isDefault?: boolean;
    deletedAt?: boolean;
    deletedBy?: boolean;
    isActive?: boolean;
    isDeleted?: boolean;
    name?: boolean;
    startDate?: boolean;
    endDate?: boolean;
    enrollmentStartDate?: boolean;
    enrollmentEndDate?: boolean;
    schoolId?: boolean;
    classrooms?: boolean | Prisma.SchoolYear$classroomsArgs<ExtArgs>;
    enrollments?: boolean | Prisma.SchoolYear$enrollmentsArgs<ExtArgs>;
    ProgramCategory?: boolean | Prisma.SchoolYear$ProgramCategoryArgs<ExtArgs>;
    terms?: boolean | Prisma.SchoolYear$termsArgs<ExtArgs>;
    transactions?: boolean | Prisma.SchoolYear$transactionsArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
    timetableCategories?:
      | boolean
      | Prisma.SchoolYear$timetableCategoriesArgs<ExtArgs>;
    inventoryConsumables?:
      | boolean
      | Prisma.SchoolYear$inventoryConsumablesArgs<ExtArgs>;
    consumableUsages?:
      | boolean
      | Prisma.SchoolYear$consumableUsagesArgs<ExtArgs>;
    stockMovements?: boolean | Prisma.SchoolYear$stockMovementsArgs<ExtArgs>;
    inventoryAssetUsages?:
      | boolean
      | Prisma.SchoolYear$inventoryAssetUsagesArgs<ExtArgs>;
    events?: boolean | Prisma.SchoolYear$eventsArgs<ExtArgs>;
    userNotifications?:
      | boolean
      | Prisma.SchoolYear$userNotificationsArgs<ExtArgs>;
    accountingJournals?:
      | boolean
      | Prisma.SchoolYear$accountingJournalsArgs<ExtArgs>;
    scheduleDivisions?:
      | boolean
      | Prisma.SchoolYear$scheduleDivisionsArgs<ExtArgs>;
    _count?: boolean | Prisma.SchoolYearCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["schoolYear"]
>;

export type SchoolYearSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    observation?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    abbreviation?: boolean;
    createdBy?: boolean;
    updatedBy?: boolean;
    isDefault?: boolean;
    deletedAt?: boolean;
    deletedBy?: boolean;
    isActive?: boolean;
    isDeleted?: boolean;
    name?: boolean;
    startDate?: boolean;
    endDate?: boolean;
    enrollmentStartDate?: boolean;
    enrollmentEndDate?: boolean;
    schoolId?: boolean;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["schoolYear"]
>;

export type SchoolYearSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    observation?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    abbreviation?: boolean;
    createdBy?: boolean;
    updatedBy?: boolean;
    isDefault?: boolean;
    deletedAt?: boolean;
    deletedBy?: boolean;
    isActive?: boolean;
    isDeleted?: boolean;
    name?: boolean;
    startDate?: boolean;
    endDate?: boolean;
    enrollmentStartDate?: boolean;
    enrollmentEndDate?: boolean;
    schoolId?: boolean;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["schoolYear"]
>;

export type SchoolYearSelectScalar = {
  id?: boolean;
  observation?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  abbreviation?: boolean;
  createdBy?: boolean;
  updatedBy?: boolean;
  isDefault?: boolean;
  deletedAt?: boolean;
  deletedBy?: boolean;
  isActive?: boolean;
  isDeleted?: boolean;
  name?: boolean;
  startDate?: boolean;
  endDate?: boolean;
  enrollmentStartDate?: boolean;
  enrollmentEndDate?: boolean;
  schoolId?: boolean;
};

export type SchoolYearOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "observation"
  | "createdAt"
  | "updatedAt"
  | "abbreviation"
  | "createdBy"
  | "updatedBy"
  | "isDefault"
  | "deletedAt"
  | "deletedBy"
  | "isActive"
  | "isDeleted"
  | "name"
  | "startDate"
  | "endDate"
  | "enrollmentStartDate"
  | "enrollmentEndDate"
  | "schoolId",
  ExtArgs["result"]["schoolYear"]
>;
export type SchoolYearInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  classrooms?: boolean | Prisma.SchoolYear$classroomsArgs<ExtArgs>;
  enrollments?: boolean | Prisma.SchoolYear$enrollmentsArgs<ExtArgs>;
  ProgramCategory?: boolean | Prisma.SchoolYear$ProgramCategoryArgs<ExtArgs>;
  terms?: boolean | Prisma.SchoolYear$termsArgs<ExtArgs>;
  transactions?: boolean | Prisma.SchoolYear$transactionsArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  timetableCategories?:
    | boolean
    | Prisma.SchoolYear$timetableCategoriesArgs<ExtArgs>;
  inventoryConsumables?:
    | boolean
    | Prisma.SchoolYear$inventoryConsumablesArgs<ExtArgs>;
  consumableUsages?: boolean | Prisma.SchoolYear$consumableUsagesArgs<ExtArgs>;
  stockMovements?: boolean | Prisma.SchoolYear$stockMovementsArgs<ExtArgs>;
  inventoryAssetUsages?:
    | boolean
    | Prisma.SchoolYear$inventoryAssetUsagesArgs<ExtArgs>;
  events?: boolean | Prisma.SchoolYear$eventsArgs<ExtArgs>;
  userNotifications?:
    | boolean
    | Prisma.SchoolYear$userNotificationsArgs<ExtArgs>;
  accountingJournals?:
    | boolean
    | Prisma.SchoolYear$accountingJournalsArgs<ExtArgs>;
  scheduleDivisions?:
    | boolean
    | Prisma.SchoolYear$scheduleDivisionsArgs<ExtArgs>;
  _count?: boolean | Prisma.SchoolYearCountOutputTypeDefaultArgs<ExtArgs>;
};
export type SchoolYearIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};
export type SchoolYearIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};

export type $SchoolYearPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "SchoolYear";
  objects: {
    classrooms: Prisma.$ClassroomPayload<ExtArgs>[];
    enrollments: Prisma.$EnrollmentPayload<ExtArgs>[];
    ProgramCategory: Prisma.$ProgramCategoryPayload<ExtArgs>[];
    terms: Prisma.$TermPayload<ExtArgs>[];
    transactions: Prisma.$TransactionPayload<ExtArgs>[];
    school: Prisma.$SchoolPayload<ExtArgs>;
    timetableCategories: Prisma.$TimetableCategoryPayload<ExtArgs>[];
    inventoryConsumables: Prisma.$InventoryConsumablePayload<ExtArgs>[];
    consumableUsages: Prisma.$InventoryConsumableUsagePayload<ExtArgs>[];
    stockMovements: Prisma.$InventoryStockMovementPayload<ExtArgs>[];
    inventoryAssetUsages: Prisma.$InventoryAssetUsagePayload<ExtArgs>[];
    events: Prisma.$SchoolYearEventPayload<ExtArgs>[];
    userNotifications: Prisma.$UserNotificationPayload<ExtArgs>[];
    accountingJournals: Prisma.$AccountingJournalPayload<ExtArgs>[];
    scheduleDivisions: Prisma.$ScheduleDivisionPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      observation: string | null;
      createdAt: Date | null;
      updatedAt: Date;
      abbreviation: string | null;
      createdBy: string | null;
      updatedBy: string | null;
      isDefault: boolean | null;
      deletedAt: Date | null;
      deletedBy: string | null;
      isActive: boolean;
      isDeleted: boolean | null;
      name: string;
      startDate: Date;
      endDate: Date;
      enrollmentStartDate: Date | null;
      enrollmentEndDate: Date | null;
      schoolId: string;
    },
    ExtArgs["result"]["schoolYear"]
  >;
  composites: {};
};

export type SchoolYearGetPayload<
  S extends boolean | null | undefined | SchoolYearDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$SchoolYearPayload, S>;

export type SchoolYearCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<SchoolYearFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: SchoolYearCountAggregateInputType | true;
};

export interface SchoolYearDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["SchoolYear"];
    meta: { name: "SchoolYear" };
  };
  /**
   * Find zero or one SchoolYear that matches the filter.
   * @param {SchoolYearFindUniqueArgs} args - Arguments to find a SchoolYear
   * @example
   * // Get one SchoolYear
   * const schoolYear = await prisma.schoolYear.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SchoolYearFindUniqueArgs>(
    args: Prisma.SelectSubset<T, SchoolYearFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one SchoolYear that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SchoolYearFindUniqueOrThrowArgs} args - Arguments to find a SchoolYear
   * @example
   * // Get one SchoolYear
   * const schoolYear = await prisma.schoolYear.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SchoolYearFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, SchoolYearFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SchoolYear that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearFindFirstArgs} args - Arguments to find a SchoolYear
   * @example
   * // Get one SchoolYear
   * const schoolYear = await prisma.schoolYear.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SchoolYearFindFirstArgs>(
    args?: Prisma.SelectSubset<T, SchoolYearFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SchoolYear that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearFindFirstOrThrowArgs} args - Arguments to find a SchoolYear
   * @example
   * // Get one SchoolYear
   * const schoolYear = await prisma.schoolYear.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SchoolYearFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, SchoolYearFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more SchoolYears that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all SchoolYears
   * const schoolYears = await prisma.schoolYear.findMany()
   *
   * // Get first 10 SchoolYears
   * const schoolYears = await prisma.schoolYear.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const schoolYearWithIdOnly = await prisma.schoolYear.findMany({ select: { id: true } })
   *
   */
  findMany<T extends SchoolYearFindManyArgs>(
    args?: Prisma.SelectSubset<T, SchoolYearFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a SchoolYear.
   * @param {SchoolYearCreateArgs} args - Arguments to create a SchoolYear.
   * @example
   * // Create one SchoolYear
   * const SchoolYear = await prisma.schoolYear.create({
   *   data: {
   *     // ... data to create a SchoolYear
   *   }
   * })
   *
   */
  create<T extends SchoolYearCreateArgs>(
    args: Prisma.SelectSubset<T, SchoolYearCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many SchoolYears.
   * @param {SchoolYearCreateManyArgs} args - Arguments to create many SchoolYears.
   * @example
   * // Create many SchoolYears
   * const schoolYear = await prisma.schoolYear.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends SchoolYearCreateManyArgs>(
    args?: Prisma.SelectSubset<T, SchoolYearCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many SchoolYears and returns the data saved in the database.
   * @param {SchoolYearCreateManyAndReturnArgs} args - Arguments to create many SchoolYears.
   * @example
   * // Create many SchoolYears
   * const schoolYear = await prisma.schoolYear.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many SchoolYears and only return the `id`
   * const schoolYearWithIdOnly = await prisma.schoolYear.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends SchoolYearCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, SchoolYearCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a SchoolYear.
   * @param {SchoolYearDeleteArgs} args - Arguments to delete one SchoolYear.
   * @example
   * // Delete one SchoolYear
   * const SchoolYear = await prisma.schoolYear.delete({
   *   where: {
   *     // ... filter to delete one SchoolYear
   *   }
   * })
   *
   */
  delete<T extends SchoolYearDeleteArgs>(
    args: Prisma.SelectSubset<T, SchoolYearDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one SchoolYear.
   * @param {SchoolYearUpdateArgs} args - Arguments to update one SchoolYear.
   * @example
   * // Update one SchoolYear
   * const schoolYear = await prisma.schoolYear.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends SchoolYearUpdateArgs>(
    args: Prisma.SelectSubset<T, SchoolYearUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more SchoolYears.
   * @param {SchoolYearDeleteManyArgs} args - Arguments to filter SchoolYears to delete.
   * @example
   * // Delete a few SchoolYears
   * const { count } = await prisma.schoolYear.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends SchoolYearDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, SchoolYearDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SchoolYears.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many SchoolYears
   * const schoolYear = await prisma.schoolYear.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends SchoolYearUpdateManyArgs>(
    args: Prisma.SelectSubset<T, SchoolYearUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SchoolYears and returns the data updated in the database.
   * @param {SchoolYearUpdateManyAndReturnArgs} args - Arguments to update many SchoolYears.
   * @example
   * // Update many SchoolYears
   * const schoolYear = await prisma.schoolYear.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more SchoolYears and only return the `id`
   * const schoolYearWithIdOnly = await prisma.schoolYear.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends SchoolYearUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, SchoolYearUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one SchoolYear.
   * @param {SchoolYearUpsertArgs} args - Arguments to update or create a SchoolYear.
   * @example
   * // Update or create a SchoolYear
   * const schoolYear = await prisma.schoolYear.upsert({
   *   create: {
   *     // ... data to create a SchoolYear
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the SchoolYear we want to update
   *   }
   * })
   */
  upsert<T extends SchoolYearUpsertArgs>(
    args: Prisma.SelectSubset<T, SchoolYearUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolYearPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of SchoolYears.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearCountArgs} args - Arguments to filter SchoolYears to count.
   * @example
   * // Count the number of SchoolYears
   * const count = await prisma.schoolYear.count({
   *   where: {
   *     // ... the filter for the SchoolYears we want to count
   *   }
   * })
   **/
  count<T extends SchoolYearCountArgs>(
    args?: Prisma.Subset<T, SchoolYearCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], SchoolYearCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a SchoolYear.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends SchoolYearAggregateArgs>(
    args: Prisma.Subset<T, SchoolYearAggregateArgs>,
  ): Prisma.PrismaPromise<GetSchoolYearAggregateType<T>>;

  /**
   * Group by SchoolYear.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolYearGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends SchoolYearGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SchoolYearGroupByArgs["orderBy"] }
      : { orderBy?: SchoolYearGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, SchoolYearGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetSchoolYearGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the SchoolYear model
   */
  readonly fields: SchoolYearFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SchoolYear.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SchoolYearClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  classrooms<T extends Prisma.SchoolYear$classroomsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYear$classroomsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  enrollments<T extends Prisma.SchoolYear$enrollmentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYear$enrollmentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EnrollmentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  ProgramCategory<
    T extends Prisma.SchoolYear$ProgramCategoryArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.SchoolYear$ProgramCategoryArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ProgramCategoryPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  terms<T extends Prisma.SchoolYear$termsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYear$termsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TermPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  transactions<T extends Prisma.SchoolYear$transactionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYear$transactionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  timetableCategories<
    T extends Prisma.SchoolYear$timetableCategoriesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.SchoolYear$timetableCategoriesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TimetableCategoryPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  inventoryConsumables<
    T extends Prisma.SchoolYear$inventoryConsumablesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.SchoolYear$inventoryConsumablesArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumablePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  consumableUsages<
    T extends Prisma.SchoolYear$consumableUsagesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.SchoolYear$consumableUsagesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumableUsagePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  stockMovements<T extends Prisma.SchoolYear$stockMovementsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYear$stockMovementsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryStockMovementPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  inventoryAssetUsages<
    T extends Prisma.SchoolYear$inventoryAssetUsagesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.SchoolYear$inventoryAssetUsagesArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryAssetUsagePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  events<T extends Prisma.SchoolYear$eventsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYear$eventsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolYearEventPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  userNotifications<
    T extends Prisma.SchoolYear$userNotificationsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.SchoolYear$userNotificationsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$UserNotificationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  accountingJournals<
    T extends Prisma.SchoolYear$accountingJournalsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.SchoolYear$accountingJournalsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AccountingJournalPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  scheduleDivisions<
    T extends Prisma.SchoolYear$scheduleDivisionsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.SchoolYear$scheduleDivisionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ScheduleDivisionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the SchoolYear model
 */
export interface SchoolYearFieldRefs {
  readonly id: Prisma.FieldRef<"SchoolYear", "String">;
  readonly observation: Prisma.FieldRef<"SchoolYear", "String">;
  readonly createdAt: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly abbreviation: Prisma.FieldRef<"SchoolYear", "String">;
  readonly createdBy: Prisma.FieldRef<"SchoolYear", "String">;
  readonly updatedBy: Prisma.FieldRef<"SchoolYear", "String">;
  readonly isDefault: Prisma.FieldRef<"SchoolYear", "Boolean">;
  readonly deletedAt: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly deletedBy: Prisma.FieldRef<"SchoolYear", "String">;
  readonly isActive: Prisma.FieldRef<"SchoolYear", "Boolean">;
  readonly isDeleted: Prisma.FieldRef<"SchoolYear", "Boolean">;
  readonly name: Prisma.FieldRef<"SchoolYear", "String">;
  readonly startDate: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly endDate: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly enrollmentStartDate: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly enrollmentEndDate: Prisma.FieldRef<"SchoolYear", "DateTime">;
  readonly schoolId: Prisma.FieldRef<"SchoolYear", "String">;
}

// Custom InputTypes
/**
 * SchoolYear findUnique
 */
export type SchoolYearFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * Filter, which SchoolYear to fetch.
   */
  where: Prisma.SchoolYearWhereUniqueInput;
};

/**
 * SchoolYear findUniqueOrThrow
 */
export type SchoolYearFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * Filter, which SchoolYear to fetch.
   */
  where: Prisma.SchoolYearWhereUniqueInput;
};

/**
 * SchoolYear findFirst
 */
export type SchoolYearFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * Filter, which SchoolYear to fetch.
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SchoolYears to fetch.
   */
  orderBy?:
    | Prisma.SchoolYearOrderByWithRelationInput
    | Prisma.SchoolYearOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SchoolYears.
   */
  cursor?: Prisma.SchoolYearWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SchoolYears from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SchoolYears.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SchoolYears.
   */
  distinct?:
    | Prisma.SchoolYearScalarFieldEnum
    | Prisma.SchoolYearScalarFieldEnum[];
};

/**
 * SchoolYear findFirstOrThrow
 */
export type SchoolYearFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * Filter, which SchoolYear to fetch.
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SchoolYears to fetch.
   */
  orderBy?:
    | Prisma.SchoolYearOrderByWithRelationInput
    | Prisma.SchoolYearOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SchoolYears.
   */
  cursor?: Prisma.SchoolYearWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SchoolYears from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SchoolYears.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SchoolYears.
   */
  distinct?:
    | Prisma.SchoolYearScalarFieldEnum
    | Prisma.SchoolYearScalarFieldEnum[];
};

/**
 * SchoolYear findMany
 */
export type SchoolYearFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * Filter, which SchoolYears to fetch.
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SchoolYears to fetch.
   */
  orderBy?:
    | Prisma.SchoolYearOrderByWithRelationInput
    | Prisma.SchoolYearOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing SchoolYears.
   */
  cursor?: Prisma.SchoolYearWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SchoolYears from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SchoolYears.
   */
  skip?: number;
  distinct?:
    | Prisma.SchoolYearScalarFieldEnum
    | Prisma.SchoolYearScalarFieldEnum[];
};

/**
 * SchoolYear create
 */
export type SchoolYearCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * The data needed to create a SchoolYear.
   */
  data: Prisma.XOR<
    Prisma.SchoolYearCreateInput,
    Prisma.SchoolYearUncheckedCreateInput
  >;
};

/**
 * SchoolYear createMany
 */
export type SchoolYearCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many SchoolYears.
   */
  data: Prisma.SchoolYearCreateManyInput | Prisma.SchoolYearCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * SchoolYear createManyAndReturn
 */
export type SchoolYearCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * The data used to create many SchoolYears.
   */
  data: Prisma.SchoolYearCreateManyInput | Prisma.SchoolYearCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * SchoolYear update
 */
export type SchoolYearUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * The data needed to update a SchoolYear.
   */
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateInput,
    Prisma.SchoolYearUncheckedUpdateInput
  >;
  /**
   * Choose, which SchoolYear to update.
   */
  where: Prisma.SchoolYearWhereUniqueInput;
};

/**
 * SchoolYear updateMany
 */
export type SchoolYearUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update SchoolYears.
   */
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateManyMutationInput,
    Prisma.SchoolYearUncheckedUpdateManyInput
  >;
  /**
   * Filter which SchoolYears to update
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * Limit how many SchoolYears to update.
   */
  limit?: number;
};

/**
 * SchoolYear updateManyAndReturn
 */
export type SchoolYearUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * The data used to update SchoolYears.
   */
  data: Prisma.XOR<
    Prisma.SchoolYearUpdateManyMutationInput,
    Prisma.SchoolYearUncheckedUpdateManyInput
  >;
  /**
   * Filter which SchoolYears to update
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * Limit how many SchoolYears to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * SchoolYear upsert
 */
export type SchoolYearUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * The filter to search for the SchoolYear to update in case it exists.
   */
  where: Prisma.SchoolYearWhereUniqueInput;
  /**
   * In case the SchoolYear found by the `where` argument doesn't exist, create a new SchoolYear with this data.
   */
  create: Prisma.XOR<
    Prisma.SchoolYearCreateInput,
    Prisma.SchoolYearUncheckedCreateInput
  >;
  /**
   * In case the SchoolYear was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.SchoolYearUpdateInput,
    Prisma.SchoolYearUncheckedUpdateInput
  >;
};

/**
 * SchoolYear delete
 */
export type SchoolYearDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  /**
   * Filter which SchoolYear to delete.
   */
  where: Prisma.SchoolYearWhereUniqueInput;
};

/**
 * SchoolYear deleteMany
 */
export type SchoolYearDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which SchoolYears to delete
   */
  where?: Prisma.SchoolYearWhereInput;
  /**
   * Limit how many SchoolYears to delete.
   */
  limit?: number;
};

/**
 * SchoolYear.classrooms
 */
export type SchoolYear$classroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * SchoolYear.enrollments
 */
export type SchoolYear$enrollmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Enrollment
   */
  select?: Prisma.EnrollmentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Enrollment
   */
  omit?: Prisma.EnrollmentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EnrollmentInclude<ExtArgs> | null;
  where?: Prisma.EnrollmentWhereInput;
  orderBy?:
    | Prisma.EnrollmentOrderByWithRelationInput
    | Prisma.EnrollmentOrderByWithRelationInput[];
  cursor?: Prisma.EnrollmentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.EnrollmentScalarFieldEnum
    | Prisma.EnrollmentScalarFieldEnum[];
};

/**
 * SchoolYear.ProgramCategory
 */
export type SchoolYear$ProgramCategoryArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ProgramCategory
   */
  select?: Prisma.ProgramCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ProgramCategory
   */
  omit?: Prisma.ProgramCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramCategoryInclude<ExtArgs> | null;
  where?: Prisma.ProgramCategoryWhereInput;
  orderBy?:
    | Prisma.ProgramCategoryOrderByWithRelationInput
    | Prisma.ProgramCategoryOrderByWithRelationInput[];
  cursor?: Prisma.ProgramCategoryWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ProgramCategoryScalarFieldEnum
    | Prisma.ProgramCategoryScalarFieldEnum[];
};

/**
 * SchoolYear.terms
 */
export type SchoolYear$termsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Term
   */
  select?: Prisma.TermSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Term
   */
  omit?: Prisma.TermOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermInclude<ExtArgs> | null;
  where?: Prisma.TermWhereInput;
  orderBy?:
    | Prisma.TermOrderByWithRelationInput
    | Prisma.TermOrderByWithRelationInput[];
  cursor?: Prisma.TermWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.TermScalarFieldEnum | Prisma.TermScalarFieldEnum[];
};

/**
 * SchoolYear.transactions
 */
export type SchoolYear$transactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * SchoolYear.timetableCategories
 */
export type SchoolYear$timetableCategoriesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the TimetableCategory
   */
  select?: Prisma.TimetableCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the TimetableCategory
   */
  omit?: Prisma.TimetableCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetableCategoryInclude<ExtArgs> | null;
  where?: Prisma.TimetableCategoryWhereInput;
  orderBy?:
    | Prisma.TimetableCategoryOrderByWithRelationInput
    | Prisma.TimetableCategoryOrderByWithRelationInput[];
  cursor?: Prisma.TimetableCategoryWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TimetableCategoryScalarFieldEnum
    | Prisma.TimetableCategoryScalarFieldEnum[];
};

/**
 * SchoolYear.inventoryConsumables
 */
export type SchoolYear$inventoryConsumablesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryConsumable
   */
  select?: Prisma.InventoryConsumableSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryConsumable
   */
  omit?: Prisma.InventoryConsumableOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryConsumableInclude<ExtArgs> | null;
  where?: Prisma.InventoryConsumableWhereInput;
  orderBy?:
    | Prisma.InventoryConsumableOrderByWithRelationInput
    | Prisma.InventoryConsumableOrderByWithRelationInput[];
  cursor?: Prisma.InventoryConsumableWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryConsumableScalarFieldEnum
    | Prisma.InventoryConsumableScalarFieldEnum[];
};

/**
 * SchoolYear.consumableUsages
 */
export type SchoolYear$consumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryConsumableUsage
   */
  select?: Prisma.InventoryConsumableUsageSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryConsumableUsage
   */
  omit?: Prisma.InventoryConsumableUsageOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryConsumableUsageInclude<ExtArgs> | null;
  where?: Prisma.InventoryConsumableUsageWhereInput;
  orderBy?:
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput[];
  cursor?: Prisma.InventoryConsumableUsageWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryConsumableUsageScalarFieldEnum
    | Prisma.InventoryConsumableUsageScalarFieldEnum[];
};

/**
 * SchoolYear.stockMovements
 */
export type SchoolYear$stockMovementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  where?: Prisma.InventoryStockMovementWhereInput;
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryStockMovementScalarFieldEnum
    | Prisma.InventoryStockMovementScalarFieldEnum[];
};

/**
 * SchoolYear.inventoryAssetUsages
 */
export type SchoolYear$inventoryAssetUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryAssetUsage
   */
  select?: Prisma.InventoryAssetUsageSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryAssetUsage
   */
  omit?: Prisma.InventoryAssetUsageOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryAssetUsageInclude<ExtArgs> | null;
  where?: Prisma.InventoryAssetUsageWhereInput;
  orderBy?:
    | Prisma.InventoryAssetUsageOrderByWithRelationInput
    | Prisma.InventoryAssetUsageOrderByWithRelationInput[];
  cursor?: Prisma.InventoryAssetUsageWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryAssetUsageScalarFieldEnum
    | Prisma.InventoryAssetUsageScalarFieldEnum[];
};

/**
 * SchoolYear.events
 */
export type SchoolYear$eventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYearEvent
   */
  select?: Prisma.SchoolYearEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYearEvent
   */
  omit?: Prisma.SchoolYearEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearEventInclude<ExtArgs> | null;
  where?: Prisma.SchoolYearEventWhereInput;
  orderBy?:
    | Prisma.SchoolYearEventOrderByWithRelationInput
    | Prisma.SchoolYearEventOrderByWithRelationInput[];
  cursor?: Prisma.SchoolYearEventWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SchoolYearEventScalarFieldEnum
    | Prisma.SchoolYearEventScalarFieldEnum[];
};

/**
 * SchoolYear.userNotifications
 */
export type SchoolYear$userNotificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserNotification
   */
  select?: Prisma.UserNotificationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the UserNotification
   */
  omit?: Prisma.UserNotificationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserNotificationInclude<ExtArgs> | null;
  where?: Prisma.UserNotificationWhereInput;
  orderBy?:
    | Prisma.UserNotificationOrderByWithRelationInput
    | Prisma.UserNotificationOrderByWithRelationInput[];
  cursor?: Prisma.UserNotificationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.UserNotificationScalarFieldEnum
    | Prisma.UserNotificationScalarFieldEnum[];
};

/**
 * SchoolYear.accountingJournals
 */
export type SchoolYear$accountingJournalsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AccountingJournal
   */
  select?: Prisma.AccountingJournalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AccountingJournal
   */
  omit?: Prisma.AccountingJournalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountingJournalInclude<ExtArgs> | null;
  where?: Prisma.AccountingJournalWhereInput;
  orderBy?:
    | Prisma.AccountingJournalOrderByWithRelationInput
    | Prisma.AccountingJournalOrderByWithRelationInput[];
  cursor?: Prisma.AccountingJournalWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AccountingJournalScalarFieldEnum
    | Prisma.AccountingJournalScalarFieldEnum[];
};

/**
 * SchoolYear.scheduleDivisions
 */
export type SchoolYear$scheduleDivisionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ScheduleDivision
   */
  select?: Prisma.ScheduleDivisionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ScheduleDivision
   */
  omit?: Prisma.ScheduleDivisionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduleDivisionInclude<ExtArgs> | null;
  where?: Prisma.ScheduleDivisionWhereInput;
  orderBy?:
    | Prisma.ScheduleDivisionOrderByWithRelationInput
    | Prisma.ScheduleDivisionOrderByWithRelationInput[];
  cursor?: Prisma.ScheduleDivisionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ScheduleDivisionScalarFieldEnum
    | Prisma.ScheduleDivisionScalarFieldEnum[];
};

/**
 * SchoolYear without action
 */
export type SchoolYearDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
};
