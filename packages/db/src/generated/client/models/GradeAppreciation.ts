/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `GradeAppreciation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model GradeAppreciation
 *
 */
export type GradeAppreciationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$GradeAppreciationPayload>;

export type AggregateGradeAppreciation = {
  _count: GradeAppreciationCountAggregateOutputType | null;
  _avg: GradeAppreciationAvgAggregateOutputType | null;
  _sum: GradeAppreciationSumAggregateOutputType | null;
  _min: GradeAppreciationMinAggregateOutputType | null;
  _max: GradeAppreciationMaxAggregateOutputType | null;
};

export type GradeAppreciationAvgAggregateOutputType = {
  id: number | null;
  minGrade: number | null;
  maxGrade: number | null;
};

export type GradeAppreciationSumAggregateOutputType = {
  id: number | null;
  minGrade: number | null;
  maxGrade: number | null;
};

export type GradeAppreciationMinAggregateOutputType = {
  id: number | null;
  minGrade: number | null;
  maxGrade: number | null;
  appreciation: string | null;
  schoolId: string | null;
  schoolYearId: string | null;
};

export type GradeAppreciationMaxAggregateOutputType = {
  id: number | null;
  minGrade: number | null;
  maxGrade: number | null;
  appreciation: string | null;
  schoolId: string | null;
  schoolYearId: string | null;
};

export type GradeAppreciationCountAggregateOutputType = {
  id: number;
  minGrade: number;
  maxGrade: number;
  appreciation: number;
  schoolId: number;
  schoolYearId: number;
  _all: number;
};

export type GradeAppreciationAvgAggregateInputType = {
  id?: true;
  minGrade?: true;
  maxGrade?: true;
};

export type GradeAppreciationSumAggregateInputType = {
  id?: true;
  minGrade?: true;
  maxGrade?: true;
};

export type GradeAppreciationMinAggregateInputType = {
  id?: true;
  minGrade?: true;
  maxGrade?: true;
  appreciation?: true;
  schoolId?: true;
  schoolYearId?: true;
};

export type GradeAppreciationMaxAggregateInputType = {
  id?: true;
  minGrade?: true;
  maxGrade?: true;
  appreciation?: true;
  schoolId?: true;
  schoolYearId?: true;
};

export type GradeAppreciationCountAggregateInputType = {
  id?: true;
  minGrade?: true;
  maxGrade?: true;
  appreciation?: true;
  schoolId?: true;
  schoolYearId?: true;
  _all?: true;
};

export type GradeAppreciationAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which GradeAppreciation to aggregate.
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of GradeAppreciations to fetch.
   */
  orderBy?:
    | Prisma.GradeAppreciationOrderByWithRelationInput
    | Prisma.GradeAppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.GradeAppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` GradeAppreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` GradeAppreciations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned GradeAppreciations
   **/
  _count?: true | GradeAppreciationCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: GradeAppreciationAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: GradeAppreciationSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: GradeAppreciationMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: GradeAppreciationMaxAggregateInputType;
};

export type GetGradeAppreciationAggregateType<
  T extends GradeAppreciationAggregateArgs,
> = {
  [P in keyof T & keyof AggregateGradeAppreciation]: P extends
    | "_count"
    | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGradeAppreciation[P]>
    : Prisma.GetScalarType<T[P], AggregateGradeAppreciation[P]>;
};

export type GradeAppreciationGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.GradeAppreciationWhereInput;
  orderBy?:
    | Prisma.GradeAppreciationOrderByWithAggregationInput
    | Prisma.GradeAppreciationOrderByWithAggregationInput[];
  by:
    | Prisma.GradeAppreciationScalarFieldEnum[]
    | Prisma.GradeAppreciationScalarFieldEnum;
  having?: Prisma.GradeAppreciationScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: GradeAppreciationCountAggregateInputType | true;
  _avg?: GradeAppreciationAvgAggregateInputType;
  _sum?: GradeAppreciationSumAggregateInputType;
  _min?: GradeAppreciationMinAggregateInputType;
  _max?: GradeAppreciationMaxAggregateInputType;
};

export type GradeAppreciationGroupByOutputType = {
  id: number;
  minGrade: number;
  maxGrade: number;
  appreciation: string;
  schoolId: string;
  schoolYearId: string;
  _count: GradeAppreciationCountAggregateOutputType | null;
  _avg: GradeAppreciationAvgAggregateOutputType | null;
  _sum: GradeAppreciationSumAggregateOutputType | null;
  _min: GradeAppreciationMinAggregateOutputType | null;
  _max: GradeAppreciationMaxAggregateOutputType | null;
};

type GetGradeAppreciationGroupByPayload<
  T extends GradeAppreciationGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<GradeAppreciationGroupByOutputType, T["by"]> & {
      [P in keyof T &
        keyof GradeAppreciationGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], GradeAppreciationGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], GradeAppreciationGroupByOutputType[P]>;
    }
  >
>;

export type GradeAppreciationWhereInput = {
  AND?:
    | Prisma.GradeAppreciationWhereInput
    | Prisma.GradeAppreciationWhereInput[];
  OR?: Prisma.GradeAppreciationWhereInput[];
  NOT?:
    | Prisma.GradeAppreciationWhereInput
    | Prisma.GradeAppreciationWhereInput[];
  id?: Prisma.IntFilter<"GradeAppreciation"> | number;
  minGrade?: Prisma.FloatFilter<"GradeAppreciation"> | number;
  maxGrade?: Prisma.FloatFilter<"GradeAppreciation"> | number;
  appreciation?: Prisma.StringFilter<"GradeAppreciation"> | string;
  schoolId?: Prisma.StringFilter<"GradeAppreciation"> | string;
  schoolYearId?: Prisma.StringFilter<"GradeAppreciation"> | string;
  classroomAppreciations?: Prisma.ClassroomGradeAppreciationListRelationFilter;
};

export type GradeAppreciationOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
  appreciation?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  classroomAppreciations?: Prisma.ClassroomGradeAppreciationOrderByRelationAggregateInput;
};

export type GradeAppreciationWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?:
      | Prisma.GradeAppreciationWhereInput
      | Prisma.GradeAppreciationWhereInput[];
    OR?: Prisma.GradeAppreciationWhereInput[];
    NOT?:
      | Prisma.GradeAppreciationWhereInput
      | Prisma.GradeAppreciationWhereInput[];
    minGrade?: Prisma.FloatFilter<"GradeAppreciation"> | number;
    maxGrade?: Prisma.FloatFilter<"GradeAppreciation"> | number;
    appreciation?: Prisma.StringFilter<"GradeAppreciation"> | string;
    schoolId?: Prisma.StringFilter<"GradeAppreciation"> | string;
    schoolYearId?: Prisma.StringFilter<"GradeAppreciation"> | string;
    classroomAppreciations?: Prisma.ClassroomGradeAppreciationListRelationFilter;
  },
  "id"
>;

export type GradeAppreciationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
  appreciation?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  _count?: Prisma.GradeAppreciationCountOrderByAggregateInput;
  _avg?: Prisma.GradeAppreciationAvgOrderByAggregateInput;
  _max?: Prisma.GradeAppreciationMaxOrderByAggregateInput;
  _min?: Prisma.GradeAppreciationMinOrderByAggregateInput;
  _sum?: Prisma.GradeAppreciationSumOrderByAggregateInput;
};

export type GradeAppreciationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.GradeAppreciationScalarWhereWithAggregatesInput
    | Prisma.GradeAppreciationScalarWhereWithAggregatesInput[];
  OR?: Prisma.GradeAppreciationScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.GradeAppreciationScalarWhereWithAggregatesInput
    | Prisma.GradeAppreciationScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"GradeAppreciation"> | number;
  minGrade?: Prisma.FloatWithAggregatesFilter<"GradeAppreciation"> | number;
  maxGrade?: Prisma.FloatWithAggregatesFilter<"GradeAppreciation"> | number;
  appreciation?:
    | Prisma.StringWithAggregatesFilter<"GradeAppreciation">
    | string;
  schoolId?: Prisma.StringWithAggregatesFilter<"GradeAppreciation"> | string;
  schoolYearId?:
    | Prisma.StringWithAggregatesFilter<"GradeAppreciation">
    | string;
};

export type GradeAppreciationCreateInput = {
  minGrade: number;
  maxGrade: number;
  appreciation: string;
  schoolId: string;
  schoolYearId: string;
  classroomAppreciations?: Prisma.ClassroomGradeAppreciationCreateNestedManyWithoutAppreciationInput;
};

export type GradeAppreciationUncheckedCreateInput = {
  id?: number;
  minGrade: number;
  maxGrade: number;
  appreciation: string;
  schoolId: string;
  schoolYearId: string;
  classroomAppreciations?: Prisma.ClassroomGradeAppreciationUncheckedCreateNestedManyWithoutAppreciationInput;
};

export type GradeAppreciationUpdateInput = {
  minGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  maxGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  appreciation?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  classroomAppreciations?: Prisma.ClassroomGradeAppreciationUpdateManyWithoutAppreciationNestedInput;
};

export type GradeAppreciationUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  minGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  maxGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  appreciation?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  classroomAppreciations?: Prisma.ClassroomGradeAppreciationUncheckedUpdateManyWithoutAppreciationNestedInput;
};

export type GradeAppreciationCreateManyInput = {
  id?: number;
  minGrade: number;
  maxGrade: number;
  appreciation: string;
  schoolId: string;
  schoolYearId: string;
};

export type GradeAppreciationUpdateManyMutationInput = {
  minGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  maxGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  appreciation?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type GradeAppreciationUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  minGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  maxGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  appreciation?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type GradeAppreciationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
  appreciation?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
};

export type GradeAppreciationAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
};

export type GradeAppreciationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
  appreciation?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
};

export type GradeAppreciationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
  appreciation?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
};

export type GradeAppreciationSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  minGrade?: Prisma.SortOrder;
  maxGrade?: Prisma.SortOrder;
};

export type GradeAppreciationScalarRelationFilter = {
  is?: Prisma.GradeAppreciationWhereInput;
  isNot?: Prisma.GradeAppreciationWhereInput;
};

export type GradeAppreciationCreateNestedOneWithoutClassroomAppreciationsInput =
  {
    create?: Prisma.XOR<
      Prisma.GradeAppreciationCreateWithoutClassroomAppreciationsInput,
      Prisma.GradeAppreciationUncheckedCreateWithoutClassroomAppreciationsInput
    >;
    connectOrCreate?: Prisma.GradeAppreciationCreateOrConnectWithoutClassroomAppreciationsInput;
    connect?: Prisma.GradeAppreciationWhereUniqueInput;
  };

export type GradeAppreciationUpdateOneRequiredWithoutClassroomAppreciationsNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.GradeAppreciationCreateWithoutClassroomAppreciationsInput,
      Prisma.GradeAppreciationUncheckedCreateWithoutClassroomAppreciationsInput
    >;
    connectOrCreate?: Prisma.GradeAppreciationCreateOrConnectWithoutClassroomAppreciationsInput;
    upsert?: Prisma.GradeAppreciationUpsertWithoutClassroomAppreciationsInput;
    connect?: Prisma.GradeAppreciationWhereUniqueInput;
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.GradeAppreciationUpdateToOneWithWhereWithoutClassroomAppreciationsInput,
        Prisma.GradeAppreciationUpdateWithoutClassroomAppreciationsInput
      >,
      Prisma.GradeAppreciationUncheckedUpdateWithoutClassroomAppreciationsInput
    >;
  };

export type GradeAppreciationCreateWithoutClassroomAppreciationsInput = {
  minGrade: number;
  maxGrade: number;
  appreciation: string;
  schoolId: string;
  schoolYearId: string;
};

export type GradeAppreciationUncheckedCreateWithoutClassroomAppreciationsInput =
  {
    id?: number;
    minGrade: number;
    maxGrade: number;
    appreciation: string;
    schoolId: string;
    schoolYearId: string;
  };

export type GradeAppreciationCreateOrConnectWithoutClassroomAppreciationsInput =
  {
    where: Prisma.GradeAppreciationWhereUniqueInput;
    create: Prisma.XOR<
      Prisma.GradeAppreciationCreateWithoutClassroomAppreciationsInput,
      Prisma.GradeAppreciationUncheckedCreateWithoutClassroomAppreciationsInput
    >;
  };

export type GradeAppreciationUpsertWithoutClassroomAppreciationsInput = {
  update: Prisma.XOR<
    Prisma.GradeAppreciationUpdateWithoutClassroomAppreciationsInput,
    Prisma.GradeAppreciationUncheckedUpdateWithoutClassroomAppreciationsInput
  >;
  create: Prisma.XOR<
    Prisma.GradeAppreciationCreateWithoutClassroomAppreciationsInput,
    Prisma.GradeAppreciationUncheckedCreateWithoutClassroomAppreciationsInput
  >;
  where?: Prisma.GradeAppreciationWhereInput;
};

export type GradeAppreciationUpdateToOneWithWhereWithoutClassroomAppreciationsInput =
  {
    where?: Prisma.GradeAppreciationWhereInput;
    data: Prisma.XOR<
      Prisma.GradeAppreciationUpdateWithoutClassroomAppreciationsInput,
      Prisma.GradeAppreciationUncheckedUpdateWithoutClassroomAppreciationsInput
    >;
  };

export type GradeAppreciationUpdateWithoutClassroomAppreciationsInput = {
  minGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  maxGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
  appreciation?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type GradeAppreciationUncheckedUpdateWithoutClassroomAppreciationsInput =
  {
    id?: Prisma.IntFieldUpdateOperationsInput | number;
    minGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
    maxGrade?: Prisma.FloatFieldUpdateOperationsInput | number;
    appreciation?: Prisma.StringFieldUpdateOperationsInput | string;
    schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
    schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  };

/**
 * Count Type GradeAppreciationCountOutputType
 */

export type GradeAppreciationCountOutputType = {
  classroomAppreciations: number;
};

export type GradeAppreciationCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  classroomAppreciations?:
    | boolean
    | GradeAppreciationCountOutputTypeCountClassroomAppreciationsArgs;
};

/**
 * GradeAppreciationCountOutputType without action
 */
export type GradeAppreciationCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciationCountOutputType
   */
  select?: Prisma.GradeAppreciationCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * GradeAppreciationCountOutputType without action
 */
export type GradeAppreciationCountOutputTypeCountClassroomAppreciationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomGradeAppreciationWhereInput;
};

export type GradeAppreciationSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    minGrade?: boolean;
    maxGrade?: boolean;
    appreciation?: boolean;
    schoolId?: boolean;
    schoolYearId?: boolean;
    classroomAppreciations?:
      | boolean
      | Prisma.GradeAppreciation$classroomAppreciationsArgs<ExtArgs>;
    _count?:
      | boolean
      | Prisma.GradeAppreciationCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["gradeAppreciation"]
>;

export type GradeAppreciationSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    minGrade?: boolean;
    maxGrade?: boolean;
    appreciation?: boolean;
    schoolId?: boolean;
    schoolYearId?: boolean;
  },
  ExtArgs["result"]["gradeAppreciation"]
>;

export type GradeAppreciationSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    minGrade?: boolean;
    maxGrade?: boolean;
    appreciation?: boolean;
    schoolId?: boolean;
    schoolYearId?: boolean;
  },
  ExtArgs["result"]["gradeAppreciation"]
>;

export type GradeAppreciationSelectScalar = {
  id?: boolean;
  minGrade?: boolean;
  maxGrade?: boolean;
  appreciation?: boolean;
  schoolId?: boolean;
  schoolYearId?: boolean;
};

export type GradeAppreciationOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  "id" | "minGrade" | "maxGrade" | "appreciation" | "schoolId" | "schoolYearId",
  ExtArgs["result"]["gradeAppreciation"]
>;
export type GradeAppreciationInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  classroomAppreciations?:
    | boolean
    | Prisma.GradeAppreciation$classroomAppreciationsArgs<ExtArgs>;
  _count?:
    | boolean
    | Prisma.GradeAppreciationCountOutputTypeDefaultArgs<ExtArgs>;
};
export type GradeAppreciationIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};
export type GradeAppreciationIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};

export type $GradeAppreciationPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "GradeAppreciation";
  objects: {
    classroomAppreciations: Prisma.$ClassroomGradeAppreciationPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      minGrade: number;
      maxGrade: number;
      appreciation: string;
      schoolId: string;
      schoolYearId: string;
    },
    ExtArgs["result"]["gradeAppreciation"]
  >;
  composites: {};
};

export type GradeAppreciationGetPayload<
  S extends boolean | null | undefined | GradeAppreciationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$GradeAppreciationPayload, S>;

export type GradeAppreciationCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  GradeAppreciationFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: GradeAppreciationCountAggregateInputType | true;
};

export interface GradeAppreciationDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["GradeAppreciation"];
    meta: { name: "GradeAppreciation" };
  };
  /**
   * Find zero or one GradeAppreciation that matches the filter.
   * @param {GradeAppreciationFindUniqueArgs} args - Arguments to find a GradeAppreciation
   * @example
   * // Get one GradeAppreciation
   * const gradeAppreciation = await prisma.gradeAppreciation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends GradeAppreciationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, GradeAppreciationFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one GradeAppreciation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {GradeAppreciationFindUniqueOrThrowArgs} args - Arguments to find a GradeAppreciation
   * @example
   * // Get one GradeAppreciation
   * const gradeAppreciation = await prisma.gradeAppreciation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends GradeAppreciationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      GradeAppreciationFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first GradeAppreciation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationFindFirstArgs} args - Arguments to find a GradeAppreciation
   * @example
   * // Get one GradeAppreciation
   * const gradeAppreciation = await prisma.gradeAppreciation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends GradeAppreciationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, GradeAppreciationFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first GradeAppreciation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationFindFirstOrThrowArgs} args - Arguments to find a GradeAppreciation
   * @example
   * // Get one GradeAppreciation
   * const gradeAppreciation = await prisma.gradeAppreciation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends GradeAppreciationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      GradeAppreciationFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more GradeAppreciations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all GradeAppreciations
   * const gradeAppreciations = await prisma.gradeAppreciation.findMany()
   *
   * // Get first 10 GradeAppreciations
   * const gradeAppreciations = await prisma.gradeAppreciation.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const gradeAppreciationWithIdOnly = await prisma.gradeAppreciation.findMany({ select: { id: true } })
   *
   */
  findMany<T extends GradeAppreciationFindManyArgs>(
    args?: Prisma.SelectSubset<T, GradeAppreciationFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a GradeAppreciation.
   * @param {GradeAppreciationCreateArgs} args - Arguments to create a GradeAppreciation.
   * @example
   * // Create one GradeAppreciation
   * const GradeAppreciation = await prisma.gradeAppreciation.create({
   *   data: {
   *     // ... data to create a GradeAppreciation
   *   }
   * })
   *
   */
  create<T extends GradeAppreciationCreateArgs>(
    args: Prisma.SelectSubset<T, GradeAppreciationCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many GradeAppreciations.
   * @param {GradeAppreciationCreateManyArgs} args - Arguments to create many GradeAppreciations.
   * @example
   * // Create many GradeAppreciations
   * const gradeAppreciation = await prisma.gradeAppreciation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends GradeAppreciationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, GradeAppreciationCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many GradeAppreciations and returns the data saved in the database.
   * @param {GradeAppreciationCreateManyAndReturnArgs} args - Arguments to create many GradeAppreciations.
   * @example
   * // Create many GradeAppreciations
   * const gradeAppreciation = await prisma.gradeAppreciation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many GradeAppreciations and only return the `id`
   * const gradeAppreciationWithIdOnly = await prisma.gradeAppreciation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends GradeAppreciationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      GradeAppreciationCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a GradeAppreciation.
   * @param {GradeAppreciationDeleteArgs} args - Arguments to delete one GradeAppreciation.
   * @example
   * // Delete one GradeAppreciation
   * const GradeAppreciation = await prisma.gradeAppreciation.delete({
   *   where: {
   *     // ... filter to delete one GradeAppreciation
   *   }
   * })
   *
   */
  delete<T extends GradeAppreciationDeleteArgs>(
    args: Prisma.SelectSubset<T, GradeAppreciationDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one GradeAppreciation.
   * @param {GradeAppreciationUpdateArgs} args - Arguments to update one GradeAppreciation.
   * @example
   * // Update one GradeAppreciation
   * const gradeAppreciation = await prisma.gradeAppreciation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends GradeAppreciationUpdateArgs>(
    args: Prisma.SelectSubset<T, GradeAppreciationUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more GradeAppreciations.
   * @param {GradeAppreciationDeleteManyArgs} args - Arguments to filter GradeAppreciations to delete.
   * @example
   * // Delete a few GradeAppreciations
   * const { count } = await prisma.gradeAppreciation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends GradeAppreciationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, GradeAppreciationDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more GradeAppreciations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many GradeAppreciations
   * const gradeAppreciation = await prisma.gradeAppreciation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends GradeAppreciationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, GradeAppreciationUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more GradeAppreciations and returns the data updated in the database.
   * @param {GradeAppreciationUpdateManyAndReturnArgs} args - Arguments to update many GradeAppreciations.
   * @example
   * // Update many GradeAppreciations
   * const gradeAppreciation = await prisma.gradeAppreciation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more GradeAppreciations and only return the `id`
   * const gradeAppreciationWithIdOnly = await prisma.gradeAppreciation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends GradeAppreciationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      GradeAppreciationUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one GradeAppreciation.
   * @param {GradeAppreciationUpsertArgs} args - Arguments to update or create a GradeAppreciation.
   * @example
   * // Update or create a GradeAppreciation
   * const gradeAppreciation = await prisma.gradeAppreciation.upsert({
   *   create: {
   *     // ... data to create a GradeAppreciation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the GradeAppreciation we want to update
   *   }
   * })
   */
  upsert<T extends GradeAppreciationUpsertArgs>(
    args: Prisma.SelectSubset<T, GradeAppreciationUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__GradeAppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$GradeAppreciationPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of GradeAppreciations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationCountArgs} args - Arguments to filter GradeAppreciations to count.
   * @example
   * // Count the number of GradeAppreciations
   * const count = await prisma.gradeAppreciation.count({
   *   where: {
   *     // ... the filter for the GradeAppreciations we want to count
   *   }
   * })
   **/
  count<T extends GradeAppreciationCountArgs>(
    args?: Prisma.Subset<T, GradeAppreciationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            GradeAppreciationCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a GradeAppreciation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends GradeAppreciationAggregateArgs>(
    args: Prisma.Subset<T, GradeAppreciationAggregateArgs>,
  ): Prisma.PrismaPromise<GetGradeAppreciationAggregateType<T>>;

  /**
   * Group by GradeAppreciation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GradeAppreciationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends GradeAppreciationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: GradeAppreciationGroupByArgs["orderBy"] }
      : { orderBy?: GradeAppreciationGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      GradeAppreciationGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetGradeAppreciationGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the GradeAppreciation model
   */
  readonly fields: GradeAppreciationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for GradeAppreciation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__GradeAppreciationClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  classroomAppreciations<
    T extends Prisma.GradeAppreciation$classroomAppreciationsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.GradeAppreciation$classroomAppreciationsArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomGradeAppreciationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the GradeAppreciation model
 */
export interface GradeAppreciationFieldRefs {
  readonly id: Prisma.FieldRef<"GradeAppreciation", "Int">;
  readonly minGrade: Prisma.FieldRef<"GradeAppreciation", "Float">;
  readonly maxGrade: Prisma.FieldRef<"GradeAppreciation", "Float">;
  readonly appreciation: Prisma.FieldRef<"GradeAppreciation", "String">;
  readonly schoolId: Prisma.FieldRef<"GradeAppreciation", "String">;
  readonly schoolYearId: Prisma.FieldRef<"GradeAppreciation", "String">;
}

// Custom InputTypes
/**
 * GradeAppreciation findUnique
 */
export type GradeAppreciationFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which GradeAppreciation to fetch.
   */
  where: Prisma.GradeAppreciationWhereUniqueInput;
};

/**
 * GradeAppreciation findUniqueOrThrow
 */
export type GradeAppreciationFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which GradeAppreciation to fetch.
   */
  where: Prisma.GradeAppreciationWhereUniqueInput;
};

/**
 * GradeAppreciation findFirst
 */
export type GradeAppreciationFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which GradeAppreciation to fetch.
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of GradeAppreciations to fetch.
   */
  orderBy?:
    | Prisma.GradeAppreciationOrderByWithRelationInput
    | Prisma.GradeAppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for GradeAppreciations.
   */
  cursor?: Prisma.GradeAppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` GradeAppreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` GradeAppreciations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of GradeAppreciations.
   */
  distinct?:
    | Prisma.GradeAppreciationScalarFieldEnum
    | Prisma.GradeAppreciationScalarFieldEnum[];
};

/**
 * GradeAppreciation findFirstOrThrow
 */
export type GradeAppreciationFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which GradeAppreciation to fetch.
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of GradeAppreciations to fetch.
   */
  orderBy?:
    | Prisma.GradeAppreciationOrderByWithRelationInput
    | Prisma.GradeAppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for GradeAppreciations.
   */
  cursor?: Prisma.GradeAppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` GradeAppreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` GradeAppreciations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of GradeAppreciations.
   */
  distinct?:
    | Prisma.GradeAppreciationScalarFieldEnum
    | Prisma.GradeAppreciationScalarFieldEnum[];
};

/**
 * GradeAppreciation findMany
 */
export type GradeAppreciationFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which GradeAppreciations to fetch.
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of GradeAppreciations to fetch.
   */
  orderBy?:
    | Prisma.GradeAppreciationOrderByWithRelationInput
    | Prisma.GradeAppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing GradeAppreciations.
   */
  cursor?: Prisma.GradeAppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` GradeAppreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` GradeAppreciations.
   */
  skip?: number;
  distinct?:
    | Prisma.GradeAppreciationScalarFieldEnum
    | Prisma.GradeAppreciationScalarFieldEnum[];
};

/**
 * GradeAppreciation create
 */
export type GradeAppreciationCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * The data needed to create a GradeAppreciation.
   */
  data: Prisma.XOR<
    Prisma.GradeAppreciationCreateInput,
    Prisma.GradeAppreciationUncheckedCreateInput
  >;
};

/**
 * GradeAppreciation createMany
 */
export type GradeAppreciationCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many GradeAppreciations.
   */
  data:
    | Prisma.GradeAppreciationCreateManyInput
    | Prisma.GradeAppreciationCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * GradeAppreciation createManyAndReturn
 */
export type GradeAppreciationCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * The data used to create many GradeAppreciations.
   */
  data:
    | Prisma.GradeAppreciationCreateManyInput
    | Prisma.GradeAppreciationCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * GradeAppreciation update
 */
export type GradeAppreciationUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * The data needed to update a GradeAppreciation.
   */
  data: Prisma.XOR<
    Prisma.GradeAppreciationUpdateInput,
    Prisma.GradeAppreciationUncheckedUpdateInput
  >;
  /**
   * Choose, which GradeAppreciation to update.
   */
  where: Prisma.GradeAppreciationWhereUniqueInput;
};

/**
 * GradeAppreciation updateMany
 */
export type GradeAppreciationUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update GradeAppreciations.
   */
  data: Prisma.XOR<
    Prisma.GradeAppreciationUpdateManyMutationInput,
    Prisma.GradeAppreciationUncheckedUpdateManyInput
  >;
  /**
   * Filter which GradeAppreciations to update
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * Limit how many GradeAppreciations to update.
   */
  limit?: number;
};

/**
 * GradeAppreciation updateManyAndReturn
 */
export type GradeAppreciationUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * The data used to update GradeAppreciations.
   */
  data: Prisma.XOR<
    Prisma.GradeAppreciationUpdateManyMutationInput,
    Prisma.GradeAppreciationUncheckedUpdateManyInput
  >;
  /**
   * Filter which GradeAppreciations to update
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * Limit how many GradeAppreciations to update.
   */
  limit?: number;
};

/**
 * GradeAppreciation upsert
 */
export type GradeAppreciationUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * The filter to search for the GradeAppreciation to update in case it exists.
   */
  where: Prisma.GradeAppreciationWhereUniqueInput;
  /**
   * In case the GradeAppreciation found by the `where` argument doesn't exist, create a new GradeAppreciation with this data.
   */
  create: Prisma.XOR<
    Prisma.GradeAppreciationCreateInput,
    Prisma.GradeAppreciationUncheckedCreateInput
  >;
  /**
   * In case the GradeAppreciation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.GradeAppreciationUpdateInput,
    Prisma.GradeAppreciationUncheckedUpdateInput
  >;
};

/**
 * GradeAppreciation delete
 */
export type GradeAppreciationDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
  /**
   * Filter which GradeAppreciation to delete.
   */
  where: Prisma.GradeAppreciationWhereUniqueInput;
};

/**
 * GradeAppreciation deleteMany
 */
export type GradeAppreciationDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which GradeAppreciations to delete
   */
  where?: Prisma.GradeAppreciationWhereInput;
  /**
   * Limit how many GradeAppreciations to delete.
   */
  limit?: number;
};

/**
 * GradeAppreciation.classroomAppreciations
 */
export type GradeAppreciation$classroomAppreciationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ClassroomGradeAppreciation
   */
  select?: Prisma.ClassroomGradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ClassroomGradeAppreciation
   */
  omit?: Prisma.ClassroomGradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomGradeAppreciationInclude<ExtArgs> | null;
  where?: Prisma.ClassroomGradeAppreciationWhereInput;
  orderBy?:
    | Prisma.ClassroomGradeAppreciationOrderByWithRelationInput
    | Prisma.ClassroomGradeAppreciationOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomGradeAppreciationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomGradeAppreciationScalarFieldEnum
    | Prisma.ClassroomGradeAppreciationScalarFieldEnum[];
};

/**
 * GradeAppreciation without action
 */
export type GradeAppreciationDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the GradeAppreciation
   */
  select?: Prisma.GradeAppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the GradeAppreciation
   */
  omit?: Prisma.GradeAppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeAppreciationInclude<ExtArgs> | null;
};
