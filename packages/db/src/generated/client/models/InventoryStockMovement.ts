/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `InventoryStockMovement` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model InventoryStockMovement
 *
 */
export type InventoryStockMovementModel =
  runtime.Types.Result.DefaultSelection<Prisma.$InventoryStockMovementPayload>;

export type AggregateInventoryStockMovement = {
  _count: InventoryStockMovementCountAggregateOutputType | null;
  _avg: InventoryStockMovementAvgAggregateOutputType | null;
  _sum: InventoryStockMovementSumAggregateOutputType | null;
  _min: InventoryStockMovementMinAggregateOutputType | null;
  _max: InventoryStockMovementMaxAggregateOutputType | null;
};

export type InventoryStockMovementAvgAggregateOutputType = {
  quantity: number | null;
};

export type InventoryStockMovementSumAggregateOutputType = {
  quantity: number | null;
};

export type InventoryStockMovementMinAggregateOutputType = {
  id: string | null;
  quantity: number | null;
  type: $Enums.InventoryMovementType | null;
  note: string | null;
  createdAt: Date | null;
  createdById: string | null;
  consumableId: string | null;
  schoolYearId: string | null;
  schoolId: string | null;
};

export type InventoryStockMovementMaxAggregateOutputType = {
  id: string | null;
  quantity: number | null;
  type: $Enums.InventoryMovementType | null;
  note: string | null;
  createdAt: Date | null;
  createdById: string | null;
  consumableId: string | null;
  schoolYearId: string | null;
  schoolId: string | null;
};

export type InventoryStockMovementCountAggregateOutputType = {
  id: number;
  quantity: number;
  type: number;
  note: number;
  createdAt: number;
  createdById: number;
  consumableId: number;
  schoolYearId: number;
  schoolId: number;
  _all: number;
};

export type InventoryStockMovementAvgAggregateInputType = {
  quantity?: true;
};

export type InventoryStockMovementSumAggregateInputType = {
  quantity?: true;
};

export type InventoryStockMovementMinAggregateInputType = {
  id?: true;
  quantity?: true;
  type?: true;
  note?: true;
  createdAt?: true;
  createdById?: true;
  consumableId?: true;
  schoolYearId?: true;
  schoolId?: true;
};

export type InventoryStockMovementMaxAggregateInputType = {
  id?: true;
  quantity?: true;
  type?: true;
  note?: true;
  createdAt?: true;
  createdById?: true;
  consumableId?: true;
  schoolYearId?: true;
  schoolId?: true;
};

export type InventoryStockMovementCountAggregateInputType = {
  id?: true;
  quantity?: true;
  type?: true;
  note?: true;
  createdAt?: true;
  createdById?: true;
  consumableId?: true;
  schoolYearId?: true;
  schoolId?: true;
  _all?: true;
};

export type InventoryStockMovementAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which InventoryStockMovement to aggregate.
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InventoryStockMovements to fetch.
   */
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InventoryStockMovements from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InventoryStockMovements.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned InventoryStockMovements
   **/
  _count?: true | InventoryStockMovementCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: InventoryStockMovementAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: InventoryStockMovementSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: InventoryStockMovementMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: InventoryStockMovementMaxAggregateInputType;
};

export type GetInventoryStockMovementAggregateType<
  T extends InventoryStockMovementAggregateArgs,
> = {
  [P in keyof T & keyof AggregateInventoryStockMovement]: P extends
    | "_count"
    | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInventoryStockMovement[P]>
    : Prisma.GetScalarType<T[P], AggregateInventoryStockMovement[P]>;
};

export type InventoryStockMovementGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryStockMovementWhereInput;
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithAggregationInput
    | Prisma.InventoryStockMovementOrderByWithAggregationInput[];
  by:
    | Prisma.InventoryStockMovementScalarFieldEnum[]
    | Prisma.InventoryStockMovementScalarFieldEnum;
  having?: Prisma.InventoryStockMovementScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: InventoryStockMovementCountAggregateInputType | true;
  _avg?: InventoryStockMovementAvgAggregateInputType;
  _sum?: InventoryStockMovementSumAggregateInputType;
  _min?: InventoryStockMovementMinAggregateInputType;
  _max?: InventoryStockMovementMaxAggregateInputType;
};

export type InventoryStockMovementGroupByOutputType = {
  id: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note: string | null;
  createdAt: Date;
  createdById: string;
  consumableId: string;
  schoolYearId: string;
  schoolId: string;
  _count: InventoryStockMovementCountAggregateOutputType | null;
  _avg: InventoryStockMovementAvgAggregateOutputType | null;
  _sum: InventoryStockMovementSumAggregateOutputType | null;
  _min: InventoryStockMovementMinAggregateOutputType | null;
  _max: InventoryStockMovementMaxAggregateOutputType | null;
};

type GetInventoryStockMovementGroupByPayload<
  T extends InventoryStockMovementGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InventoryStockMovementGroupByOutputType, T["by"]> & {
      [P in keyof T &
        keyof InventoryStockMovementGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<
              T[P],
              InventoryStockMovementGroupByOutputType[P]
            >
        : Prisma.GetScalarType<
            T[P],
            InventoryStockMovementGroupByOutputType[P]
          >;
    }
  >
>;

export type InventoryStockMovementWhereInput = {
  AND?:
    | Prisma.InventoryStockMovementWhereInput
    | Prisma.InventoryStockMovementWhereInput[];
  OR?: Prisma.InventoryStockMovementWhereInput[];
  NOT?:
    | Prisma.InventoryStockMovementWhereInput
    | Prisma.InventoryStockMovementWhereInput[];
  id?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  quantity?: Prisma.IntFilter<"InventoryStockMovement"> | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFilter<"InventoryStockMovement">
    | $Enums.InventoryMovementType;
  note?: Prisma.StringNullableFilter<"InventoryStockMovement"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"InventoryStockMovement"> | Date | string;
  createdById?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  consumableId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  schoolYearId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  schoolId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  consumable?: Prisma.XOR<
    Prisma.InventoryConsumableScalarRelationFilter,
    Prisma.InventoryConsumableWhereInput
  >;
  createdBy?: Prisma.XOR<
    Prisma.UserScalarRelationFilter,
    Prisma.UserWhereInput
  >;
  schoolYear?: Prisma.XOR<
    Prisma.SchoolYearScalarRelationFilter,
    Prisma.SchoolYearWhereInput
  >;
  school?: Prisma.XOR<
    Prisma.SchoolScalarRelationFilter,
    Prisma.SchoolWhereInput
  >;
};

export type InventoryStockMovementOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  quantity?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  note?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  consumableId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  consumable?: Prisma.InventoryConsumableOrderByWithRelationInput;
  createdBy?: Prisma.UserOrderByWithRelationInput;
  schoolYear?: Prisma.SchoolYearOrderByWithRelationInput;
  school?: Prisma.SchoolOrderByWithRelationInput;
};

export type InventoryStockMovementWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?:
      | Prisma.InventoryStockMovementWhereInput
      | Prisma.InventoryStockMovementWhereInput[];
    OR?: Prisma.InventoryStockMovementWhereInput[];
    NOT?:
      | Prisma.InventoryStockMovementWhereInput
      | Prisma.InventoryStockMovementWhereInput[];
    quantity?: Prisma.IntFilter<"InventoryStockMovement"> | number;
    type?:
      | Prisma.EnumInventoryMovementTypeFilter<"InventoryStockMovement">
      | $Enums.InventoryMovementType;
    note?:
      | Prisma.StringNullableFilter<"InventoryStockMovement">
      | string
      | null;
    createdAt?: Prisma.DateTimeFilter<"InventoryStockMovement"> | Date | string;
    createdById?: Prisma.StringFilter<"InventoryStockMovement"> | string;
    consumableId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
    schoolYearId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
    schoolId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
    consumable?: Prisma.XOR<
      Prisma.InventoryConsumableScalarRelationFilter,
      Prisma.InventoryConsumableWhereInput
    >;
    createdBy?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >;
    schoolYear?: Prisma.XOR<
      Prisma.SchoolYearScalarRelationFilter,
      Prisma.SchoolYearWhereInput
    >;
    school?: Prisma.XOR<
      Prisma.SchoolScalarRelationFilter,
      Prisma.SchoolWhereInput
    >;
  },
  "id"
>;

export type InventoryStockMovementOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  quantity?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  note?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  consumableId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  _count?: Prisma.InventoryStockMovementCountOrderByAggregateInput;
  _avg?: Prisma.InventoryStockMovementAvgOrderByAggregateInput;
  _max?: Prisma.InventoryStockMovementMaxOrderByAggregateInput;
  _min?: Prisma.InventoryStockMovementMinOrderByAggregateInput;
  _sum?: Prisma.InventoryStockMovementSumOrderByAggregateInput;
};

export type InventoryStockMovementScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.InventoryStockMovementScalarWhereWithAggregatesInput
    | Prisma.InventoryStockMovementScalarWhereWithAggregatesInput[];
  OR?: Prisma.InventoryStockMovementScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.InventoryStockMovementScalarWhereWithAggregatesInput
    | Prisma.InventoryStockMovementScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"InventoryStockMovement"> | string;
  quantity?: Prisma.IntWithAggregatesFilter<"InventoryStockMovement"> | number;
  type?:
    | Prisma.EnumInventoryMovementTypeWithAggregatesFilter<"InventoryStockMovement">
    | $Enums.InventoryMovementType;
  note?:
    | Prisma.StringNullableWithAggregatesFilter<"InventoryStockMovement">
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"InventoryStockMovement">
    | Date
    | string;
  createdById?:
    | Prisma.StringWithAggregatesFilter<"InventoryStockMovement">
    | string;
  consumableId?:
    | Prisma.StringWithAggregatesFilter<"InventoryStockMovement">
    | string;
  schoolYearId?:
    | Prisma.StringWithAggregatesFilter<"InventoryStockMovement">
    | string;
  schoolId?:
    | Prisma.StringWithAggregatesFilter<"InventoryStockMovement">
    | string;
};

export type InventoryStockMovementCreateInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  consumable: Prisma.InventoryConsumableCreateNestedOneWithoutStockMovementsInput;
  createdBy: Prisma.UserCreateNestedOneWithoutStockMovementsInput;
  schoolYear: Prisma.SchoolYearCreateNestedOneWithoutStockMovementsInput;
  school: Prisma.SchoolCreateNestedOneWithoutStockMovementsInput;
};

export type InventoryStockMovementUncheckedCreateInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  consumableId: string;
  schoolYearId: string;
  schoolId: string;
};

export type InventoryStockMovementUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  consumable?: Prisma.InventoryConsumableUpdateOneRequiredWithoutStockMovementsNestedInput;
  createdBy?: Prisma.UserUpdateOneRequiredWithoutStockMovementsNestedInput;
  schoolYear?: Prisma.SchoolYearUpdateOneRequiredWithoutStockMovementsNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStockMovementsNestedInput;
};

export type InventoryStockMovementUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementCreateManyInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  consumableId: string;
  schoolYearId: string;
  schoolId: string;
};

export type InventoryStockMovementUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InventoryStockMovementUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementListRelationFilter = {
  every?: Prisma.InventoryStockMovementWhereInput;
  some?: Prisma.InventoryStockMovementWhereInput;
  none?: Prisma.InventoryStockMovementWhereInput;
};

export type InventoryStockMovementOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type InventoryStockMovementCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  quantity?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  note?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  consumableId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type InventoryStockMovementAvgOrderByAggregateInput = {
  quantity?: Prisma.SortOrder;
};

export type InventoryStockMovementMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  quantity?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  note?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  consumableId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type InventoryStockMovementMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  quantity?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  note?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  consumableId?: Prisma.SortOrder;
  schoolYearId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type InventoryStockMovementSumOrderByAggregateInput = {
  quantity?: Prisma.SortOrder;
};

export type InventoryStockMovementCreateNestedManyWithoutConsumableInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutConsumableInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput
      >
    | Prisma.InventoryStockMovementCreateWithoutConsumableInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput[];
  createMany?: Prisma.InventoryStockMovementCreateManyConsumableInputEnvelope;
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
};

export type InventoryStockMovementUncheckedCreateNestedManyWithoutConsumableInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutConsumableInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput
        >
      | Prisma.InventoryStockMovementCreateWithoutConsumableInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput[];
    createMany?: Prisma.InventoryStockMovementCreateManyConsumableInputEnvelope;
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
  };

export type InventoryStockMovementUpdateManyWithoutConsumableNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutConsumableInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput
      >
    | Prisma.InventoryStockMovementCreateWithoutConsumableInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput[];
  upsert?:
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutConsumableInput
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutConsumableInput[];
  createMany?: Prisma.InventoryStockMovementCreateManyConsumableInputEnvelope;
  set?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  disconnect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  delete?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  update?:
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutConsumableInput
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutConsumableInput[];
  updateMany?:
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutConsumableInput
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutConsumableInput[];
  deleteMany?:
    | Prisma.InventoryStockMovementScalarWhereInput
    | Prisma.InventoryStockMovementScalarWhereInput[];
};

export type InventoryStockMovementUncheckedUpdateManyWithoutConsumableNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutConsumableInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput
        >
      | Prisma.InventoryStockMovementCreateWithoutConsumableInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutConsumableInput[];
    upsert?:
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutConsumableInput
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutConsumableInput[];
    createMany?: Prisma.InventoryStockMovementCreateManyConsumableInputEnvelope;
    set?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    disconnect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    delete?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    update?:
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutConsumableInput
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutConsumableInput[];
    updateMany?:
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutConsumableInput
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutConsumableInput[];
    deleteMany?:
      | Prisma.InventoryStockMovementScalarWhereInput
      | Prisma.InventoryStockMovementScalarWhereInput[];
  };

export type EnumInventoryMovementTypeFieldUpdateOperationsInput = {
  set?: $Enums.InventoryMovementType;
};

export type InventoryStockMovementCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutSchoolInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput
      >
    | Prisma.InventoryStockMovementCreateWithoutSchoolInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.InventoryStockMovementCreateManySchoolInputEnvelope;
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
};

export type InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutSchoolInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput
        >
      | Prisma.InventoryStockMovementCreateWithoutSchoolInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput[];
    createMany?: Prisma.InventoryStockMovementCreateManySchoolInputEnvelope;
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
  };

export type InventoryStockMovementUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutSchoolInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput
      >
    | Prisma.InventoryStockMovementCreateWithoutSchoolInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.InventoryStockMovementCreateManySchoolInputEnvelope;
  set?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  disconnect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  delete?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  update?:
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolInput
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?:
    | Prisma.InventoryStockMovementScalarWhereInput
    | Prisma.InventoryStockMovementScalarWhereInput[];
};

export type InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutSchoolInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput
        >
      | Prisma.InventoryStockMovementCreateWithoutSchoolInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolInput[];
    upsert?:
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolInput
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolInput[];
    createMany?: Prisma.InventoryStockMovementCreateManySchoolInputEnvelope;
    set?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    disconnect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    delete?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    update?:
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolInput
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolInput[];
    updateMany?:
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolInput
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolInput[];
    deleteMany?:
      | Prisma.InventoryStockMovementScalarWhereInput
      | Prisma.InventoryStockMovementScalarWhereInput[];
  };

export type InventoryStockMovementCreateNestedManyWithoutSchoolYearInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutSchoolYearInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput
      >
    | Prisma.InventoryStockMovementCreateWithoutSchoolYearInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput[];
  createMany?: Prisma.InventoryStockMovementCreateManySchoolYearInputEnvelope;
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
};

export type InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolYearInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutSchoolYearInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput
        >
      | Prisma.InventoryStockMovementCreateWithoutSchoolYearInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput[];
    createMany?: Prisma.InventoryStockMovementCreateManySchoolYearInputEnvelope;
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
  };

export type InventoryStockMovementUpdateManyWithoutSchoolYearNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutSchoolYearInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput
      >
    | Prisma.InventoryStockMovementCreateWithoutSchoolYearInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput[];
  upsert?:
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolYearInput
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolYearInput[];
  createMany?: Prisma.InventoryStockMovementCreateManySchoolYearInputEnvelope;
  set?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  disconnect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  delete?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  update?:
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolYearInput
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolYearInput[];
  updateMany?:
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolYearInput
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolYearInput[];
  deleteMany?:
    | Prisma.InventoryStockMovementScalarWhereInput
    | Prisma.InventoryStockMovementScalarWhereInput[];
};

export type InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutSchoolYearInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput
        >
      | Prisma.InventoryStockMovementCreateWithoutSchoolYearInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutSchoolYearInput[];
    upsert?:
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolYearInput
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolYearInput[];
    createMany?: Prisma.InventoryStockMovementCreateManySchoolYearInputEnvelope;
    set?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    disconnect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    delete?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    update?:
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolYearInput
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolYearInput[];
    updateMany?:
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolYearInput
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutSchoolYearInput[];
    deleteMany?:
      | Prisma.InventoryStockMovementScalarWhereInput
      | Prisma.InventoryStockMovementScalarWhereInput[];
  };

export type InventoryStockMovementCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutCreatedByInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.InventoryStockMovementCreateWithoutCreatedByInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput[];
  createMany?: Prisma.InventoryStockMovementCreateManyCreatedByInputEnvelope;
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
};

export type InventoryStockMovementUncheckedCreateNestedManyWithoutCreatedByInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutCreatedByInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput
        >
      | Prisma.InventoryStockMovementCreateWithoutCreatedByInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput[];
    createMany?: Prisma.InventoryStockMovementCreateManyCreatedByInputEnvelope;
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
  };

export type InventoryStockMovementUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InventoryStockMovementCreateWithoutCreatedByInput,
        Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.InventoryStockMovementCreateWithoutCreatedByInput[]
    | Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput[];
  connectOrCreate?:
    | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput
    | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput[];
  upsert?:
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutCreatedByInput[];
  createMany?: Prisma.InventoryStockMovementCreateManyCreatedByInputEnvelope;
  set?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  disconnect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  delete?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  connect?:
    | Prisma.InventoryStockMovementWhereUniqueInput
    | Prisma.InventoryStockMovementWhereUniqueInput[];
  update?:
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutCreatedByInput[];
  updateMany?:
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutCreatedByInput[];
  deleteMany?:
    | Prisma.InventoryStockMovementScalarWhereInput
    | Prisma.InventoryStockMovementScalarWhereInput[];
};

export type InventoryStockMovementUncheckedUpdateManyWithoutCreatedByNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.InventoryStockMovementCreateWithoutCreatedByInput,
          Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput
        >
      | Prisma.InventoryStockMovementCreateWithoutCreatedByInput[]
      | Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput[];
    connectOrCreate?:
      | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput
      | Prisma.InventoryStockMovementCreateOrConnectWithoutCreatedByInput[];
    upsert?:
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutCreatedByInput
      | Prisma.InventoryStockMovementUpsertWithWhereUniqueWithoutCreatedByInput[];
    createMany?: Prisma.InventoryStockMovementCreateManyCreatedByInputEnvelope;
    set?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    disconnect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    delete?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    connect?:
      | Prisma.InventoryStockMovementWhereUniqueInput
      | Prisma.InventoryStockMovementWhereUniqueInput[];
    update?:
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutCreatedByInput
      | Prisma.InventoryStockMovementUpdateWithWhereUniqueWithoutCreatedByInput[];
    updateMany?:
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutCreatedByInput
      | Prisma.InventoryStockMovementUpdateManyWithWhereWithoutCreatedByInput[];
    deleteMany?:
      | Prisma.InventoryStockMovementScalarWhereInput
      | Prisma.InventoryStockMovementScalarWhereInput[];
  };

export type InventoryStockMovementCreateWithoutConsumableInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdBy: Prisma.UserCreateNestedOneWithoutStockMovementsInput;
  schoolYear: Prisma.SchoolYearCreateNestedOneWithoutStockMovementsInput;
  school: Prisma.SchoolCreateNestedOneWithoutStockMovementsInput;
};

export type InventoryStockMovementUncheckedCreateWithoutConsumableInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  schoolYearId: string;
  schoolId: string;
};

export type InventoryStockMovementCreateOrConnectWithoutConsumableInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateWithoutConsumableInput,
    Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput
  >;
};

export type InventoryStockMovementCreateManyConsumableInputEnvelope = {
  data:
    | Prisma.InventoryStockMovementCreateManyConsumableInput
    | Prisma.InventoryStockMovementCreateManyConsumableInput[];
  skipDuplicates?: boolean;
};

export type InventoryStockMovementUpsertWithWhereUniqueWithoutConsumableInput =
  {
    where: Prisma.InventoryStockMovementWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.InventoryStockMovementUpdateWithoutConsumableInput,
      Prisma.InventoryStockMovementUncheckedUpdateWithoutConsumableInput
    >;
    create: Prisma.XOR<
      Prisma.InventoryStockMovementCreateWithoutConsumableInput,
      Prisma.InventoryStockMovementUncheckedCreateWithoutConsumableInput
    >;
  };

export type InventoryStockMovementUpdateWithWhereUniqueWithoutConsumableInput =
  {
    where: Prisma.InventoryStockMovementWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.InventoryStockMovementUpdateWithoutConsumableInput,
      Prisma.InventoryStockMovementUncheckedUpdateWithoutConsumableInput
    >;
  };

export type InventoryStockMovementUpdateManyWithWhereWithoutConsumableInput = {
  where: Prisma.InventoryStockMovementScalarWhereInput;
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateManyMutationInput,
    Prisma.InventoryStockMovementUncheckedUpdateManyWithoutConsumableInput
  >;
};

export type InventoryStockMovementScalarWhereInput = {
  AND?:
    | Prisma.InventoryStockMovementScalarWhereInput
    | Prisma.InventoryStockMovementScalarWhereInput[];
  OR?: Prisma.InventoryStockMovementScalarWhereInput[];
  NOT?:
    | Prisma.InventoryStockMovementScalarWhereInput
    | Prisma.InventoryStockMovementScalarWhereInput[];
  id?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  quantity?: Prisma.IntFilter<"InventoryStockMovement"> | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFilter<"InventoryStockMovement">
    | $Enums.InventoryMovementType;
  note?: Prisma.StringNullableFilter<"InventoryStockMovement"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"InventoryStockMovement"> | Date | string;
  createdById?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  consumableId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  schoolYearId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
  schoolId?: Prisma.StringFilter<"InventoryStockMovement"> | string;
};

export type InventoryStockMovementCreateWithoutSchoolInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  consumable: Prisma.InventoryConsumableCreateNestedOneWithoutStockMovementsInput;
  createdBy: Prisma.UserCreateNestedOneWithoutStockMovementsInput;
  schoolYear: Prisma.SchoolYearCreateNestedOneWithoutStockMovementsInput;
};

export type InventoryStockMovementUncheckedCreateWithoutSchoolInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  consumableId: string;
  schoolYearId: string;
};

export type InventoryStockMovementCreateOrConnectWithoutSchoolInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateWithoutSchoolInput,
    Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput
  >;
};

export type InventoryStockMovementCreateManySchoolInputEnvelope = {
  data:
    | Prisma.InventoryStockMovementCreateManySchoolInput
    | Prisma.InventoryStockMovementCreateManySchoolInput[];
  skipDuplicates?: boolean;
};

export type InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateWithoutSchoolInput,
    Prisma.InventoryStockMovementUncheckedUpdateWithoutSchoolInput
  >;
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateWithoutSchoolInput,
    Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolInput
  >;
};

export type InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateWithoutSchoolInput,
    Prisma.InventoryStockMovementUncheckedUpdateWithoutSchoolInput
  >;
};

export type InventoryStockMovementUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.InventoryStockMovementScalarWhereInput;
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateManyMutationInput,
    Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolInput
  >;
};

export type InventoryStockMovementCreateWithoutSchoolYearInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  consumable: Prisma.InventoryConsumableCreateNestedOneWithoutStockMovementsInput;
  createdBy: Prisma.UserCreateNestedOneWithoutStockMovementsInput;
  school: Prisma.SchoolCreateNestedOneWithoutStockMovementsInput;
};

export type InventoryStockMovementUncheckedCreateWithoutSchoolYearInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  consumableId: string;
  schoolId: string;
};

export type InventoryStockMovementCreateOrConnectWithoutSchoolYearInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateWithoutSchoolYearInput,
    Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput
  >;
};

export type InventoryStockMovementCreateManySchoolYearInputEnvelope = {
  data:
    | Prisma.InventoryStockMovementCreateManySchoolYearInput
    | Prisma.InventoryStockMovementCreateManySchoolYearInput[];
  skipDuplicates?: boolean;
};

export type InventoryStockMovementUpsertWithWhereUniqueWithoutSchoolYearInput =
  {
    where: Prisma.InventoryStockMovementWhereUniqueInput;
    update: Prisma.XOR<
      Prisma.InventoryStockMovementUpdateWithoutSchoolYearInput,
      Prisma.InventoryStockMovementUncheckedUpdateWithoutSchoolYearInput
    >;
    create: Prisma.XOR<
      Prisma.InventoryStockMovementCreateWithoutSchoolYearInput,
      Prisma.InventoryStockMovementUncheckedCreateWithoutSchoolYearInput
    >;
  };

export type InventoryStockMovementUpdateWithWhereUniqueWithoutSchoolYearInput =
  {
    where: Prisma.InventoryStockMovementWhereUniqueInput;
    data: Prisma.XOR<
      Prisma.InventoryStockMovementUpdateWithoutSchoolYearInput,
      Prisma.InventoryStockMovementUncheckedUpdateWithoutSchoolYearInput
    >;
  };

export type InventoryStockMovementUpdateManyWithWhereWithoutSchoolYearInput = {
  where: Prisma.InventoryStockMovementScalarWhereInput;
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateManyMutationInput,
    Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearInput
  >;
};

export type InventoryStockMovementCreateWithoutCreatedByInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  consumable: Prisma.InventoryConsumableCreateNestedOneWithoutStockMovementsInput;
  schoolYear: Prisma.SchoolYearCreateNestedOneWithoutStockMovementsInput;
  school: Prisma.SchoolCreateNestedOneWithoutStockMovementsInput;
};

export type InventoryStockMovementUncheckedCreateWithoutCreatedByInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  consumableId: string;
  schoolYearId: string;
  schoolId: string;
};

export type InventoryStockMovementCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateWithoutCreatedByInput,
    Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput
  >;
};

export type InventoryStockMovementCreateManyCreatedByInputEnvelope = {
  data:
    | Prisma.InventoryStockMovementCreateManyCreatedByInput
    | Prisma.InventoryStockMovementCreateManyCreatedByInput[];
  skipDuplicates?: boolean;
};

export type InventoryStockMovementUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateWithoutCreatedByInput,
    Prisma.InventoryStockMovementUncheckedUpdateWithoutCreatedByInput
  >;
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateWithoutCreatedByInput,
    Prisma.InventoryStockMovementUncheckedCreateWithoutCreatedByInput
  >;
};

export type InventoryStockMovementUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateWithoutCreatedByInput,
    Prisma.InventoryStockMovementUncheckedUpdateWithoutCreatedByInput
  >;
};

export type InventoryStockMovementUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.InventoryStockMovementScalarWhereInput;
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateManyMutationInput,
    Prisma.InventoryStockMovementUncheckedUpdateManyWithoutCreatedByInput
  >;
};

export type InventoryStockMovementCreateManyConsumableInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  schoolYearId: string;
  schoolId: string;
};

export type InventoryStockMovementUpdateWithoutConsumableInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.UserUpdateOneRequiredWithoutStockMovementsNestedInput;
  schoolYear?: Prisma.SchoolYearUpdateOneRequiredWithoutStockMovementsNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStockMovementsNestedInput;
};

export type InventoryStockMovementUncheckedUpdateWithoutConsumableInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementUncheckedUpdateManyWithoutConsumableInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementCreateManySchoolInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  consumableId: string;
  schoolYearId: string;
};

export type InventoryStockMovementUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  consumable?: Prisma.InventoryConsumableUpdateOneRequiredWithoutStockMovementsNestedInput;
  createdBy?: Prisma.UserUpdateOneRequiredWithoutStockMovementsNestedInput;
  schoolYear?: Prisma.SchoolYearUpdateOneRequiredWithoutStockMovementsNestedInput;
};

export type InventoryStockMovementUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementCreateManySchoolYearInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  createdById: string;
  consumableId: string;
  schoolId: string;
};

export type InventoryStockMovementUpdateWithoutSchoolYearInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  consumable?: Prisma.InventoryConsumableUpdateOneRequiredWithoutStockMovementsNestedInput;
  createdBy?: Prisma.UserUpdateOneRequiredWithoutStockMovementsNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStockMovementsNestedInput;
};

export type InventoryStockMovementUncheckedUpdateWithoutSchoolYearInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementUncheckedUpdateManyWithoutSchoolYearInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.StringFieldUpdateOperationsInput | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementCreateManyCreatedByInput = {
  id?: string;
  quantity: number;
  type: $Enums.InventoryMovementType;
  note?: string | null;
  createdAt?: Date | string;
  consumableId: string;
  schoolYearId: string;
  schoolId: string;
};

export type InventoryStockMovementUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  consumable?: Prisma.InventoryConsumableUpdateOneRequiredWithoutStockMovementsNestedInput;
  schoolYear?: Prisma.SchoolYearUpdateOneRequiredWithoutStockMovementsNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStockMovementsNestedInput;
};

export type InventoryStockMovementUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  quantity?: Prisma.IntFieldUpdateOperationsInput | number;
  type?:
    | Prisma.EnumInventoryMovementTypeFieldUpdateOperationsInput
    | $Enums.InventoryMovementType;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  consumableId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolYearId?: Prisma.StringFieldUpdateOperationsInput | string;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type InventoryStockMovementSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    quantity?: boolean;
    type?: boolean;
    note?: boolean;
    createdAt?: boolean;
    createdById?: boolean;
    consumableId?: boolean;
    schoolYearId?: boolean;
    schoolId?: boolean;
    consumable?: boolean | Prisma.InventoryConsumableDefaultArgs<ExtArgs>;
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    schoolYear?: boolean | Prisma.SchoolYearDefaultArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["inventoryStockMovement"]
>;

export type InventoryStockMovementSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    quantity?: boolean;
    type?: boolean;
    note?: boolean;
    createdAt?: boolean;
    createdById?: boolean;
    consumableId?: boolean;
    schoolYearId?: boolean;
    schoolId?: boolean;
    consumable?: boolean | Prisma.InventoryConsumableDefaultArgs<ExtArgs>;
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    schoolYear?: boolean | Prisma.SchoolYearDefaultArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["inventoryStockMovement"]
>;

export type InventoryStockMovementSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    quantity?: boolean;
    type?: boolean;
    note?: boolean;
    createdAt?: boolean;
    createdById?: boolean;
    consumableId?: boolean;
    schoolYearId?: boolean;
    schoolId?: boolean;
    consumable?: boolean | Prisma.InventoryConsumableDefaultArgs<ExtArgs>;
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    schoolYear?: boolean | Prisma.SchoolYearDefaultArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["inventoryStockMovement"]
>;

export type InventoryStockMovementSelectScalar = {
  id?: boolean;
  quantity?: boolean;
  type?: boolean;
  note?: boolean;
  createdAt?: boolean;
  createdById?: boolean;
  consumableId?: boolean;
  schoolYearId?: boolean;
  schoolId?: boolean;
};

export type InventoryStockMovementOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "quantity"
  | "type"
  | "note"
  | "createdAt"
  | "createdById"
  | "consumableId"
  | "schoolYearId"
  | "schoolId",
  ExtArgs["result"]["inventoryStockMovement"]
>;
export type InventoryStockMovementInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  consumable?: boolean | Prisma.InventoryConsumableDefaultArgs<ExtArgs>;
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  schoolYear?: boolean | Prisma.SchoolYearDefaultArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};
export type InventoryStockMovementIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  consumable?: boolean | Prisma.InventoryConsumableDefaultArgs<ExtArgs>;
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  schoolYear?: boolean | Prisma.SchoolYearDefaultArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};
export type InventoryStockMovementIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  consumable?: boolean | Prisma.InventoryConsumableDefaultArgs<ExtArgs>;
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  schoolYear?: boolean | Prisma.SchoolYearDefaultArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};

export type $InventoryStockMovementPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "InventoryStockMovement";
  objects: {
    consumable: Prisma.$InventoryConsumablePayload<ExtArgs>;
    createdBy: Prisma.$UserPayload<ExtArgs>;
    schoolYear: Prisma.$SchoolYearPayload<ExtArgs>;
    school: Prisma.$SchoolPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      quantity: number;
      type: $Enums.InventoryMovementType;
      note: string | null;
      createdAt: Date;
      createdById: string;
      consumableId: string;
      schoolYearId: string;
      schoolId: string;
    },
    ExtArgs["result"]["inventoryStockMovement"]
  >;
  composites: {};
};

export type InventoryStockMovementGetPayload<
  S extends boolean | null | undefined | InventoryStockMovementDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$InventoryStockMovementPayload, S>;

export type InventoryStockMovementCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  InventoryStockMovementFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: InventoryStockMovementCountAggregateInputType | true;
};

export interface InventoryStockMovementDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["InventoryStockMovement"];
    meta: { name: "InventoryStockMovement" };
  };
  /**
   * Find zero or one InventoryStockMovement that matches the filter.
   * @param {InventoryStockMovementFindUniqueArgs} args - Arguments to find a InventoryStockMovement
   * @example
   * // Get one InventoryStockMovement
   * const inventoryStockMovement = await prisma.inventoryStockMovement.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InventoryStockMovementFindUniqueArgs>(
    args: Prisma.SelectSubset<T, InventoryStockMovementFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one InventoryStockMovement that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InventoryStockMovementFindUniqueOrThrowArgs} args - Arguments to find a InventoryStockMovement
   * @example
   * // Get one InventoryStockMovement
   * const inventoryStockMovement = await prisma.inventoryStockMovement.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InventoryStockMovementFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      InventoryStockMovementFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first InventoryStockMovement that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementFindFirstArgs} args - Arguments to find a InventoryStockMovement
   * @example
   * // Get one InventoryStockMovement
   * const inventoryStockMovement = await prisma.inventoryStockMovement.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InventoryStockMovementFindFirstArgs>(
    args?: Prisma.SelectSubset<T, InventoryStockMovementFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first InventoryStockMovement that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementFindFirstOrThrowArgs} args - Arguments to find a InventoryStockMovement
   * @example
   * // Get one InventoryStockMovement
   * const inventoryStockMovement = await prisma.inventoryStockMovement.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InventoryStockMovementFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      InventoryStockMovementFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more InventoryStockMovements that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InventoryStockMovements
   * const inventoryStockMovements = await prisma.inventoryStockMovement.findMany()
   *
   * // Get first 10 InventoryStockMovements
   * const inventoryStockMovements = await prisma.inventoryStockMovement.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const inventoryStockMovementWithIdOnly = await prisma.inventoryStockMovement.findMany({ select: { id: true } })
   *
   */
  findMany<T extends InventoryStockMovementFindManyArgs>(
    args?: Prisma.SelectSubset<T, InventoryStockMovementFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a InventoryStockMovement.
   * @param {InventoryStockMovementCreateArgs} args - Arguments to create a InventoryStockMovement.
   * @example
   * // Create one InventoryStockMovement
   * const InventoryStockMovement = await prisma.inventoryStockMovement.create({
   *   data: {
   *     // ... data to create a InventoryStockMovement
   *   }
   * })
   *
   */
  create<T extends InventoryStockMovementCreateArgs>(
    args: Prisma.SelectSubset<T, InventoryStockMovementCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many InventoryStockMovements.
   * @param {InventoryStockMovementCreateManyArgs} args - Arguments to create many InventoryStockMovements.
   * @example
   * // Create many InventoryStockMovements
   * const inventoryStockMovement = await prisma.inventoryStockMovement.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends InventoryStockMovementCreateManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      InventoryStockMovementCreateManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many InventoryStockMovements and returns the data saved in the database.
   * @param {InventoryStockMovementCreateManyAndReturnArgs} args - Arguments to create many InventoryStockMovements.
   * @example
   * // Create many InventoryStockMovements
   * const inventoryStockMovement = await prisma.inventoryStockMovement.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many InventoryStockMovements and only return the `id`
   * const inventoryStockMovementWithIdOnly = await prisma.inventoryStockMovement.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends InventoryStockMovementCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      InventoryStockMovementCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a InventoryStockMovement.
   * @param {InventoryStockMovementDeleteArgs} args - Arguments to delete one InventoryStockMovement.
   * @example
   * // Delete one InventoryStockMovement
   * const InventoryStockMovement = await prisma.inventoryStockMovement.delete({
   *   where: {
   *     // ... filter to delete one InventoryStockMovement
   *   }
   * })
   *
   */
  delete<T extends InventoryStockMovementDeleteArgs>(
    args: Prisma.SelectSubset<T, InventoryStockMovementDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one InventoryStockMovement.
   * @param {InventoryStockMovementUpdateArgs} args - Arguments to update one InventoryStockMovement.
   * @example
   * // Update one InventoryStockMovement
   * const inventoryStockMovement = await prisma.inventoryStockMovement.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends InventoryStockMovementUpdateArgs>(
    args: Prisma.SelectSubset<T, InventoryStockMovementUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more InventoryStockMovements.
   * @param {InventoryStockMovementDeleteManyArgs} args - Arguments to filter InventoryStockMovements to delete.
   * @example
   * // Delete a few InventoryStockMovements
   * const { count } = await prisma.inventoryStockMovement.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends InventoryStockMovementDeleteManyArgs>(
    args?: Prisma.SelectSubset<
      T,
      InventoryStockMovementDeleteManyArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more InventoryStockMovements.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InventoryStockMovements
   * const inventoryStockMovement = await prisma.inventoryStockMovement.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends InventoryStockMovementUpdateManyArgs>(
    args: Prisma.SelectSubset<T, InventoryStockMovementUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more InventoryStockMovements and returns the data updated in the database.
   * @param {InventoryStockMovementUpdateManyAndReturnArgs} args - Arguments to update many InventoryStockMovements.
   * @example
   * // Update many InventoryStockMovements
   * const inventoryStockMovement = await prisma.inventoryStockMovement.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more InventoryStockMovements and only return the `id`
   * const inventoryStockMovementWithIdOnly = await prisma.inventoryStockMovement.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends InventoryStockMovementUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      InventoryStockMovementUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one InventoryStockMovement.
   * @param {InventoryStockMovementUpsertArgs} args - Arguments to update or create a InventoryStockMovement.
   * @example
   * // Update or create a InventoryStockMovement
   * const inventoryStockMovement = await prisma.inventoryStockMovement.upsert({
   *   create: {
   *     // ... data to create a InventoryStockMovement
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InventoryStockMovement we want to update
   *   }
   * })
   */
  upsert<T extends InventoryStockMovementUpsertArgs>(
    args: Prisma.SelectSubset<T, InventoryStockMovementUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryStockMovementClient<
    runtime.Types.Result.GetResult<
      Prisma.$InventoryStockMovementPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of InventoryStockMovements.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementCountArgs} args - Arguments to filter InventoryStockMovements to count.
   * @example
   * // Count the number of InventoryStockMovements
   * const count = await prisma.inventoryStockMovement.count({
   *   where: {
   *     // ... the filter for the InventoryStockMovements we want to count
   *   }
   * })
   **/
  count<T extends InventoryStockMovementCountArgs>(
    args?: Prisma.Subset<T, InventoryStockMovementCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            InventoryStockMovementCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a InventoryStockMovement.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends InventoryStockMovementAggregateArgs>(
    args: Prisma.Subset<T, InventoryStockMovementAggregateArgs>,
  ): Prisma.PrismaPromise<GetInventoryStockMovementAggregateType<T>>;

  /**
   * Group by InventoryStockMovement.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InventoryStockMovementGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends InventoryStockMovementGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InventoryStockMovementGroupByArgs["orderBy"] }
      : { orderBy?: InventoryStockMovementGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      InventoryStockMovementGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetInventoryStockMovementGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the InventoryStockMovement model
   */
  readonly fields: InventoryStockMovementFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InventoryStockMovement.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InventoryStockMovementClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  consumable<T extends Prisma.InventoryConsumableDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.InventoryConsumableDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__InventoryConsumableClient<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumablePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  createdBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  schoolYear<T extends Prisma.SchoolYearDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolYearDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolYearClient<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolYearPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the InventoryStockMovement model
 */
export interface InventoryStockMovementFieldRefs {
  readonly id: Prisma.FieldRef<"InventoryStockMovement", "String">;
  readonly quantity: Prisma.FieldRef<"InventoryStockMovement", "Int">;
  readonly type: Prisma.FieldRef<
    "InventoryStockMovement",
    "InventoryMovementType"
  >;
  readonly note: Prisma.FieldRef<"InventoryStockMovement", "String">;
  readonly createdAt: Prisma.FieldRef<"InventoryStockMovement", "DateTime">;
  readonly createdById: Prisma.FieldRef<"InventoryStockMovement", "String">;
  readonly consumableId: Prisma.FieldRef<"InventoryStockMovement", "String">;
  readonly schoolYearId: Prisma.FieldRef<"InventoryStockMovement", "String">;
  readonly schoolId: Prisma.FieldRef<"InventoryStockMovement", "String">;
}

// Custom InputTypes
/**
 * InventoryStockMovement findUnique
 */
export type InventoryStockMovementFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * Filter, which InventoryStockMovement to fetch.
   */
  where: Prisma.InventoryStockMovementWhereUniqueInput;
};

/**
 * InventoryStockMovement findUniqueOrThrow
 */
export type InventoryStockMovementFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * Filter, which InventoryStockMovement to fetch.
   */
  where: Prisma.InventoryStockMovementWhereUniqueInput;
};

/**
 * InventoryStockMovement findFirst
 */
export type InventoryStockMovementFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * Filter, which InventoryStockMovement to fetch.
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InventoryStockMovements to fetch.
   */
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for InventoryStockMovements.
   */
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InventoryStockMovements from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InventoryStockMovements.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of InventoryStockMovements.
   */
  distinct?:
    | Prisma.InventoryStockMovementScalarFieldEnum
    | Prisma.InventoryStockMovementScalarFieldEnum[];
};

/**
 * InventoryStockMovement findFirstOrThrow
 */
export type InventoryStockMovementFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * Filter, which InventoryStockMovement to fetch.
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InventoryStockMovements to fetch.
   */
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for InventoryStockMovements.
   */
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InventoryStockMovements from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InventoryStockMovements.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of InventoryStockMovements.
   */
  distinct?:
    | Prisma.InventoryStockMovementScalarFieldEnum
    | Prisma.InventoryStockMovementScalarFieldEnum[];
};

/**
 * InventoryStockMovement findMany
 */
export type InventoryStockMovementFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * Filter, which InventoryStockMovements to fetch.
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InventoryStockMovements to fetch.
   */
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing InventoryStockMovements.
   */
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InventoryStockMovements from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InventoryStockMovements.
   */
  skip?: number;
  distinct?:
    | Prisma.InventoryStockMovementScalarFieldEnum
    | Prisma.InventoryStockMovementScalarFieldEnum[];
};

/**
 * InventoryStockMovement create
 */
export type InventoryStockMovementCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * The data needed to create a InventoryStockMovement.
   */
  data: Prisma.XOR<
    Prisma.InventoryStockMovementCreateInput,
    Prisma.InventoryStockMovementUncheckedCreateInput
  >;
};

/**
 * InventoryStockMovement createMany
 */
export type InventoryStockMovementCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many InventoryStockMovements.
   */
  data:
    | Prisma.InventoryStockMovementCreateManyInput
    | Prisma.InventoryStockMovementCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * InventoryStockMovement createManyAndReturn
 */
export type InventoryStockMovementCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * The data used to create many InventoryStockMovements.
   */
  data:
    | Prisma.InventoryStockMovementCreateManyInput
    | Prisma.InventoryStockMovementCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * InventoryStockMovement update
 */
export type InventoryStockMovementUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * The data needed to update a InventoryStockMovement.
   */
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateInput,
    Prisma.InventoryStockMovementUncheckedUpdateInput
  >;
  /**
   * Choose, which InventoryStockMovement to update.
   */
  where: Prisma.InventoryStockMovementWhereUniqueInput;
};

/**
 * InventoryStockMovement updateMany
 */
export type InventoryStockMovementUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update InventoryStockMovements.
   */
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateManyMutationInput,
    Prisma.InventoryStockMovementUncheckedUpdateManyInput
  >;
  /**
   * Filter which InventoryStockMovements to update
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * Limit how many InventoryStockMovements to update.
   */
  limit?: number;
};

/**
 * InventoryStockMovement updateManyAndReturn
 */
export type InventoryStockMovementUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * The data used to update InventoryStockMovements.
   */
  data: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateManyMutationInput,
    Prisma.InventoryStockMovementUncheckedUpdateManyInput
  >;
  /**
   * Filter which InventoryStockMovements to update
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * Limit how many InventoryStockMovements to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * InventoryStockMovement upsert
 */
export type InventoryStockMovementUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * The filter to search for the InventoryStockMovement to update in case it exists.
   */
  where: Prisma.InventoryStockMovementWhereUniqueInput;
  /**
   * In case the InventoryStockMovement found by the `where` argument doesn't exist, create a new InventoryStockMovement with this data.
   */
  create: Prisma.XOR<
    Prisma.InventoryStockMovementCreateInput,
    Prisma.InventoryStockMovementUncheckedCreateInput
  >;
  /**
   * In case the InventoryStockMovement was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.InventoryStockMovementUpdateInput,
    Prisma.InventoryStockMovementUncheckedUpdateInput
  >;
};

/**
 * InventoryStockMovement delete
 */
export type InventoryStockMovementDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  /**
   * Filter which InventoryStockMovement to delete.
   */
  where: Prisma.InventoryStockMovementWhereUniqueInput;
};

/**
 * InventoryStockMovement deleteMany
 */
export type InventoryStockMovementDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which InventoryStockMovements to delete
   */
  where?: Prisma.InventoryStockMovementWhereInput;
  /**
   * Limit how many InventoryStockMovements to delete.
   */
  limit?: number;
};

/**
 * InventoryStockMovement without action
 */
export type InventoryStockMovementDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
};
