/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Staff` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Staff
 *
 */
export type StaffModel =
  runtime.Types.Result.DefaultSelection<Prisma.$StaffPayload>;

export type AggregateStaff = {
  _count: StaffCountAggregateOutputType | null;
  _min: StaffMinAggregateOutputType | null;
  _max: StaffMaxAggregateOutputType | null;
};

export type StaffMinAggregateOutputType = {
  id: string | null;
  prefix: string | null;
  firstName: string | null;
  lastName: string | null;
  isActive: boolean | null;
  jobTitle: string | null;
  employmentType: string | null;
  degreeId: string | null;
  dateOfHire: Date | null;
  bloodType: string | null;
  dateOfBirth: Date | null;
  sendAgendaFrequency: string | null;
  dateOfRelease: Date | null;
  isTeacher: boolean | null;
  gender: $Enums.Gender | null;
  phoneNumber1: string | null;
  phoneNumber2: string | null;
  address: string | null;
  observation: string | null;
  dateOfCriminalRecordCheck: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  userId: string | null;
  countryId: string | null;
  dateOfLastAdvancement: Date | null;
  schoolId: string | null;
};

export type StaffMaxAggregateOutputType = {
  id: string | null;
  prefix: string | null;
  firstName: string | null;
  lastName: string | null;
  isActive: boolean | null;
  jobTitle: string | null;
  employmentType: string | null;
  degreeId: string | null;
  dateOfHire: Date | null;
  bloodType: string | null;
  dateOfBirth: Date | null;
  sendAgendaFrequency: string | null;
  dateOfRelease: Date | null;
  isTeacher: boolean | null;
  gender: $Enums.Gender | null;
  phoneNumber1: string | null;
  phoneNumber2: string | null;
  address: string | null;
  observation: string | null;
  dateOfCriminalRecordCheck: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  userId: string | null;
  countryId: string | null;
  dateOfLastAdvancement: Date | null;
  schoolId: string | null;
};

export type StaffCountAggregateOutputType = {
  id: number;
  prefix: number;
  firstName: number;
  lastName: number;
  isActive: number;
  jobTitle: number;
  employmentType: number;
  degreeId: number;
  dateOfHire: number;
  bloodType: number;
  dateOfBirth: number;
  sendAgendaFrequency: number;
  dateOfRelease: number;
  isTeacher: number;
  gender: number;
  phoneNumber1: number;
  phoneNumber2: number;
  address: number;
  observation: number;
  dateOfCriminalRecordCheck: number;
  createdAt: number;
  updatedAt: number;
  userId: number;
  countryId: number;
  dateOfLastAdvancement: number;
  schoolId: number;
  _all: number;
};

export type StaffMinAggregateInputType = {
  id?: true;
  prefix?: true;
  firstName?: true;
  lastName?: true;
  isActive?: true;
  jobTitle?: true;
  employmentType?: true;
  degreeId?: true;
  dateOfHire?: true;
  bloodType?: true;
  dateOfBirth?: true;
  sendAgendaFrequency?: true;
  dateOfRelease?: true;
  isTeacher?: true;
  gender?: true;
  phoneNumber1?: true;
  phoneNumber2?: true;
  address?: true;
  observation?: true;
  dateOfCriminalRecordCheck?: true;
  createdAt?: true;
  updatedAt?: true;
  userId?: true;
  countryId?: true;
  dateOfLastAdvancement?: true;
  schoolId?: true;
};

export type StaffMaxAggregateInputType = {
  id?: true;
  prefix?: true;
  firstName?: true;
  lastName?: true;
  isActive?: true;
  jobTitle?: true;
  employmentType?: true;
  degreeId?: true;
  dateOfHire?: true;
  bloodType?: true;
  dateOfBirth?: true;
  sendAgendaFrequency?: true;
  dateOfRelease?: true;
  isTeacher?: true;
  gender?: true;
  phoneNumber1?: true;
  phoneNumber2?: true;
  address?: true;
  observation?: true;
  dateOfCriminalRecordCheck?: true;
  createdAt?: true;
  updatedAt?: true;
  userId?: true;
  countryId?: true;
  dateOfLastAdvancement?: true;
  schoolId?: true;
};

export type StaffCountAggregateInputType = {
  id?: true;
  prefix?: true;
  firstName?: true;
  lastName?: true;
  isActive?: true;
  jobTitle?: true;
  employmentType?: true;
  degreeId?: true;
  dateOfHire?: true;
  bloodType?: true;
  dateOfBirth?: true;
  sendAgendaFrequency?: true;
  dateOfRelease?: true;
  isTeacher?: true;
  gender?: true;
  phoneNumber1?: true;
  phoneNumber2?: true;
  address?: true;
  observation?: true;
  dateOfCriminalRecordCheck?: true;
  createdAt?: true;
  updatedAt?: true;
  userId?: true;
  countryId?: true;
  dateOfLastAdvancement?: true;
  schoolId?: true;
  _all?: true;
};

export type StaffAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Staff to aggregate.
   */
  where?: Prisma.StaffWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Staff to fetch.
   */
  orderBy?:
    | Prisma.StaffOrderByWithRelationInput
    | Prisma.StaffOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.StaffWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Staff.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Staff
   **/
  _count?: true | StaffCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: StaffMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: StaffMaxAggregateInputType;
};

export type GetStaffAggregateType<T extends StaffAggregateArgs> = {
  [P in keyof T & keyof AggregateStaff]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStaff[P]>
    : Prisma.GetScalarType<T[P], AggregateStaff[P]>;
};

export type StaffGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StaffWhereInput;
  orderBy?:
    | Prisma.StaffOrderByWithAggregationInput
    | Prisma.StaffOrderByWithAggregationInput[];
  by: Prisma.StaffScalarFieldEnum[] | Prisma.StaffScalarFieldEnum;
  having?: Prisma.StaffScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: StaffCountAggregateInputType | true;
  _min?: StaffMinAggregateInputType;
  _max?: StaffMaxAggregateInputType;
};

export type StaffGroupByOutputType = {
  id: string;
  prefix: string | null;
  firstName: string | null;
  lastName: string | null;
  isActive: boolean;
  jobTitle: string | null;
  employmentType: string | null;
  degreeId: string | null;
  dateOfHire: Date | null;
  bloodType: string | null;
  dateOfBirth: Date | null;
  sendAgendaFrequency: string | null;
  dateOfRelease: Date | null;
  isTeacher: boolean | null;
  gender: $Enums.Gender;
  phoneNumber1: string | null;
  phoneNumber2: string | null;
  address: string | null;
  observation: string | null;
  dateOfCriminalRecordCheck: Date | null;
  createdAt: Date | null;
  updatedAt: Date;
  userId: string | null;
  countryId: string | null;
  dateOfLastAdvancement: Date | null;
  schoolId: string;
  _count: StaffCountAggregateOutputType | null;
  _min: StaffMinAggregateOutputType | null;
  _max: StaffMaxAggregateOutputType | null;
};

type GetStaffGroupByPayload<T extends StaffGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StaffGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof StaffGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], StaffGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], StaffGroupByOutputType[P]>;
    }
  >
>;

export type StaffWhereInput = {
  AND?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[];
  OR?: Prisma.StaffWhereInput[];
  NOT?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[];
  id?: Prisma.StringFilter<"Staff"> | string;
  prefix?: Prisma.StringNullableFilter<"Staff"> | string | null;
  firstName?: Prisma.StringNullableFilter<"Staff"> | string | null;
  lastName?: Prisma.StringNullableFilter<"Staff"> | string | null;
  isActive?: Prisma.BoolFilter<"Staff"> | boolean;
  jobTitle?: Prisma.StringNullableFilter<"Staff"> | string | null;
  employmentType?: Prisma.StringNullableFilter<"Staff"> | string | null;
  degreeId?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfHire?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  bloodType?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfBirth?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  sendAgendaFrequency?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfRelease?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  isTeacher?: Prisma.BoolNullableFilter<"Staff"> | boolean | null;
  gender?: Prisma.EnumGenderFilter<"Staff"> | $Enums.Gender;
  phoneNumber1?: Prisma.StringNullableFilter<"Staff"> | string | null;
  phoneNumber2?: Prisma.StringNullableFilter<"Staff"> | string | null;
  address?: Prisma.StringNullableFilter<"Staff"> | string | null;
  observation?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.DateTimeNullableFilter<"Staff">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  updatedAt?: Prisma.DateTimeFilter<"Staff"> | Date | string;
  userId?: Prisma.StringNullableFilter<"Staff"> | string | null;
  countryId?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfLastAdvancement?:
    | Prisma.DateTimeNullableFilter<"Staff">
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFilter<"Staff"> | string;
  country?: Prisma.XOR<
    Prisma.CountryNullableScalarRelationFilter,
    Prisma.CountryWhereInput
  > | null;
  user?: Prisma.XOR<
    Prisma.UserNullableScalarRelationFilter,
    Prisma.UserWhereInput
  > | null;
  subjects?: Prisma.SubjectListRelationFilter;
  degree?: Prisma.XOR<
    Prisma.StaffDegreeNullableScalarRelationFilter,
    Prisma.StaffDegreeWhereInput
  > | null;
  classrooms?: Prisma.ClassroomListRelationFilter;
  classrooms2?: Prisma.ClassroomListRelationFilter;
  school?: Prisma.XOR<
    Prisma.SchoolScalarRelationFilter,
    Prisma.SchoolWhereInput
  >;
};

export type StaffOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  prefix?: Prisma.SortOrderInput | Prisma.SortOrder;
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  jobTitle?: Prisma.SortOrderInput | Prisma.SortOrder;
  employmentType?: Prisma.SortOrderInput | Prisma.SortOrder;
  degreeId?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfHire?: Prisma.SortOrderInput | Prisma.SortOrder;
  bloodType?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder;
  sendAgendaFrequency?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfRelease?: Prisma.SortOrderInput | Prisma.SortOrder;
  isTeacher?: Prisma.SortOrderInput | Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrderInput | Prisma.SortOrder;
  address?: Prisma.SortOrderInput | Prisma.SortOrder;
  observation?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfCriminalRecordCheck?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  countryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfLastAdvancement?: Prisma.SortOrderInput | Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  country?: Prisma.CountryOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
  subjects?: Prisma.SubjectOrderByRelationAggregateInput;
  degree?: Prisma.StaffDegreeOrderByWithRelationInput;
  classrooms?: Prisma.ClassroomOrderByRelationAggregateInput;
  classrooms2?: Prisma.ClassroomOrderByRelationAggregateInput;
  school?: Prisma.SchoolOrderByWithRelationInput;
};

export type StaffWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[];
    OR?: Prisma.StaffWhereInput[];
    NOT?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[];
    prefix?: Prisma.StringNullableFilter<"Staff"> | string | null;
    firstName?: Prisma.StringNullableFilter<"Staff"> | string | null;
    lastName?: Prisma.StringNullableFilter<"Staff"> | string | null;
    isActive?: Prisma.BoolFilter<"Staff"> | boolean;
    jobTitle?: Prisma.StringNullableFilter<"Staff"> | string | null;
    employmentType?: Prisma.StringNullableFilter<"Staff"> | string | null;
    degreeId?: Prisma.StringNullableFilter<"Staff"> | string | null;
    dateOfHire?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
    bloodType?: Prisma.StringNullableFilter<"Staff"> | string | null;
    dateOfBirth?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
    sendAgendaFrequency?: Prisma.StringNullableFilter<"Staff"> | string | null;
    dateOfRelease?:
      | Prisma.DateTimeNullableFilter<"Staff">
      | Date
      | string
      | null;
    isTeacher?: Prisma.BoolNullableFilter<"Staff"> | boolean | null;
    gender?: Prisma.EnumGenderFilter<"Staff"> | $Enums.Gender;
    phoneNumber1?: Prisma.StringNullableFilter<"Staff"> | string | null;
    phoneNumber2?: Prisma.StringNullableFilter<"Staff"> | string | null;
    address?: Prisma.StringNullableFilter<"Staff"> | string | null;
    observation?: Prisma.StringNullableFilter<"Staff"> | string | null;
    dateOfCriminalRecordCheck?:
      | Prisma.DateTimeNullableFilter<"Staff">
      | Date
      | string
      | null;
    createdAt?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
    updatedAt?: Prisma.DateTimeFilter<"Staff"> | Date | string;
    userId?: Prisma.StringNullableFilter<"Staff"> | string | null;
    countryId?: Prisma.StringNullableFilter<"Staff"> | string | null;
    dateOfLastAdvancement?:
      | Prisma.DateTimeNullableFilter<"Staff">
      | Date
      | string
      | null;
    schoolId?: Prisma.StringFilter<"Staff"> | string;
    country?: Prisma.XOR<
      Prisma.CountryNullableScalarRelationFilter,
      Prisma.CountryWhereInput
    > | null;
    user?: Prisma.XOR<
      Prisma.UserNullableScalarRelationFilter,
      Prisma.UserWhereInput
    > | null;
    subjects?: Prisma.SubjectListRelationFilter;
    degree?: Prisma.XOR<
      Prisma.StaffDegreeNullableScalarRelationFilter,
      Prisma.StaffDegreeWhereInput
    > | null;
    classrooms?: Prisma.ClassroomListRelationFilter;
    classrooms2?: Prisma.ClassroomListRelationFilter;
    school?: Prisma.XOR<
      Prisma.SchoolScalarRelationFilter,
      Prisma.SchoolWhereInput
    >;
  },
  "id"
>;

export type StaffOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  prefix?: Prisma.SortOrderInput | Prisma.SortOrder;
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  jobTitle?: Prisma.SortOrderInput | Prisma.SortOrder;
  employmentType?: Prisma.SortOrderInput | Prisma.SortOrder;
  degreeId?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfHire?: Prisma.SortOrderInput | Prisma.SortOrder;
  bloodType?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder;
  sendAgendaFrequency?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfRelease?: Prisma.SortOrderInput | Prisma.SortOrder;
  isTeacher?: Prisma.SortOrderInput | Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrderInput | Prisma.SortOrder;
  address?: Prisma.SortOrderInput | Prisma.SortOrder;
  observation?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfCriminalRecordCheck?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  countryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfLastAdvancement?: Prisma.SortOrderInput | Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  _count?: Prisma.StaffCountOrderByAggregateInput;
  _max?: Prisma.StaffMaxOrderByAggregateInput;
  _min?: Prisma.StaffMinOrderByAggregateInput;
};

export type StaffScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.StaffScalarWhereWithAggregatesInput
    | Prisma.StaffScalarWhereWithAggregatesInput[];
  OR?: Prisma.StaffScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.StaffScalarWhereWithAggregatesInput
    | Prisma.StaffScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"Staff"> | string;
  prefix?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null;
  firstName?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  lastName?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null;
  isActive?: Prisma.BoolWithAggregatesFilter<"Staff"> | boolean;
  jobTitle?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null;
  employmentType?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  degreeId?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null;
  dateOfHire?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Staff">
    | Date
    | string
    | null;
  bloodType?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  dateOfBirth?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Staff">
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  dateOfRelease?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Staff">
    | Date
    | string
    | null;
  isTeacher?: Prisma.BoolNullableWithAggregatesFilter<"Staff"> | boolean | null;
  gender?: Prisma.EnumGenderWithAggregatesFilter<"Staff"> | $Enums.Gender;
  phoneNumber1?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  phoneNumber2?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  address?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null;
  observation?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  dateOfCriminalRecordCheck?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Staff">
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Staff">
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Staff"> | Date | string;
  userId?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null;
  countryId?:
    | Prisma.StringNullableWithAggregatesFilter<"Staff">
    | string
    | null;
  dateOfLastAdvancement?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Staff">
    | Date
    | string
    | null;
  schoolId?: Prisma.StringWithAggregatesFilter<"Staff"> | string;
};

export type StaffCreateInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffCreateManyInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
};

export type StaffUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
};

export type StaffUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StaffNullableScalarRelationFilter = {
  is?: Prisma.StaffWhereInput | null;
  isNot?: Prisma.StaffWhereInput | null;
};

export type StaffListRelationFilter = {
  every?: Prisma.StaffWhereInput;
  some?: Prisma.StaffWhereInput;
  none?: Prisma.StaffWhereInput;
};

export type StaffOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type StaffCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  prefix?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  jobTitle?: Prisma.SortOrder;
  employmentType?: Prisma.SortOrder;
  degreeId?: Prisma.SortOrder;
  dateOfHire?: Prisma.SortOrder;
  bloodType?: Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrder;
  sendAgendaFrequency?: Prisma.SortOrder;
  dateOfRelease?: Prisma.SortOrder;
  isTeacher?: Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  dateOfCriminalRecordCheck?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  countryId?: Prisma.SortOrder;
  dateOfLastAdvancement?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type StaffMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  prefix?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  jobTitle?: Prisma.SortOrder;
  employmentType?: Prisma.SortOrder;
  degreeId?: Prisma.SortOrder;
  dateOfHire?: Prisma.SortOrder;
  bloodType?: Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrder;
  sendAgendaFrequency?: Prisma.SortOrder;
  dateOfRelease?: Prisma.SortOrder;
  isTeacher?: Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  dateOfCriminalRecordCheck?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  countryId?: Prisma.SortOrder;
  dateOfLastAdvancement?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type StaffMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  prefix?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  jobTitle?: Prisma.SortOrder;
  employmentType?: Prisma.SortOrder;
  degreeId?: Prisma.SortOrder;
  dateOfHire?: Prisma.SortOrder;
  bloodType?: Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrder;
  sendAgendaFrequency?: Prisma.SortOrder;
  dateOfRelease?: Prisma.SortOrder;
  isTeacher?: Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  dateOfCriminalRecordCheck?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  countryId?: Prisma.SortOrder;
  dateOfLastAdvancement?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type StaffCreateNestedOneWithoutClassroomsInput = {
  create?: Prisma.XOR<
    Prisma.StaffCreateWithoutClassroomsInput,
    Prisma.StaffUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassroomsInput;
  connect?: Prisma.StaffWhereUniqueInput;
};

export type StaffCreateNestedOneWithoutClassrooms2Input = {
  create?: Prisma.XOR<
    Prisma.StaffCreateWithoutClassrooms2Input,
    Prisma.StaffUncheckedCreateWithoutClassrooms2Input
  >;
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassrooms2Input;
  connect?: Prisma.StaffWhereUniqueInput;
};

export type StaffUpdateOneWithoutClassroomsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StaffCreateWithoutClassroomsInput,
    Prisma.StaffUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassroomsInput;
  upsert?: Prisma.StaffUpsertWithoutClassroomsInput;
  disconnect?: Prisma.StaffWhereInput | boolean;
  delete?: Prisma.StaffWhereInput | boolean;
  connect?: Prisma.StaffWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StaffUpdateToOneWithWhereWithoutClassroomsInput,
      Prisma.StaffUpdateWithoutClassroomsInput
    >,
    Prisma.StaffUncheckedUpdateWithoutClassroomsInput
  >;
};

export type StaffUpdateOneWithoutClassrooms2NestedInput = {
  create?: Prisma.XOR<
    Prisma.StaffCreateWithoutClassrooms2Input,
    Prisma.StaffUncheckedCreateWithoutClassrooms2Input
  >;
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassrooms2Input;
  upsert?: Prisma.StaffUpsertWithoutClassrooms2Input;
  disconnect?: Prisma.StaffWhereInput | boolean;
  delete?: Prisma.StaffWhereInput | boolean;
  connect?: Prisma.StaffWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StaffUpdateToOneWithWhereWithoutClassrooms2Input,
      Prisma.StaffUpdateWithoutClassrooms2Input
    >,
    Prisma.StaffUncheckedUpdateWithoutClassrooms2Input
  >;
};

export type StaffCreateNestedManyWithoutDegreeInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutDegreeInput,
        Prisma.StaffUncheckedCreateWithoutDegreeInput
      >
    | Prisma.StaffCreateWithoutDegreeInput[]
    | Prisma.StaffUncheckedCreateWithoutDegreeInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutDegreeInput
    | Prisma.StaffCreateOrConnectWithoutDegreeInput[];
  createMany?: Prisma.StaffCreateManyDegreeInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUncheckedCreateNestedManyWithoutDegreeInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutDegreeInput,
        Prisma.StaffUncheckedCreateWithoutDegreeInput
      >
    | Prisma.StaffCreateWithoutDegreeInput[]
    | Prisma.StaffUncheckedCreateWithoutDegreeInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutDegreeInput
    | Prisma.StaffCreateOrConnectWithoutDegreeInput[];
  createMany?: Prisma.StaffCreateManyDegreeInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUpdateManyWithoutDegreeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutDegreeInput,
        Prisma.StaffUncheckedCreateWithoutDegreeInput
      >
    | Prisma.StaffCreateWithoutDegreeInput[]
    | Prisma.StaffUncheckedCreateWithoutDegreeInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutDegreeInput
    | Prisma.StaffCreateOrConnectWithoutDegreeInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutDegreeInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutDegreeInput[];
  createMany?: Prisma.StaffCreateManyDegreeInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutDegreeInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutDegreeInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutDegreeInput
    | Prisma.StaffUpdateManyWithWhereWithoutDegreeInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffUncheckedUpdateManyWithoutDegreeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutDegreeInput,
        Prisma.StaffUncheckedCreateWithoutDegreeInput
      >
    | Prisma.StaffCreateWithoutDegreeInput[]
    | Prisma.StaffUncheckedCreateWithoutDegreeInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutDegreeInput
    | Prisma.StaffCreateOrConnectWithoutDegreeInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutDegreeInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutDegreeInput[];
  createMany?: Prisma.StaffCreateManyDegreeInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutDegreeInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutDegreeInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutDegreeInput
    | Prisma.StaffUpdateManyWithWhereWithoutDegreeInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type EnumGenderFieldUpdateOperationsInput = {
  set?: $Enums.Gender;
};

export type StaffCreateNestedManyWithoutCountryInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutCountryInput,
        Prisma.StaffUncheckedCreateWithoutCountryInput
      >
    | Prisma.StaffCreateWithoutCountryInput[]
    | Prisma.StaffUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutCountryInput
    | Prisma.StaffCreateOrConnectWithoutCountryInput[];
  createMany?: Prisma.StaffCreateManyCountryInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUncheckedCreateNestedManyWithoutCountryInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutCountryInput,
        Prisma.StaffUncheckedCreateWithoutCountryInput
      >
    | Prisma.StaffCreateWithoutCountryInput[]
    | Prisma.StaffUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutCountryInput
    | Prisma.StaffCreateOrConnectWithoutCountryInput[];
  createMany?: Prisma.StaffCreateManyCountryInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUpdateManyWithoutCountryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutCountryInput,
        Prisma.StaffUncheckedCreateWithoutCountryInput
      >
    | Prisma.StaffCreateWithoutCountryInput[]
    | Prisma.StaffUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutCountryInput
    | Prisma.StaffCreateOrConnectWithoutCountryInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutCountryInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutCountryInput[];
  createMany?: Prisma.StaffCreateManyCountryInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutCountryInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutCountryInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutCountryInput
    | Prisma.StaffUpdateManyWithWhereWithoutCountryInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffUncheckedUpdateManyWithoutCountryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutCountryInput,
        Prisma.StaffUncheckedCreateWithoutCountryInput
      >
    | Prisma.StaffCreateWithoutCountryInput[]
    | Prisma.StaffUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutCountryInput
    | Prisma.StaffCreateOrConnectWithoutCountryInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutCountryInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutCountryInput[];
  createMany?: Prisma.StaffCreateManyCountryInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutCountryInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutCountryInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutCountryInput
    | Prisma.StaffUpdateManyWithWhereWithoutCountryInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutSchoolInput,
        Prisma.StaffUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StaffCreateWithoutSchoolInput[]
    | Prisma.StaffUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutSchoolInput
    | Prisma.StaffCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUncheckedCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutSchoolInput,
        Prisma.StaffUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StaffCreateWithoutSchoolInput[]
    | Prisma.StaffUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutSchoolInput
    | Prisma.StaffCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutSchoolInput,
        Prisma.StaffUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StaffCreateWithoutSchoolInput[]
    | Prisma.StaffUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutSchoolInput
    | Prisma.StaffCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutSchoolInput
    | Prisma.StaffUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutSchoolInput,
        Prisma.StaffUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StaffCreateWithoutSchoolInput[]
    | Prisma.StaffUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutSchoolInput
    | Prisma.StaffCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutSchoolInput
    | Prisma.StaffUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffCreateNestedOneWithoutSubjectsInput = {
  create?: Prisma.XOR<
    Prisma.StaffCreateWithoutSubjectsInput,
    Prisma.StaffUncheckedCreateWithoutSubjectsInput
  >;
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSubjectsInput;
  connect?: Prisma.StaffWhereUniqueInput;
};

export type StaffUpdateOneWithoutSubjectsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StaffCreateWithoutSubjectsInput,
    Prisma.StaffUncheckedCreateWithoutSubjectsInput
  >;
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSubjectsInput;
  upsert?: Prisma.StaffUpsertWithoutSubjectsInput;
  disconnect?: Prisma.StaffWhereInput | boolean;
  delete?: Prisma.StaffWhereInput | boolean;
  connect?: Prisma.StaffWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StaffUpdateToOneWithWhereWithoutSubjectsInput,
      Prisma.StaffUpdateWithoutSubjectsInput
    >,
    Prisma.StaffUncheckedUpdateWithoutSubjectsInput
  >;
};

export type StaffCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutUserInput,
        Prisma.StaffUncheckedCreateWithoutUserInput
      >
    | Prisma.StaffCreateWithoutUserInput[]
    | Prisma.StaffUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutUserInput
    | Prisma.StaffCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.StaffCreateManyUserInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutUserInput,
        Prisma.StaffUncheckedCreateWithoutUserInput
      >
    | Prisma.StaffCreateWithoutUserInput[]
    | Prisma.StaffUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutUserInput
    | Prisma.StaffCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.StaffCreateManyUserInputEnvelope;
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
};

export type StaffUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutUserInput,
        Prisma.StaffUncheckedCreateWithoutUserInput
      >
    | Prisma.StaffCreateWithoutUserInput[]
    | Prisma.StaffUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutUserInput
    | Prisma.StaffCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutUserInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.StaffCreateManyUserInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutUserInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutUserInput
    | Prisma.StaffUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StaffCreateWithoutUserInput,
        Prisma.StaffUncheckedCreateWithoutUserInput
      >
    | Prisma.StaffCreateWithoutUserInput[]
    | Prisma.StaffUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StaffCreateOrConnectWithoutUserInput
    | Prisma.StaffCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.StaffUpsertWithWhereUniqueWithoutUserInput
    | Prisma.StaffUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.StaffCreateManyUserInputEnvelope;
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[];
  update?:
    | Prisma.StaffUpdateWithWhereUniqueWithoutUserInput
    | Prisma.StaffUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.StaffUpdateManyWithWhereWithoutUserInput
    | Prisma.StaffUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
};

export type StaffCreateWithoutClassroomsInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateWithoutClassroomsInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffCreateOrConnectWithoutClassroomsInput = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutClassroomsInput,
    Prisma.StaffUncheckedCreateWithoutClassroomsInput
  >;
};

export type StaffCreateWithoutClassrooms2Input = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateWithoutClassrooms2Input = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
};

export type StaffCreateOrConnectWithoutClassrooms2Input = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutClassrooms2Input,
    Prisma.StaffUncheckedCreateWithoutClassrooms2Input
  >;
};

export type StaffUpsertWithoutClassroomsInput = {
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutClassroomsInput,
    Prisma.StaffUncheckedUpdateWithoutClassroomsInput
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutClassroomsInput,
    Prisma.StaffUncheckedCreateWithoutClassroomsInput
  >;
  where?: Prisma.StaffWhereInput;
};

export type StaffUpdateToOneWithWhereWithoutClassroomsInput = {
  where?: Prisma.StaffWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutClassroomsInput,
    Prisma.StaffUncheckedUpdateWithoutClassroomsInput
  >;
};

export type StaffUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffUpsertWithoutClassrooms2Input = {
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutClassrooms2Input,
    Prisma.StaffUncheckedUpdateWithoutClassrooms2Input
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutClassrooms2Input,
    Prisma.StaffUncheckedCreateWithoutClassrooms2Input
  >;
  where?: Prisma.StaffWhereInput;
};

export type StaffUpdateToOneWithWhereWithoutClassrooms2Input = {
  where?: Prisma.StaffWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutClassrooms2Input,
    Prisma.StaffUncheckedUpdateWithoutClassrooms2Input
  >;
};

export type StaffUpdateWithoutClassrooms2Input = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateWithoutClassrooms2Input = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
};

export type StaffCreateWithoutDegreeInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateWithoutDegreeInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffCreateOrConnectWithoutDegreeInput = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutDegreeInput,
    Prisma.StaffUncheckedCreateWithoutDegreeInput
  >;
};

export type StaffCreateManyDegreeInputEnvelope = {
  data: Prisma.StaffCreateManyDegreeInput | Prisma.StaffCreateManyDegreeInput[];
  skipDuplicates?: boolean;
};

export type StaffUpsertWithWhereUniqueWithoutDegreeInput = {
  where: Prisma.StaffWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutDegreeInput,
    Prisma.StaffUncheckedUpdateWithoutDegreeInput
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutDegreeInput,
    Prisma.StaffUncheckedCreateWithoutDegreeInput
  >;
};

export type StaffUpdateWithWhereUniqueWithoutDegreeInput = {
  where: Prisma.StaffWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutDegreeInput,
    Prisma.StaffUncheckedUpdateWithoutDegreeInput
  >;
};

export type StaffUpdateManyWithWhereWithoutDegreeInput = {
  where: Prisma.StaffScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateManyMutationInput,
    Prisma.StaffUncheckedUpdateManyWithoutDegreeInput
  >;
};

export type StaffScalarWhereInput = {
  AND?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
  OR?: Prisma.StaffScalarWhereInput[];
  NOT?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[];
  id?: Prisma.StringFilter<"Staff"> | string;
  prefix?: Prisma.StringNullableFilter<"Staff"> | string | null;
  firstName?: Prisma.StringNullableFilter<"Staff"> | string | null;
  lastName?: Prisma.StringNullableFilter<"Staff"> | string | null;
  isActive?: Prisma.BoolFilter<"Staff"> | boolean;
  jobTitle?: Prisma.StringNullableFilter<"Staff"> | string | null;
  employmentType?: Prisma.StringNullableFilter<"Staff"> | string | null;
  degreeId?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfHire?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  bloodType?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfBirth?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  sendAgendaFrequency?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfRelease?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  isTeacher?: Prisma.BoolNullableFilter<"Staff"> | boolean | null;
  gender?: Prisma.EnumGenderFilter<"Staff"> | $Enums.Gender;
  phoneNumber1?: Prisma.StringNullableFilter<"Staff"> | string | null;
  phoneNumber2?: Prisma.StringNullableFilter<"Staff"> | string | null;
  address?: Prisma.StringNullableFilter<"Staff"> | string | null;
  observation?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.DateTimeNullableFilter<"Staff">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null;
  updatedAt?: Prisma.DateTimeFilter<"Staff"> | Date | string;
  userId?: Prisma.StringNullableFilter<"Staff"> | string | null;
  countryId?: Prisma.StringNullableFilter<"Staff"> | string | null;
  dateOfLastAdvancement?:
    | Prisma.DateTimeNullableFilter<"Staff">
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFilter<"Staff"> | string;
};

export type StaffCreateWithoutCountryInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateWithoutCountryInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffCreateOrConnectWithoutCountryInput = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutCountryInput,
    Prisma.StaffUncheckedCreateWithoutCountryInput
  >;
};

export type StaffCreateManyCountryInputEnvelope = {
  data:
    | Prisma.StaffCreateManyCountryInput
    | Prisma.StaffCreateManyCountryInput[];
  skipDuplicates?: boolean;
};

export type StaffUpsertWithWhereUniqueWithoutCountryInput = {
  where: Prisma.StaffWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutCountryInput,
    Prisma.StaffUncheckedUpdateWithoutCountryInput
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutCountryInput,
    Prisma.StaffUncheckedCreateWithoutCountryInput
  >;
};

export type StaffUpdateWithWhereUniqueWithoutCountryInput = {
  where: Prisma.StaffWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutCountryInput,
    Prisma.StaffUncheckedUpdateWithoutCountryInput
  >;
};

export type StaffUpdateManyWithWhereWithoutCountryInput = {
  where: Prisma.StaffScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateManyMutationInput,
    Prisma.StaffUncheckedUpdateManyWithoutCountryInput
  >;
};

export type StaffCreateWithoutSchoolInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffUncheckedCreateWithoutSchoolInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffCreateOrConnectWithoutSchoolInput = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutSchoolInput,
    Prisma.StaffUncheckedCreateWithoutSchoolInput
  >;
};

export type StaffCreateManySchoolInputEnvelope = {
  data: Prisma.StaffCreateManySchoolInput | Prisma.StaffCreateManySchoolInput[];
  skipDuplicates?: boolean;
};

export type StaffUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StaffWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutSchoolInput,
    Prisma.StaffUncheckedUpdateWithoutSchoolInput
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutSchoolInput,
    Prisma.StaffUncheckedCreateWithoutSchoolInput
  >;
};

export type StaffUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StaffWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutSchoolInput,
    Prisma.StaffUncheckedUpdateWithoutSchoolInput
  >;
};

export type StaffUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.StaffScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateManyMutationInput,
    Prisma.StaffUncheckedUpdateManyWithoutSchoolInput
  >;
};

export type StaffCreateWithoutSubjectsInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  user?: Prisma.UserCreateNestedOneWithoutStaffsInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateWithoutSubjectsInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffCreateOrConnectWithoutSubjectsInput = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutSubjectsInput,
    Prisma.StaffUncheckedCreateWithoutSubjectsInput
  >;
};

export type StaffUpsertWithoutSubjectsInput = {
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutSubjectsInput,
    Prisma.StaffUncheckedUpdateWithoutSubjectsInput
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutSubjectsInput,
    Prisma.StaffUncheckedCreateWithoutSubjectsInput
  >;
  where?: Prisma.StaffWhereInput;
};

export type StaffUpdateToOneWithWhereWithoutSubjectsInput = {
  where?: Prisma.StaffWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutSubjectsInput,
    Prisma.StaffUncheckedUpdateWithoutSubjectsInput
  >;
};

export type StaffUpdateWithoutSubjectsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateWithoutSubjectsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffCreateWithoutUserInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  dateOfLastAdvancement?: Date | string | null;
  country?: Prisma.CountryCreateNestedOneWithoutStaffInput;
  subjects?: Prisma.SubjectCreateNestedManyWithoutTeacherInput;
  degree?: Prisma.StaffDegreeCreateNestedOneWithoutStaffInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomCreateNestedManyWithoutHeadTeacherInput;
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput;
};

export type StaffUncheckedCreateWithoutUserInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
  subjects?: Prisma.SubjectUncheckedCreateNestedManyWithoutTeacherInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSeniorAdvisorInput;
  classrooms2?: Prisma.ClassroomUncheckedCreateNestedManyWithoutHeadTeacherInput;
};

export type StaffCreateOrConnectWithoutUserInput = {
  where: Prisma.StaffWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutUserInput,
    Prisma.StaffUncheckedCreateWithoutUserInput
  >;
};

export type StaffCreateManyUserInputEnvelope = {
  data: Prisma.StaffCreateManyUserInput | Prisma.StaffCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type StaffUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.StaffWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StaffUpdateWithoutUserInput,
    Prisma.StaffUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.StaffCreateWithoutUserInput,
    Prisma.StaffUncheckedCreateWithoutUserInput
  >;
};

export type StaffUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.StaffWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateWithoutUserInput,
    Prisma.StaffUncheckedUpdateWithoutUserInput
  >;
};

export type StaffUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.StaffScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StaffUpdateManyMutationInput,
    Prisma.StaffUncheckedUpdateManyWithoutUserInput
  >;
};

export type StaffCreateManyDegreeInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
};

export type StaffUpdateWithoutDegreeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateWithoutDegreeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffUncheckedUpdateManyWithoutDegreeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StaffCreateManyCountryInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
};

export type StaffUpdateWithoutCountryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateWithoutCountryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffUncheckedUpdateManyWithoutCountryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StaffCreateManySchoolInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  userId?: string | null;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
};

export type StaffUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  user?: Prisma.UserUpdateOneWithoutStaffsNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
};

export type StaffCreateManyUserInput = {
  id?: string;
  prefix?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  isActive?: boolean;
  jobTitle?: string | null;
  employmentType?: string | null;
  degreeId?: string | null;
  dateOfHire?: Date | string | null;
  bloodType?: string | null;
  dateOfBirth?: Date | string | null;
  sendAgendaFrequency?: string | null;
  dateOfRelease?: Date | string | null;
  isTeacher?: boolean | null;
  gender?: $Enums.Gender;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  address?: string | null;
  observation?: string | null;
  dateOfCriminalRecordCheck?: Date | string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  countryId?: string | null;
  dateOfLastAdvancement?: Date | string | null;
  schoolId: string;
};

export type StaffUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  country?: Prisma.CountryUpdateOneWithoutStaffNestedInput;
  subjects?: Prisma.SubjectUpdateManyWithoutTeacherNestedInput;
  degree?: Prisma.StaffDegreeUpdateOneWithoutStaffNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUpdateManyWithoutHeadTeacherNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput;
};

export type StaffUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  subjects?: Prisma.SubjectUncheckedUpdateManyWithoutTeacherNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSeniorAdvisorNestedInput;
  classrooms2?: Prisma.ClassroomUncheckedUpdateManyWithoutHeadTeacherNestedInput;
};

export type StaffUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  prefix?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  jobTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  employmentType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  degreeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfHire?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  sendAgendaFrequency?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  dateOfRelease?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  isTeacher?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfCriminalRecordCheck?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfLastAdvancement?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

/**
 * Count Type StaffCountOutputType
 */

export type StaffCountOutputType = {
  subjects: number;
  classrooms: number;
  classrooms2: number;
};

export type StaffCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  subjects?: boolean | StaffCountOutputTypeCountSubjectsArgs;
  classrooms?: boolean | StaffCountOutputTypeCountClassroomsArgs;
  classrooms2?: boolean | StaffCountOutputTypeCountClassrooms2Args;
};

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StaffCountOutputType
   */
  select?: Prisma.StaffCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountSubjectsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SubjectWhereInput;
};

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountClassroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountClassrooms2Args<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

export type StaffSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    prefix?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    isActive?: boolean;
    jobTitle?: boolean;
    employmentType?: boolean;
    degreeId?: boolean;
    dateOfHire?: boolean;
    bloodType?: boolean;
    dateOfBirth?: boolean;
    sendAgendaFrequency?: boolean;
    dateOfRelease?: boolean;
    isTeacher?: boolean;
    gender?: boolean;
    phoneNumber1?: boolean;
    phoneNumber2?: boolean;
    address?: boolean;
    observation?: boolean;
    dateOfCriminalRecordCheck?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    userId?: boolean;
    countryId?: boolean;
    dateOfLastAdvancement?: boolean;
    schoolId?: boolean;
    country?: boolean | Prisma.Staff$countryArgs<ExtArgs>;
    user?: boolean | Prisma.Staff$userArgs<ExtArgs>;
    subjects?: boolean | Prisma.Staff$subjectsArgs<ExtArgs>;
    degree?: boolean | Prisma.Staff$degreeArgs<ExtArgs>;
    classrooms?: boolean | Prisma.Staff$classroomsArgs<ExtArgs>;
    classrooms2?: boolean | Prisma.Staff$classrooms2Args<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
    _count?: boolean | Prisma.StaffCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["staff"]
>;

export type StaffSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    prefix?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    isActive?: boolean;
    jobTitle?: boolean;
    employmentType?: boolean;
    degreeId?: boolean;
    dateOfHire?: boolean;
    bloodType?: boolean;
    dateOfBirth?: boolean;
    sendAgendaFrequency?: boolean;
    dateOfRelease?: boolean;
    isTeacher?: boolean;
    gender?: boolean;
    phoneNumber1?: boolean;
    phoneNumber2?: boolean;
    address?: boolean;
    observation?: boolean;
    dateOfCriminalRecordCheck?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    userId?: boolean;
    countryId?: boolean;
    dateOfLastAdvancement?: boolean;
    schoolId?: boolean;
    country?: boolean | Prisma.Staff$countryArgs<ExtArgs>;
    user?: boolean | Prisma.Staff$userArgs<ExtArgs>;
    degree?: boolean | Prisma.Staff$degreeArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["staff"]
>;

export type StaffSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    prefix?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    isActive?: boolean;
    jobTitle?: boolean;
    employmentType?: boolean;
    degreeId?: boolean;
    dateOfHire?: boolean;
    bloodType?: boolean;
    dateOfBirth?: boolean;
    sendAgendaFrequency?: boolean;
    dateOfRelease?: boolean;
    isTeacher?: boolean;
    gender?: boolean;
    phoneNumber1?: boolean;
    phoneNumber2?: boolean;
    address?: boolean;
    observation?: boolean;
    dateOfCriminalRecordCheck?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    userId?: boolean;
    countryId?: boolean;
    dateOfLastAdvancement?: boolean;
    schoolId?: boolean;
    country?: boolean | Prisma.Staff$countryArgs<ExtArgs>;
    user?: boolean | Prisma.Staff$userArgs<ExtArgs>;
    degree?: boolean | Prisma.Staff$degreeArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["staff"]
>;

export type StaffSelectScalar = {
  id?: boolean;
  prefix?: boolean;
  firstName?: boolean;
  lastName?: boolean;
  isActive?: boolean;
  jobTitle?: boolean;
  employmentType?: boolean;
  degreeId?: boolean;
  dateOfHire?: boolean;
  bloodType?: boolean;
  dateOfBirth?: boolean;
  sendAgendaFrequency?: boolean;
  dateOfRelease?: boolean;
  isTeacher?: boolean;
  gender?: boolean;
  phoneNumber1?: boolean;
  phoneNumber2?: boolean;
  address?: boolean;
  observation?: boolean;
  dateOfCriminalRecordCheck?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  userId?: boolean;
  countryId?: boolean;
  dateOfLastAdvancement?: boolean;
  schoolId?: boolean;
};

export type StaffOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "prefix"
  | "firstName"
  | "lastName"
  | "isActive"
  | "jobTitle"
  | "employmentType"
  | "degreeId"
  | "dateOfHire"
  | "bloodType"
  | "dateOfBirth"
  | "sendAgendaFrequency"
  | "dateOfRelease"
  | "isTeacher"
  | "gender"
  | "phoneNumber1"
  | "phoneNumber2"
  | "address"
  | "observation"
  | "dateOfCriminalRecordCheck"
  | "createdAt"
  | "updatedAt"
  | "userId"
  | "countryId"
  | "dateOfLastAdvancement"
  | "schoolId",
  ExtArgs["result"]["staff"]
>;
export type StaffInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  country?: boolean | Prisma.Staff$countryArgs<ExtArgs>;
  user?: boolean | Prisma.Staff$userArgs<ExtArgs>;
  subjects?: boolean | Prisma.Staff$subjectsArgs<ExtArgs>;
  degree?: boolean | Prisma.Staff$degreeArgs<ExtArgs>;
  classrooms?: boolean | Prisma.Staff$classroomsArgs<ExtArgs>;
  classrooms2?: boolean | Prisma.Staff$classrooms2Args<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  _count?: boolean | Prisma.StaffCountOutputTypeDefaultArgs<ExtArgs>;
};
export type StaffIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  country?: boolean | Prisma.Staff$countryArgs<ExtArgs>;
  user?: boolean | Prisma.Staff$userArgs<ExtArgs>;
  degree?: boolean | Prisma.Staff$degreeArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};
export type StaffIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  country?: boolean | Prisma.Staff$countryArgs<ExtArgs>;
  user?: boolean | Prisma.Staff$userArgs<ExtArgs>;
  degree?: boolean | Prisma.Staff$degreeArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};

export type $StaffPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "Staff";
  objects: {
    country: Prisma.$CountryPayload<ExtArgs> | null;
    user: Prisma.$UserPayload<ExtArgs> | null;
    subjects: Prisma.$SubjectPayload<ExtArgs>[];
    degree: Prisma.$StaffDegreePayload<ExtArgs> | null;
    classrooms: Prisma.$ClassroomPayload<ExtArgs>[];
    classrooms2: Prisma.$ClassroomPayload<ExtArgs>[];
    school: Prisma.$SchoolPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      prefix: string | null;
      firstName: string | null;
      lastName: string | null;
      isActive: boolean;
      jobTitle: string | null;
      employmentType: string | null;
      degreeId: string | null;
      dateOfHire: Date | null;
      bloodType: string | null;
      dateOfBirth: Date | null;
      sendAgendaFrequency: string | null;
      dateOfRelease: Date | null;
      isTeacher: boolean | null;
      gender: $Enums.Gender;
      phoneNumber1: string | null;
      phoneNumber2: string | null;
      address: string | null;
      observation: string | null;
      dateOfCriminalRecordCheck: Date | null;
      createdAt: Date | null;
      updatedAt: Date;
      userId: string | null;
      countryId: string | null;
      dateOfLastAdvancement: Date | null;
      schoolId: string;
    },
    ExtArgs["result"]["staff"]
  >;
  composites: {};
};

export type StaffGetPayload<
  S extends boolean | null | undefined | StaffDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$StaffPayload, S>;

export type StaffCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<StaffFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: StaffCountAggregateInputType | true;
};

export interface StaffDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["Staff"];
    meta: { name: "Staff" };
  };
  /**
   * Find zero or one Staff that matches the filter.
   * @param {StaffFindUniqueArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StaffFindUniqueArgs>(
    args: Prisma.SelectSubset<T, StaffFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Staff that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StaffFindUniqueOrThrowArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StaffFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, StaffFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Staff that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffFindFirstArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StaffFindFirstArgs>(
    args?: Prisma.SelectSubset<T, StaffFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Staff that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffFindFirstOrThrowArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StaffFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, StaffFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Staff that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Staff
   * const staff = await prisma.staff.findMany()
   *
   * // Get first 10 Staff
   * const staff = await prisma.staff.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const staffWithIdOnly = await prisma.staff.findMany({ select: { id: true } })
   *
   */
  findMany<T extends StaffFindManyArgs>(
    args?: Prisma.SelectSubset<T, StaffFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a Staff.
   * @param {StaffCreateArgs} args - Arguments to create a Staff.
   * @example
   * // Create one Staff
   * const Staff = await prisma.staff.create({
   *   data: {
   *     // ... data to create a Staff
   *   }
   * })
   *
   */
  create<T extends StaffCreateArgs>(
    args: Prisma.SelectSubset<T, StaffCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Staff.
   * @param {StaffCreateManyArgs} args - Arguments to create many Staff.
   * @example
   * // Create many Staff
   * const staff = await prisma.staff.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends StaffCreateManyArgs>(
    args?: Prisma.SelectSubset<T, StaffCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Staff and returns the data saved in the database.
   * @param {StaffCreateManyAndReturnArgs} args - Arguments to create many Staff.
   * @example
   * // Create many Staff
   * const staff = await prisma.staff.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Staff and only return the `id`
   * const staffWithIdOnly = await prisma.staff.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends StaffCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, StaffCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Staff.
   * @param {StaffDeleteArgs} args - Arguments to delete one Staff.
   * @example
   * // Delete one Staff
   * const Staff = await prisma.staff.delete({
   *   where: {
   *     // ... filter to delete one Staff
   *   }
   * })
   *
   */
  delete<T extends StaffDeleteArgs>(
    args: Prisma.SelectSubset<T, StaffDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Staff.
   * @param {StaffUpdateArgs} args - Arguments to update one Staff.
   * @example
   * // Update one Staff
   * const staff = await prisma.staff.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends StaffUpdateArgs>(
    args: Prisma.SelectSubset<T, StaffUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Staff.
   * @param {StaffDeleteManyArgs} args - Arguments to filter Staff to delete.
   * @example
   * // Delete a few Staff
   * const { count } = await prisma.staff.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends StaffDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, StaffDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Staff
   * const staff = await prisma.staff.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends StaffUpdateManyArgs>(
    args: Prisma.SelectSubset<T, StaffUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Staff and returns the data updated in the database.
   * @param {StaffUpdateManyAndReturnArgs} args - Arguments to update many Staff.
   * @example
   * // Update many Staff
   * const staff = await prisma.staff.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Staff and only return the `id`
   * const staffWithIdOnly = await prisma.staff.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends StaffUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, StaffUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Staff.
   * @param {StaffUpsertArgs} args - Arguments to update or create a Staff.
   * @example
   * // Update or create a Staff
   * const staff = await prisma.staff.upsert({
   *   create: {
   *     // ... data to create a Staff
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Staff we want to update
   *   }
   * })
   */
  upsert<T extends StaffUpsertArgs>(
    args: Prisma.SelectSubset<T, StaffUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffCountArgs} args - Arguments to filter Staff to count.
   * @example
   * // Count the number of Staff
   * const count = await prisma.staff.count({
   *   where: {
   *     // ... the filter for the Staff we want to count
   *   }
   * })
   **/
  count<T extends StaffCountArgs>(
    args?: Prisma.Subset<T, StaffCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], StaffCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends StaffAggregateArgs>(
    args: Prisma.Subset<T, StaffAggregateArgs>,
  ): Prisma.PrismaPromise<GetStaffAggregateType<T>>;

  /**
   * Group by Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends StaffGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StaffGroupByArgs["orderBy"] }
      : { orderBy?: StaffGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, StaffGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetStaffGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Staff model
   */
  readonly fields: StaffFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Staff.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StaffClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  country<T extends Prisma.Staff$countryArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Staff$countryArgs<ExtArgs>>,
  ): Prisma.Prisma__CountryClient<
    runtime.Types.Result.GetResult<
      Prisma.$CountryPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.Staff$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Staff$userArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  subjects<T extends Prisma.Staff$subjectsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Staff$subjectsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SubjectPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  degree<T extends Prisma.Staff$degreeArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Staff$degreeArgs<ExtArgs>>,
  ): Prisma.Prisma__StaffDegreeClient<
    runtime.Types.Result.GetResult<
      Prisma.$StaffDegreePayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  classrooms<T extends Prisma.Staff$classroomsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Staff$classroomsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  classrooms2<T extends Prisma.Staff$classrooms2Args<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Staff$classrooms2Args<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Staff model
 */
export interface StaffFieldRefs {
  readonly id: Prisma.FieldRef<"Staff", "String">;
  readonly prefix: Prisma.FieldRef<"Staff", "String">;
  readonly firstName: Prisma.FieldRef<"Staff", "String">;
  readonly lastName: Prisma.FieldRef<"Staff", "String">;
  readonly isActive: Prisma.FieldRef<"Staff", "Boolean">;
  readonly jobTitle: Prisma.FieldRef<"Staff", "String">;
  readonly employmentType: Prisma.FieldRef<"Staff", "String">;
  readonly degreeId: Prisma.FieldRef<"Staff", "String">;
  readonly dateOfHire: Prisma.FieldRef<"Staff", "DateTime">;
  readonly bloodType: Prisma.FieldRef<"Staff", "String">;
  readonly dateOfBirth: Prisma.FieldRef<"Staff", "DateTime">;
  readonly sendAgendaFrequency: Prisma.FieldRef<"Staff", "String">;
  readonly dateOfRelease: Prisma.FieldRef<"Staff", "DateTime">;
  readonly isTeacher: Prisma.FieldRef<"Staff", "Boolean">;
  readonly gender: Prisma.FieldRef<"Staff", "Gender">;
  readonly phoneNumber1: Prisma.FieldRef<"Staff", "String">;
  readonly phoneNumber2: Prisma.FieldRef<"Staff", "String">;
  readonly address: Prisma.FieldRef<"Staff", "String">;
  readonly observation: Prisma.FieldRef<"Staff", "String">;
  readonly dateOfCriminalRecordCheck: Prisma.FieldRef<"Staff", "DateTime">;
  readonly createdAt: Prisma.FieldRef<"Staff", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"Staff", "DateTime">;
  readonly userId: Prisma.FieldRef<"Staff", "String">;
  readonly countryId: Prisma.FieldRef<"Staff", "String">;
  readonly dateOfLastAdvancement: Prisma.FieldRef<"Staff", "DateTime">;
  readonly schoolId: Prisma.FieldRef<"Staff", "String">;
}

// Custom InputTypes
/**
 * Staff findUnique
 */
export type StaffFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * Filter, which Staff to fetch.
   */
  where: Prisma.StaffWhereUniqueInput;
};

/**
 * Staff findUniqueOrThrow
 */
export type StaffFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * Filter, which Staff to fetch.
   */
  where: Prisma.StaffWhereUniqueInput;
};

/**
 * Staff findFirst
 */
export type StaffFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * Filter, which Staff to fetch.
   */
  where?: Prisma.StaffWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Staff to fetch.
   */
  orderBy?:
    | Prisma.StaffOrderByWithRelationInput
    | Prisma.StaffOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Staff.
   */
  cursor?: Prisma.StaffWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Staff.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Staff.
   */
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[];
};

/**
 * Staff findFirstOrThrow
 */
export type StaffFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * Filter, which Staff to fetch.
   */
  where?: Prisma.StaffWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Staff to fetch.
   */
  orderBy?:
    | Prisma.StaffOrderByWithRelationInput
    | Prisma.StaffOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Staff.
   */
  cursor?: Prisma.StaffWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Staff.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Staff.
   */
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[];
};

/**
 * Staff findMany
 */
export type StaffFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * Filter, which Staff to fetch.
   */
  where?: Prisma.StaffWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Staff to fetch.
   */
  orderBy?:
    | Prisma.StaffOrderByWithRelationInput
    | Prisma.StaffOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Staff.
   */
  cursor?: Prisma.StaffWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Staff.
   */
  skip?: number;
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[];
};

/**
 * Staff create
 */
export type StaffCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * The data needed to create a Staff.
   */
  data: Prisma.XOR<Prisma.StaffCreateInput, Prisma.StaffUncheckedCreateInput>;
};

/**
 * Staff createMany
 */
export type StaffCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Staff.
   */
  data: Prisma.StaffCreateManyInput | Prisma.StaffCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Staff createManyAndReturn
 */
export type StaffCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * The data used to create many Staff.
   */
  data: Prisma.StaffCreateManyInput | Prisma.StaffCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Staff update
 */
export type StaffUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * The data needed to update a Staff.
   */
  data: Prisma.XOR<Prisma.StaffUpdateInput, Prisma.StaffUncheckedUpdateInput>;
  /**
   * Choose, which Staff to update.
   */
  where: Prisma.StaffWhereUniqueInput;
};

/**
 * Staff updateMany
 */
export type StaffUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Staff.
   */
  data: Prisma.XOR<
    Prisma.StaffUpdateManyMutationInput,
    Prisma.StaffUncheckedUpdateManyInput
  >;
  /**
   * Filter which Staff to update
   */
  where?: Prisma.StaffWhereInput;
  /**
   * Limit how many Staff to update.
   */
  limit?: number;
};

/**
 * Staff updateManyAndReturn
 */
export type StaffUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * The data used to update Staff.
   */
  data: Prisma.XOR<
    Prisma.StaffUpdateManyMutationInput,
    Prisma.StaffUncheckedUpdateManyInput
  >;
  /**
   * Filter which Staff to update
   */
  where?: Prisma.StaffWhereInput;
  /**
   * Limit how many Staff to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Staff upsert
 */
export type StaffUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * The filter to search for the Staff to update in case it exists.
   */
  where: Prisma.StaffWhereUniqueInput;
  /**
   * In case the Staff found by the `where` argument doesn't exist, create a new Staff with this data.
   */
  create: Prisma.XOR<Prisma.StaffCreateInput, Prisma.StaffUncheckedCreateInput>;
  /**
   * In case the Staff was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StaffUpdateInput, Prisma.StaffUncheckedUpdateInput>;
};

/**
 * Staff delete
 */
export type StaffDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  /**
   * Filter which Staff to delete.
   */
  where: Prisma.StaffWhereUniqueInput;
};

/**
 * Staff deleteMany
 */
export type StaffDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Staff to delete
   */
  where?: Prisma.StaffWhereInput;
  /**
   * Limit how many Staff to delete.
   */
  limit?: number;
};

/**
 * Staff.country
 */
export type Staff$countryArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Country
   */
  select?: Prisma.CountrySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Country
   */
  omit?: Prisma.CountryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CountryInclude<ExtArgs> | null;
  where?: Prisma.CountryWhereInput;
};

/**
 * Staff.user
 */
export type Staff$userArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * Staff.subjects
 */
export type Staff$subjectsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Subject
   */
  select?: Prisma.SubjectSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Subject
   */
  omit?: Prisma.SubjectOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubjectInclude<ExtArgs> | null;
  where?: Prisma.SubjectWhereInput;
  orderBy?:
    | Prisma.SubjectOrderByWithRelationInput
    | Prisma.SubjectOrderByWithRelationInput[];
  cursor?: Prisma.SubjectWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SubjectScalarFieldEnum | Prisma.SubjectScalarFieldEnum[];
};

/**
 * Staff.degree
 */
export type Staff$degreeArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StaffDegree
   */
  select?: Prisma.StaffDegreeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StaffDegree
   */
  omit?: Prisma.StaffDegreeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffDegreeInclude<ExtArgs> | null;
  where?: Prisma.StaffDegreeWhereInput;
};

/**
 * Staff.classrooms
 */
export type Staff$classroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * Staff.classrooms2
 */
export type Staff$classrooms2Args<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * Staff without action
 */
export type StaffDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
};
