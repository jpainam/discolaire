/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `School` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model School
 *
 */
export type SchoolModel =
  runtime.Types.Result.DefaultSelection<Prisma.$SchoolPayload>;

export type AggregateSchool = {
  _count: SchoolCountAggregateOutputType | null;
  _avg: SchoolAvgAggregateOutputType | null;
  _sum: SchoolSumAggregateOutputType | null;
  _min: SchoolMinAggregateOutputType | null;
  _max: SchoolMaxAggregateOutputType | null;
};

export type SchoolAvgAggregateOutputType = {
  numberOfReceipts: number | null;
};

export type SchoolSumAggregateOutputType = {
  numberOfReceipts: number | null;
};

export type SchoolMinAggregateOutputType = {
  id: string | null;
  code: string | null;
  name: string | null;
  authorization: string | null;
  ministry: string | null;
  department: string | null;
  region: string | null;
  defaultLocale: string | null;
  city: string | null;
  headmaster: string | null;
  phoneNumber1: string | null;
  phoneNumber2: string | null;
  email: string | null;
  website: string | null;
  numberOfReceipts: number | null;
  logo: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  isActive: boolean | null;
  address: string | null;
  timezone: string | null;
  defaultCountryId: string | null;
  registrationPrefix: string | null;
  requestSunPlusNo: boolean | null;
  allowOverEnrollment: boolean | null;
  applyRequiredFee: $Enums.ApplyRequiredFee | null;
  includeRequiredFee: boolean | null;
  hasQuarterlyReports: boolean | null;
  currency: string | null;
  appreciationRuleSetId: string | null;
};

export type SchoolMaxAggregateOutputType = {
  id: string | null;
  code: string | null;
  name: string | null;
  authorization: string | null;
  ministry: string | null;
  department: string | null;
  region: string | null;
  defaultLocale: string | null;
  city: string | null;
  headmaster: string | null;
  phoneNumber1: string | null;
  phoneNumber2: string | null;
  email: string | null;
  website: string | null;
  numberOfReceipts: number | null;
  logo: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  isActive: boolean | null;
  address: string | null;
  timezone: string | null;
  defaultCountryId: string | null;
  registrationPrefix: string | null;
  requestSunPlusNo: boolean | null;
  allowOverEnrollment: boolean | null;
  applyRequiredFee: $Enums.ApplyRequiredFee | null;
  includeRequiredFee: boolean | null;
  hasQuarterlyReports: boolean | null;
  currency: string | null;
  appreciationRuleSetId: string | null;
};

export type SchoolCountAggregateOutputType = {
  id: number;
  code: number;
  name: number;
  authorization: number;
  ministry: number;
  department: number;
  region: number;
  defaultLocale: number;
  city: number;
  headmaster: number;
  phoneNumber1: number;
  phoneNumber2: number;
  email: number;
  website: number;
  numberOfReceipts: number;
  logo: number;
  createdAt: number;
  updatedAt: number;
  isActive: number;
  address: number;
  timezone: number;
  defaultCountryId: number;
  registrationPrefix: number;
  requestSunPlusNo: number;
  allowOverEnrollment: number;
  applyRequiredFee: number;
  includeRequiredFee: number;
  hasQuarterlyReports: number;
  currency: number;
  appreciationRuleSetId: number;
  _all: number;
};

export type SchoolAvgAggregateInputType = {
  numberOfReceipts?: true;
};

export type SchoolSumAggregateInputType = {
  numberOfReceipts?: true;
};

export type SchoolMinAggregateInputType = {
  id?: true;
  code?: true;
  name?: true;
  authorization?: true;
  ministry?: true;
  department?: true;
  region?: true;
  defaultLocale?: true;
  city?: true;
  headmaster?: true;
  phoneNumber1?: true;
  phoneNumber2?: true;
  email?: true;
  website?: true;
  numberOfReceipts?: true;
  logo?: true;
  createdAt?: true;
  updatedAt?: true;
  isActive?: true;
  address?: true;
  timezone?: true;
  defaultCountryId?: true;
  registrationPrefix?: true;
  requestSunPlusNo?: true;
  allowOverEnrollment?: true;
  applyRequiredFee?: true;
  includeRequiredFee?: true;
  hasQuarterlyReports?: true;
  currency?: true;
  appreciationRuleSetId?: true;
};

export type SchoolMaxAggregateInputType = {
  id?: true;
  code?: true;
  name?: true;
  authorization?: true;
  ministry?: true;
  department?: true;
  region?: true;
  defaultLocale?: true;
  city?: true;
  headmaster?: true;
  phoneNumber1?: true;
  phoneNumber2?: true;
  email?: true;
  website?: true;
  numberOfReceipts?: true;
  logo?: true;
  createdAt?: true;
  updatedAt?: true;
  isActive?: true;
  address?: true;
  timezone?: true;
  defaultCountryId?: true;
  registrationPrefix?: true;
  requestSunPlusNo?: true;
  allowOverEnrollment?: true;
  applyRequiredFee?: true;
  includeRequiredFee?: true;
  hasQuarterlyReports?: true;
  currency?: true;
  appreciationRuleSetId?: true;
};

export type SchoolCountAggregateInputType = {
  id?: true;
  code?: true;
  name?: true;
  authorization?: true;
  ministry?: true;
  department?: true;
  region?: true;
  defaultLocale?: true;
  city?: true;
  headmaster?: true;
  phoneNumber1?: true;
  phoneNumber2?: true;
  email?: true;
  website?: true;
  numberOfReceipts?: true;
  logo?: true;
  createdAt?: true;
  updatedAt?: true;
  isActive?: true;
  address?: true;
  timezone?: true;
  defaultCountryId?: true;
  registrationPrefix?: true;
  requestSunPlusNo?: true;
  allowOverEnrollment?: true;
  applyRequiredFee?: true;
  includeRequiredFee?: true;
  hasQuarterlyReports?: true;
  currency?: true;
  appreciationRuleSetId?: true;
  _all?: true;
};

export type SchoolAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which School to aggregate.
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Schools to fetch.
   */
  orderBy?:
    | Prisma.SchoolOrderByWithRelationInput
    | Prisma.SchoolOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.SchoolWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Schools from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Schools.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Schools
   **/
  _count?: true | SchoolCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: SchoolAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: SchoolSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: SchoolMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: SchoolMaxAggregateInputType;
};

export type GetSchoolAggregateType<T extends SchoolAggregateArgs> = {
  [P in keyof T & keyof AggregateSchool]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSchool[P]>
    : Prisma.GetScalarType<T[P], AggregateSchool[P]>;
};

export type SchoolGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolWhereInput;
  orderBy?:
    | Prisma.SchoolOrderByWithAggregationInput
    | Prisma.SchoolOrderByWithAggregationInput[];
  by: Prisma.SchoolScalarFieldEnum[] | Prisma.SchoolScalarFieldEnum;
  having?: Prisma.SchoolScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: SchoolCountAggregateInputType | true;
  _avg?: SchoolAvgAggregateInputType;
  _sum?: SchoolSumAggregateInputType;
  _min?: SchoolMinAggregateInputType;
  _max?: SchoolMaxAggregateInputType;
};

export type SchoolGroupByOutputType = {
  id: string;
  code: string;
  name: string;
  authorization: string | null;
  ministry: string | null;
  department: string | null;
  region: string | null;
  defaultLocale: string;
  city: string | null;
  headmaster: string | null;
  phoneNumber1: string | null;
  phoneNumber2: string | null;
  email: string | null;
  website: string | null;
  numberOfReceipts: number | null;
  logo: string | null;
  createdAt: Date;
  updatedAt: Date;
  isActive: boolean;
  address: string | null;
  timezone: string;
  defaultCountryId: string | null;
  registrationPrefix: string;
  requestSunPlusNo: boolean | null;
  allowOverEnrollment: boolean | null;
  applyRequiredFee: $Enums.ApplyRequiredFee;
  includeRequiredFee: boolean | null;
  hasQuarterlyReports: boolean;
  currency: string;
  appreciationRuleSetId: string | null;
  _count: SchoolCountAggregateOutputType | null;
  _avg: SchoolAvgAggregateOutputType | null;
  _sum: SchoolSumAggregateOutputType | null;
  _min: SchoolMinAggregateOutputType | null;
  _max: SchoolMaxAggregateOutputType | null;
};

type GetSchoolGroupByPayload<T extends SchoolGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<SchoolGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof SchoolGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SchoolGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SchoolGroupByOutputType[P]>;
      }
    >
  >;

export type SchoolWhereInput = {
  AND?: Prisma.SchoolWhereInput | Prisma.SchoolWhereInput[];
  OR?: Prisma.SchoolWhereInput[];
  NOT?: Prisma.SchoolWhereInput | Prisma.SchoolWhereInput[];
  id?: Prisma.StringFilter<"School"> | string;
  code?: Prisma.StringFilter<"School"> | string;
  name?: Prisma.StringFilter<"School"> | string;
  authorization?: Prisma.StringNullableFilter<"School"> | string | null;
  ministry?: Prisma.StringNullableFilter<"School"> | string | null;
  department?: Prisma.StringNullableFilter<"School"> | string | null;
  region?: Prisma.StringNullableFilter<"School"> | string | null;
  defaultLocale?: Prisma.StringFilter<"School"> | string;
  city?: Prisma.StringNullableFilter<"School"> | string | null;
  headmaster?: Prisma.StringNullableFilter<"School"> | string | null;
  phoneNumber1?: Prisma.StringNullableFilter<"School"> | string | null;
  phoneNumber2?: Prisma.StringNullableFilter<"School"> | string | null;
  email?: Prisma.StringNullableFilter<"School"> | string | null;
  website?: Prisma.StringNullableFilter<"School"> | string | null;
  numberOfReceipts?: Prisma.IntNullableFilter<"School"> | number | null;
  logo?: Prisma.StringNullableFilter<"School"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"School"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"School"> | Date | string;
  isActive?: Prisma.BoolFilter<"School"> | boolean;
  address?: Prisma.StringNullableFilter<"School"> | string | null;
  timezone?: Prisma.StringFilter<"School"> | string;
  defaultCountryId?: Prisma.StringNullableFilter<"School"> | string | null;
  registrationPrefix?: Prisma.StringFilter<"School"> | string;
  requestSunPlusNo?: Prisma.BoolNullableFilter<"School"> | boolean | null;
  allowOverEnrollment?: Prisma.BoolNullableFilter<"School"> | boolean | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFilter<"School">
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?: Prisma.BoolNullableFilter<"School"> | boolean | null;
  hasQuarterlyReports?: Prisma.BoolFilter<"School"> | boolean;
  currency?: Prisma.StringFilter<"School"> | string;
  appreciationRuleSetId?: Prisma.StringNullableFilter<"School"> | string | null;
  contacts?: Prisma.ContactListRelationFilter;
  users?: Prisma.UserListRelationFilter;
  students?: Prisma.StudentListRelationFilter;
  classrooms?: Prisma.ClassroomListRelationFilter;
  staffs?: Prisma.StaffListRelationFilter;
  formerSchools?: Prisma.FormerSchoolListRelationFilter;
  religions?: Prisma.ReligionListRelationFilter;
  sports?: Prisma.SportListRelationFilter;
  clubs?: Prisma.ClubListRelationFilter;
  permissions?: Prisma.PolicyListRelationFilter;
  roles?: Prisma.RoleListRelationFilter;
  subjectGroup?: Prisma.SubjectGroupListRelationFilter;
  courses?: Prisma.CourseListRelationFilter;
  schoolYears?: Prisma.SchoolYearListRelationFilter;
  cycles?: Prisma.ClassroomCycleListRelationFilter;
  sections?: Prisma.ClassroomSectionListRelationFilter;
  levels?: Prisma.ClassroomLevelListRelationFilter;
  terms?: Prisma.TermListRelationFilter;
  documents?: Prisma.DocumentListRelationFilter;
  degrees?: Prisma.StaffDegreeListRelationFilter;
  relationships?: Prisma.ContactRelationshipListRelationFilter;
  timetableCategories?: Prisma.TimetableCategoryListRelationFilter;
  inventoryAssets?: Prisma.InventoryAssetListRelationFilter;
  inventoryConsumables?: Prisma.InventoryConsumableListRelationFilter;
  stockMovements?: Prisma.InventoryStockMovementListRelationFilter;
  consumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
  schoolYearEvents?: Prisma.SchoolYearEventListRelationFilter;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeListRelationFilter;
  logActivities?: Prisma.LogActivityListRelationFilter;
  AppreciationRuleSet?: Prisma.XOR<
    Prisma.AppreciationRuleSetNullableScalarRelationFilter,
    Prisma.AppreciationRuleSetWhereInput
  > | null;
  accountingJournals?: Prisma.AccountingJournalListRelationFilter;
  requiredJournals?: Prisma.RequiredAccountingJournalListRelationFilter;
};

export type SchoolOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  code?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  authorization?: Prisma.SortOrderInput | Prisma.SortOrder;
  ministry?: Prisma.SortOrderInput | Prisma.SortOrder;
  department?: Prisma.SortOrderInput | Prisma.SortOrder;
  region?: Prisma.SortOrderInput | Prisma.SortOrder;
  defaultLocale?: Prisma.SortOrder;
  city?: Prisma.SortOrderInput | Prisma.SortOrder;
  headmaster?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrderInput | Prisma.SortOrder;
  email?: Prisma.SortOrderInput | Prisma.SortOrder;
  website?: Prisma.SortOrderInput | Prisma.SortOrder;
  numberOfReceipts?: Prisma.SortOrderInput | Prisma.SortOrder;
  logo?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  address?: Prisma.SortOrderInput | Prisma.SortOrder;
  timezone?: Prisma.SortOrder;
  defaultCountryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  registrationPrefix?: Prisma.SortOrder;
  requestSunPlusNo?: Prisma.SortOrderInput | Prisma.SortOrder;
  allowOverEnrollment?: Prisma.SortOrderInput | Prisma.SortOrder;
  applyRequiredFee?: Prisma.SortOrder;
  includeRequiredFee?: Prisma.SortOrderInput | Prisma.SortOrder;
  hasQuarterlyReports?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  appreciationRuleSetId?: Prisma.SortOrderInput | Prisma.SortOrder;
  contacts?: Prisma.ContactOrderByRelationAggregateInput;
  users?: Prisma.UserOrderByRelationAggregateInput;
  students?: Prisma.StudentOrderByRelationAggregateInput;
  classrooms?: Prisma.ClassroomOrderByRelationAggregateInput;
  staffs?: Prisma.StaffOrderByRelationAggregateInput;
  formerSchools?: Prisma.FormerSchoolOrderByRelationAggregateInput;
  religions?: Prisma.ReligionOrderByRelationAggregateInput;
  sports?: Prisma.SportOrderByRelationAggregateInput;
  clubs?: Prisma.ClubOrderByRelationAggregateInput;
  permissions?: Prisma.PolicyOrderByRelationAggregateInput;
  roles?: Prisma.RoleOrderByRelationAggregateInput;
  subjectGroup?: Prisma.SubjectGroupOrderByRelationAggregateInput;
  courses?: Prisma.CourseOrderByRelationAggregateInput;
  schoolYears?: Prisma.SchoolYearOrderByRelationAggregateInput;
  cycles?: Prisma.ClassroomCycleOrderByRelationAggregateInput;
  sections?: Prisma.ClassroomSectionOrderByRelationAggregateInput;
  levels?: Prisma.ClassroomLevelOrderByRelationAggregateInput;
  terms?: Prisma.TermOrderByRelationAggregateInput;
  documents?: Prisma.DocumentOrderByRelationAggregateInput;
  degrees?: Prisma.StaffDegreeOrderByRelationAggregateInput;
  relationships?: Prisma.ContactRelationshipOrderByRelationAggregateInput;
  timetableCategories?: Prisma.TimetableCategoryOrderByRelationAggregateInput;
  inventoryAssets?: Prisma.InventoryAssetOrderByRelationAggregateInput;
  inventoryConsumables?: Prisma.InventoryConsumableOrderByRelationAggregateInput;
  stockMovements?: Prisma.InventoryStockMovementOrderByRelationAggregateInput;
  consumableUsages?: Prisma.InventoryConsumableUsageOrderByRelationAggregateInput;
  schoolYearEvents?: Prisma.SchoolYearEventOrderByRelationAggregateInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeOrderByRelationAggregateInput;
  logActivities?: Prisma.LogActivityOrderByRelationAggregateInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetOrderByWithRelationInput;
  accountingJournals?: Prisma.AccountingJournalOrderByRelationAggregateInput;
  requiredJournals?: Prisma.RequiredAccountingJournalOrderByRelationAggregateInput;
};

export type SchoolWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    code?: string;
    AND?: Prisma.SchoolWhereInput | Prisma.SchoolWhereInput[];
    OR?: Prisma.SchoolWhereInput[];
    NOT?: Prisma.SchoolWhereInput | Prisma.SchoolWhereInput[];
    name?: Prisma.StringFilter<"School"> | string;
    authorization?: Prisma.StringNullableFilter<"School"> | string | null;
    ministry?: Prisma.StringNullableFilter<"School"> | string | null;
    department?: Prisma.StringNullableFilter<"School"> | string | null;
    region?: Prisma.StringNullableFilter<"School"> | string | null;
    defaultLocale?: Prisma.StringFilter<"School"> | string;
    city?: Prisma.StringNullableFilter<"School"> | string | null;
    headmaster?: Prisma.StringNullableFilter<"School"> | string | null;
    phoneNumber1?: Prisma.StringNullableFilter<"School"> | string | null;
    phoneNumber2?: Prisma.StringNullableFilter<"School"> | string | null;
    email?: Prisma.StringNullableFilter<"School"> | string | null;
    website?: Prisma.StringNullableFilter<"School"> | string | null;
    numberOfReceipts?: Prisma.IntNullableFilter<"School"> | number | null;
    logo?: Prisma.StringNullableFilter<"School"> | string | null;
    createdAt?: Prisma.DateTimeFilter<"School"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"School"> | Date | string;
    isActive?: Prisma.BoolFilter<"School"> | boolean;
    address?: Prisma.StringNullableFilter<"School"> | string | null;
    timezone?: Prisma.StringFilter<"School"> | string;
    defaultCountryId?: Prisma.StringNullableFilter<"School"> | string | null;
    registrationPrefix?: Prisma.StringFilter<"School"> | string;
    requestSunPlusNo?: Prisma.BoolNullableFilter<"School"> | boolean | null;
    allowOverEnrollment?: Prisma.BoolNullableFilter<"School"> | boolean | null;
    applyRequiredFee?:
      | Prisma.EnumApplyRequiredFeeFilter<"School">
      | $Enums.ApplyRequiredFee;
    includeRequiredFee?: Prisma.BoolNullableFilter<"School"> | boolean | null;
    hasQuarterlyReports?: Prisma.BoolFilter<"School"> | boolean;
    currency?: Prisma.StringFilter<"School"> | string;
    appreciationRuleSetId?:
      | Prisma.StringNullableFilter<"School">
      | string
      | null;
    contacts?: Prisma.ContactListRelationFilter;
    users?: Prisma.UserListRelationFilter;
    students?: Prisma.StudentListRelationFilter;
    classrooms?: Prisma.ClassroomListRelationFilter;
    staffs?: Prisma.StaffListRelationFilter;
    formerSchools?: Prisma.FormerSchoolListRelationFilter;
    religions?: Prisma.ReligionListRelationFilter;
    sports?: Prisma.SportListRelationFilter;
    clubs?: Prisma.ClubListRelationFilter;
    permissions?: Prisma.PolicyListRelationFilter;
    roles?: Prisma.RoleListRelationFilter;
    subjectGroup?: Prisma.SubjectGroupListRelationFilter;
    courses?: Prisma.CourseListRelationFilter;
    schoolYears?: Prisma.SchoolYearListRelationFilter;
    cycles?: Prisma.ClassroomCycleListRelationFilter;
    sections?: Prisma.ClassroomSectionListRelationFilter;
    levels?: Prisma.ClassroomLevelListRelationFilter;
    terms?: Prisma.TermListRelationFilter;
    documents?: Prisma.DocumentListRelationFilter;
    degrees?: Prisma.StaffDegreeListRelationFilter;
    relationships?: Prisma.ContactRelationshipListRelationFilter;
    timetableCategories?: Prisma.TimetableCategoryListRelationFilter;
    inventoryAssets?: Prisma.InventoryAssetListRelationFilter;
    inventoryConsumables?: Prisma.InventoryConsumableListRelationFilter;
    stockMovements?: Prisma.InventoryStockMovementListRelationFilter;
    consumableUsages?: Prisma.InventoryConsumableUsageListRelationFilter;
    schoolYearEvents?: Prisma.SchoolYearEventListRelationFilter;
    schoolYearEventTypes?: Prisma.SchoolYearEventTypeListRelationFilter;
    logActivities?: Prisma.LogActivityListRelationFilter;
    AppreciationRuleSet?: Prisma.XOR<
      Prisma.AppreciationRuleSetNullableScalarRelationFilter,
      Prisma.AppreciationRuleSetWhereInput
    > | null;
    accountingJournals?: Prisma.AccountingJournalListRelationFilter;
    requiredJournals?: Prisma.RequiredAccountingJournalListRelationFilter;
  },
  "id" | "code"
>;

export type SchoolOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  code?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  authorization?: Prisma.SortOrderInput | Prisma.SortOrder;
  ministry?: Prisma.SortOrderInput | Prisma.SortOrder;
  department?: Prisma.SortOrderInput | Prisma.SortOrder;
  region?: Prisma.SortOrderInput | Prisma.SortOrder;
  defaultLocale?: Prisma.SortOrder;
  city?: Prisma.SortOrderInput | Prisma.SortOrder;
  headmaster?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrderInput | Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrderInput | Prisma.SortOrder;
  email?: Prisma.SortOrderInput | Prisma.SortOrder;
  website?: Prisma.SortOrderInput | Prisma.SortOrder;
  numberOfReceipts?: Prisma.SortOrderInput | Prisma.SortOrder;
  logo?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  address?: Prisma.SortOrderInput | Prisma.SortOrder;
  timezone?: Prisma.SortOrder;
  defaultCountryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  registrationPrefix?: Prisma.SortOrder;
  requestSunPlusNo?: Prisma.SortOrderInput | Prisma.SortOrder;
  allowOverEnrollment?: Prisma.SortOrderInput | Prisma.SortOrder;
  applyRequiredFee?: Prisma.SortOrder;
  includeRequiredFee?: Prisma.SortOrderInput | Prisma.SortOrder;
  hasQuarterlyReports?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  appreciationRuleSetId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.SchoolCountOrderByAggregateInput;
  _avg?: Prisma.SchoolAvgOrderByAggregateInput;
  _max?: Prisma.SchoolMaxOrderByAggregateInput;
  _min?: Prisma.SchoolMinOrderByAggregateInput;
  _sum?: Prisma.SchoolSumOrderByAggregateInput;
};

export type SchoolScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.SchoolScalarWhereWithAggregatesInput
    | Prisma.SchoolScalarWhereWithAggregatesInput[];
  OR?: Prisma.SchoolScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.SchoolScalarWhereWithAggregatesInput
    | Prisma.SchoolScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"School"> | string;
  code?: Prisma.StringWithAggregatesFilter<"School"> | string;
  name?: Prisma.StringWithAggregatesFilter<"School"> | string;
  authorization?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  ministry?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  department?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  region?: Prisma.StringNullableWithAggregatesFilter<"School"> | string | null;
  defaultLocale?: Prisma.StringWithAggregatesFilter<"School"> | string;
  city?: Prisma.StringNullableWithAggregatesFilter<"School"> | string | null;
  headmaster?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  phoneNumber1?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  phoneNumber2?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  email?: Prisma.StringNullableWithAggregatesFilter<"School"> | string | null;
  website?: Prisma.StringNullableWithAggregatesFilter<"School"> | string | null;
  numberOfReceipts?:
    | Prisma.IntNullableWithAggregatesFilter<"School">
    | number
    | null;
  logo?: Prisma.StringNullableWithAggregatesFilter<"School"> | string | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"School"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"School"> | Date | string;
  isActive?: Prisma.BoolWithAggregatesFilter<"School"> | boolean;
  address?: Prisma.StringNullableWithAggregatesFilter<"School"> | string | null;
  timezone?: Prisma.StringWithAggregatesFilter<"School"> | string;
  defaultCountryId?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
  registrationPrefix?: Prisma.StringWithAggregatesFilter<"School"> | string;
  requestSunPlusNo?:
    | Prisma.BoolNullableWithAggregatesFilter<"School">
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.BoolNullableWithAggregatesFilter<"School">
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeWithAggregatesFilter<"School">
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.BoolNullableWithAggregatesFilter<"School">
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolWithAggregatesFilter<"School"> | boolean;
  currency?: Prisma.StringWithAggregatesFilter<"School"> | string;
  appreciationRuleSetId?:
    | Prisma.StringNullableWithAggregatesFilter<"School">
    | string
    | null;
};

export type SchoolCreateInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateManyInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
};

export type SchoolUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type SchoolUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
};

export type SchoolScalarRelationFilter = {
  is?: Prisma.SchoolWhereInput;
  isNot?: Prisma.SchoolWhereInput;
};

export type SchoolCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  code?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  authorization?: Prisma.SortOrder;
  ministry?: Prisma.SortOrder;
  department?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  defaultLocale?: Prisma.SortOrder;
  city?: Prisma.SortOrder;
  headmaster?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  website?: Prisma.SortOrder;
  numberOfReceipts?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  timezone?: Prisma.SortOrder;
  defaultCountryId?: Prisma.SortOrder;
  registrationPrefix?: Prisma.SortOrder;
  requestSunPlusNo?: Prisma.SortOrder;
  allowOverEnrollment?: Prisma.SortOrder;
  applyRequiredFee?: Prisma.SortOrder;
  includeRequiredFee?: Prisma.SortOrder;
  hasQuarterlyReports?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  appreciationRuleSetId?: Prisma.SortOrder;
};

export type SchoolAvgOrderByAggregateInput = {
  numberOfReceipts?: Prisma.SortOrder;
};

export type SchoolMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  code?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  authorization?: Prisma.SortOrder;
  ministry?: Prisma.SortOrder;
  department?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  defaultLocale?: Prisma.SortOrder;
  city?: Prisma.SortOrder;
  headmaster?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  website?: Prisma.SortOrder;
  numberOfReceipts?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  timezone?: Prisma.SortOrder;
  defaultCountryId?: Prisma.SortOrder;
  registrationPrefix?: Prisma.SortOrder;
  requestSunPlusNo?: Prisma.SortOrder;
  allowOverEnrollment?: Prisma.SortOrder;
  applyRequiredFee?: Prisma.SortOrder;
  includeRequiredFee?: Prisma.SortOrder;
  hasQuarterlyReports?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  appreciationRuleSetId?: Prisma.SortOrder;
};

export type SchoolMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  code?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  authorization?: Prisma.SortOrder;
  ministry?: Prisma.SortOrder;
  department?: Prisma.SortOrder;
  region?: Prisma.SortOrder;
  defaultLocale?: Prisma.SortOrder;
  city?: Prisma.SortOrder;
  headmaster?: Prisma.SortOrder;
  phoneNumber1?: Prisma.SortOrder;
  phoneNumber2?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  website?: Prisma.SortOrder;
  numberOfReceipts?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  address?: Prisma.SortOrder;
  timezone?: Prisma.SortOrder;
  defaultCountryId?: Prisma.SortOrder;
  registrationPrefix?: Prisma.SortOrder;
  requestSunPlusNo?: Prisma.SortOrder;
  allowOverEnrollment?: Prisma.SortOrder;
  applyRequiredFee?: Prisma.SortOrder;
  includeRequiredFee?: Prisma.SortOrder;
  hasQuarterlyReports?: Prisma.SortOrder;
  currency?: Prisma.SortOrder;
  appreciationRuleSetId?: Prisma.SortOrder;
};

export type SchoolSumOrderByAggregateInput = {
  numberOfReceipts?: Prisma.SortOrder;
};

export type SchoolListRelationFilter = {
  every?: Prisma.SchoolWhereInput;
  some?: Prisma.SchoolWhereInput;
  none?: Prisma.SchoolWhereInput;
};

export type SchoolOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type SchoolCreateNestedOneWithoutTimetableCategoriesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolUncheckedCreateWithoutTimetableCategoriesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutTimetableCategoriesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutTimetableCategoriesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolUncheckedCreateWithoutTimetableCategoriesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutTimetableCategoriesInput;
  upsert?: Prisma.SchoolUpsertWithoutTimetableCategoriesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutTimetableCategoriesInput,
      Prisma.SchoolUpdateWithoutTimetableCategoriesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutTimetableCategoriesInput
  >;
};

export type SchoolCreateNestedOneWithoutInventoryAssetsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryAssetsInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryAssetsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutInventoryAssetsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutInventoryAssetsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryAssetsInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryAssetsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutInventoryAssetsInput;
  upsert?: Prisma.SchoolUpsertWithoutInventoryAssetsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutInventoryAssetsInput,
      Prisma.SchoolUpdateWithoutInventoryAssetsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutInventoryAssetsInput
  >;
};

export type SchoolCreateNestedOneWithoutInventoryConsumablesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryConsumablesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutInventoryConsumablesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutInventoryConsumablesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryConsumablesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutInventoryConsumablesInput;
  upsert?: Prisma.SchoolUpsertWithoutInventoryConsumablesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutInventoryConsumablesInput,
      Prisma.SchoolUpdateWithoutInventoryConsumablesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutInventoryConsumablesInput
  >;
};

export type SchoolCreateNestedOneWithoutConsumableUsagesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutConsumableUsagesInput,
    Prisma.SchoolUncheckedCreateWithoutConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutConsumableUsagesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutConsumableUsagesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutConsumableUsagesInput,
    Prisma.SchoolUncheckedCreateWithoutConsumableUsagesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutConsumableUsagesInput;
  upsert?: Prisma.SchoolUpsertWithoutConsumableUsagesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutConsumableUsagesInput,
      Prisma.SchoolUpdateWithoutConsumableUsagesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutConsumableUsagesInput
  >;
};

export type SchoolCreateNestedOneWithoutStockMovementsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutStockMovementsInput,
    Prisma.SchoolUncheckedCreateWithoutStockMovementsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutStockMovementsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutStockMovementsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutStockMovementsInput,
    Prisma.SchoolUncheckedCreateWithoutStockMovementsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutStockMovementsInput;
  upsert?: Prisma.SchoolUpsertWithoutStockMovementsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutStockMovementsInput,
      Prisma.SchoolUpdateWithoutStockMovementsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutStockMovementsInput
  >;
};

export type SchoolCreateNestedOneWithoutPermissionsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutPermissionsInput,
    Prisma.SchoolUncheckedCreateWithoutPermissionsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutPermissionsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutPermissionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutPermissionsInput,
    Prisma.SchoolUncheckedCreateWithoutPermissionsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutPermissionsInput;
  upsert?: Prisma.SchoolUpsertWithoutPermissionsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutPermissionsInput,
      Prisma.SchoolUpdateWithoutPermissionsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutPermissionsInput
  >;
};

export type SchoolCreateNestedOneWithoutClassroomsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutClassroomsInput,
    Prisma.SchoolUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutClassroomsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutClassroomsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutClassroomsInput,
    Prisma.SchoolUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutClassroomsInput;
  upsert?: Prisma.SchoolUpsertWithoutClassroomsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutClassroomsInput,
      Prisma.SchoolUpdateWithoutClassroomsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutClassroomsInput
  >;
};

export type SchoolCreateNestedOneWithoutLevelsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutLevelsInput,
    Prisma.SchoolUncheckedCreateWithoutLevelsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutLevelsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutLevelsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutLevelsInput,
    Prisma.SchoolUncheckedCreateWithoutLevelsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutLevelsInput;
  upsert?: Prisma.SchoolUpsertWithoutLevelsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutLevelsInput,
      Prisma.SchoolUpdateWithoutLevelsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutLevelsInput
  >;
};

export type SchoolCreateNestedOneWithoutTermsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutTermsInput,
    Prisma.SchoolUncheckedCreateWithoutTermsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutTermsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutTermsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutTermsInput,
    Prisma.SchoolUncheckedCreateWithoutTermsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutTermsInput;
  upsert?: Prisma.SchoolUpsertWithoutTermsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutTermsInput,
      Prisma.SchoolUpdateWithoutTermsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutTermsInput
  >;
};

export type SchoolCreateNestedOneWithoutRelationshipsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutRelationshipsInput,
    Prisma.SchoolUncheckedCreateWithoutRelationshipsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutRelationshipsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutRelationshipsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutRelationshipsInput,
    Prisma.SchoolUncheckedCreateWithoutRelationshipsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutRelationshipsInput;
  upsert?: Prisma.SchoolUpsertWithoutRelationshipsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutRelationshipsInput,
      Prisma.SchoolUpdateWithoutRelationshipsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutRelationshipsInput
  >;
};

export type SchoolCreateNestedOneWithoutDegreesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutDegreesInput,
    Prisma.SchoolUncheckedCreateWithoutDegreesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutDegreesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutDegreesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutDegreesInput,
    Prisma.SchoolUncheckedCreateWithoutDegreesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutDegreesInput;
  upsert?: Prisma.SchoolUpsertWithoutDegreesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutDegreesInput,
      Prisma.SchoolUpdateWithoutDegreesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutDegreesInput
  >;
};

export type SchoolCreateNestedOneWithoutStaffsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutStaffsInput,
    Prisma.SchoolUncheckedCreateWithoutStaffsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutStaffsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutStaffsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutStaffsInput,
    Prisma.SchoolUncheckedCreateWithoutStaffsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutStaffsInput;
  upsert?: Prisma.SchoolUpsertWithoutStaffsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutStaffsInput,
      Prisma.SchoolUpdateWithoutStaffsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutStaffsInput
  >;
};

export type SchoolCreateNestedOneWithoutDocumentsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutDocumentsInput,
    Prisma.SchoolUncheckedCreateWithoutDocumentsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutDocumentsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutDocumentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutDocumentsInput,
    Prisma.SchoolUncheckedCreateWithoutDocumentsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutDocumentsInput;
  upsert?: Prisma.SchoolUpsertWithoutDocumentsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutDocumentsInput,
      Prisma.SchoolUpdateWithoutDocumentsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutDocumentsInput
  >;
};

export type SchoolCreateNestedOneWithoutStudentsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutStudentsInput,
    Prisma.SchoolUncheckedCreateWithoutStudentsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutStudentsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutStudentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutStudentsInput,
    Prisma.SchoolUncheckedCreateWithoutStudentsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutStudentsInput;
  upsert?: Prisma.SchoolUpsertWithoutStudentsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutStudentsInput,
      Prisma.SchoolUpdateWithoutStudentsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutStudentsInput
  >;
};

export type SchoolCreateNestedOneWithoutContactsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutContactsInput,
    Prisma.SchoolUncheckedCreateWithoutContactsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutContactsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutContactsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutContactsInput,
    Prisma.SchoolUncheckedCreateWithoutContactsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutContactsInput;
  upsert?: Prisma.SchoolUpsertWithoutContactsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutContactsInput,
      Prisma.SchoolUpdateWithoutContactsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutContactsInput
  >;
};

export type EnumApplyRequiredFeeFieldUpdateOperationsInput = {
  set?: $Enums.ApplyRequiredFee;
};

export type SchoolCreateNestedOneWithoutRequiredJournalsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutRequiredJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutRequiredJournalsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutRequiredJournalsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutRequiredJournalsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutRequiredJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutRequiredJournalsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutRequiredJournalsInput;
  upsert?: Prisma.SchoolUpsertWithoutRequiredJournalsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutRequiredJournalsInput,
      Prisma.SchoolUpdateWithoutRequiredJournalsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutRequiredJournalsInput
  >;
};

export type SchoolCreateNestedOneWithoutFormerSchoolsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutFormerSchoolsInput,
    Prisma.SchoolUncheckedCreateWithoutFormerSchoolsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutFormerSchoolsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutFormerSchoolsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutFormerSchoolsInput,
    Prisma.SchoolUncheckedCreateWithoutFormerSchoolsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutFormerSchoolsInput;
  upsert?: Prisma.SchoolUpsertWithoutFormerSchoolsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutFormerSchoolsInput,
      Prisma.SchoolUpdateWithoutFormerSchoolsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutFormerSchoolsInput
  >;
};

export type SchoolCreateNestedOneWithoutSubjectGroupInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSubjectGroupInput,
    Prisma.SchoolUncheckedCreateWithoutSubjectGroupInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSubjectGroupInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutSubjectGroupNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSubjectGroupInput,
    Prisma.SchoolUncheckedCreateWithoutSubjectGroupInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSubjectGroupInput;
  upsert?: Prisma.SchoolUpsertWithoutSubjectGroupInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutSubjectGroupInput,
      Prisma.SchoolUpdateWithoutSubjectGroupInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutSubjectGroupInput
  >;
};

export type SchoolCreateNestedOneWithoutCoursesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutCoursesInput,
    Prisma.SchoolUncheckedCreateWithoutCoursesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutCoursesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutCoursesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutCoursesInput,
    Prisma.SchoolUncheckedCreateWithoutCoursesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutCoursesInput;
  upsert?: Prisma.SchoolUpsertWithoutCoursesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutCoursesInput,
      Prisma.SchoolUpdateWithoutCoursesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutCoursesInput
  >;
};

export type SchoolCreateNestedOneWithoutSchoolYearsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSchoolYearsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutSchoolYearsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSchoolYearsInput;
  upsert?: Prisma.SchoolUpsertWithoutSchoolYearsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutSchoolYearsInput,
      Prisma.SchoolUpdateWithoutSchoolYearsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearsInput
  >;
};

export type SchoolCreateNestedOneWithoutCyclesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutCyclesInput,
    Prisma.SchoolUncheckedCreateWithoutCyclesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutCyclesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutCyclesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutCyclesInput,
    Prisma.SchoolUncheckedCreateWithoutCyclesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutCyclesInput;
  upsert?: Prisma.SchoolUpsertWithoutCyclesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutCyclesInput,
      Prisma.SchoolUpdateWithoutCyclesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutCyclesInput
  >;
};

export type SchoolCreateNestedOneWithoutSectionsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSectionsInput,
    Prisma.SchoolUncheckedCreateWithoutSectionsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSectionsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutSectionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSectionsInput,
    Prisma.SchoolUncheckedCreateWithoutSectionsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSectionsInput;
  upsert?: Prisma.SchoolUpsertWithoutSectionsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutSectionsInput,
      Prisma.SchoolUpdateWithoutSectionsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutSectionsInput
  >;
};

export type SchoolCreateNestedOneWithoutReligionsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutReligionsInput,
    Prisma.SchoolUncheckedCreateWithoutReligionsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutReligionsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutReligionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutReligionsInput,
    Prisma.SchoolUncheckedCreateWithoutReligionsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutReligionsInput;
  upsert?: Prisma.SchoolUpsertWithoutReligionsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutReligionsInput,
      Prisma.SchoolUpdateWithoutReligionsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutReligionsInput
  >;
};

export type SchoolCreateNestedOneWithoutClubsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutClubsInput,
    Prisma.SchoolUncheckedCreateWithoutClubsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutClubsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutClubsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutClubsInput,
    Prisma.SchoolUncheckedCreateWithoutClubsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutClubsInput;
  upsert?: Prisma.SchoolUpsertWithoutClubsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutClubsInput,
      Prisma.SchoolUpdateWithoutClubsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutClubsInput
  >;
};

export type SchoolCreateNestedOneWithoutSportsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSportsInput,
    Prisma.SchoolUncheckedCreateWithoutSportsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSportsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutSportsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSportsInput,
    Prisma.SchoolUncheckedCreateWithoutSportsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSportsInput;
  upsert?: Prisma.SchoolUpsertWithoutSportsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutSportsInput,
      Prisma.SchoolUpdateWithoutSportsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutSportsInput
  >;
};

export type SchoolCreateNestedOneWithoutAccountingJournalsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutAccountingJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutAccountingJournalsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutAccountingJournalsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutAccountingJournalsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutAccountingJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutAccountingJournalsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutAccountingJournalsInput;
  upsert?: Prisma.SchoolUpsertWithoutAccountingJournalsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutAccountingJournalsInput,
      Prisma.SchoolUpdateWithoutAccountingJournalsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutAccountingJournalsInput
  >;
};

export type SchoolCreateNestedOneWithoutUsersInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutUsersInput,
    Prisma.SchoolUncheckedCreateWithoutUsersInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutUsersInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutUsersNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutUsersInput,
    Prisma.SchoolUncheckedCreateWithoutUsersInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutUsersInput;
  upsert?: Prisma.SchoolUpsertWithoutUsersInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutUsersInput,
      Prisma.SchoolUpdateWithoutUsersInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutUsersInput
  >;
};

export type SchoolCreateNestedOneWithoutRolesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutRolesInput,
    Prisma.SchoolUncheckedCreateWithoutRolesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutRolesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutRolesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutRolesInput,
    Prisma.SchoolUncheckedCreateWithoutRolesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutRolesInput;
  upsert?: Prisma.SchoolUpsertWithoutRolesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutRolesInput,
      Prisma.SchoolUpdateWithoutRolesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutRolesInput
  >;
};

export type SchoolCreateNestedOneWithoutLogActivitiesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutLogActivitiesInput,
    Prisma.SchoolUncheckedCreateWithoutLogActivitiesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutLogActivitiesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutLogActivitiesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutLogActivitiesInput,
    Prisma.SchoolUncheckedCreateWithoutLogActivitiesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutLogActivitiesInput;
  upsert?: Prisma.SchoolUpsertWithoutLogActivitiesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutLogActivitiesInput,
      Prisma.SchoolUpdateWithoutLogActivitiesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutLogActivitiesInput
  >;
};

export type SchoolCreateNestedOneWithoutSchoolYearEventsInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSchoolYearEventsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutSchoolYearEventsNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventsInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSchoolYearEventsInput;
  upsert?: Prisma.SchoolUpsertWithoutSchoolYearEventsInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutSchoolYearEventsInput,
      Prisma.SchoolUpdateWithoutSchoolYearEventsInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearEventsInput
  >;
};

export type SchoolCreateNestedOneWithoutSchoolYearEventTypesInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventTypesInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventTypesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSchoolYearEventTypesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
};

export type SchoolUpdateOneRequiredWithoutSchoolYearEventTypesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventTypesInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventTypesInput
  >;
  connectOrCreate?: Prisma.SchoolCreateOrConnectWithoutSchoolYearEventTypesInput;
  upsert?: Prisma.SchoolUpsertWithoutSchoolYearEventTypesInput;
  connect?: Prisma.SchoolWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SchoolUpdateToOneWithWhereWithoutSchoolYearEventTypesInput,
      Prisma.SchoolUpdateWithoutSchoolYearEventTypesInput
    >,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearEventTypesInput
  >;
};

export type SchoolCreateNestedManyWithoutAppreciationRuleSetInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolCreateWithoutAppreciationRuleSetInput,
        Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput
      >
    | Prisma.SchoolCreateWithoutAppreciationRuleSetInput[]
    | Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput[];
  connectOrCreate?:
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput[];
  createMany?: Prisma.SchoolCreateManyAppreciationRuleSetInputEnvelope;
  connect?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
};

export type SchoolUncheckedCreateNestedManyWithoutAppreciationRuleSetInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolCreateWithoutAppreciationRuleSetInput,
        Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput
      >
    | Prisma.SchoolCreateWithoutAppreciationRuleSetInput[]
    | Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput[];
  connectOrCreate?:
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput[];
  createMany?: Prisma.SchoolCreateManyAppreciationRuleSetInputEnvelope;
  connect?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
};

export type SchoolUpdateManyWithoutAppreciationRuleSetNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolCreateWithoutAppreciationRuleSetInput,
        Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput
      >
    | Prisma.SchoolCreateWithoutAppreciationRuleSetInput[]
    | Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput[];
  connectOrCreate?:
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput[];
  upsert?:
    | Prisma.SchoolUpsertWithWhereUniqueWithoutAppreciationRuleSetInput
    | Prisma.SchoolUpsertWithWhereUniqueWithoutAppreciationRuleSetInput[];
  createMany?: Prisma.SchoolCreateManyAppreciationRuleSetInputEnvelope;
  set?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  disconnect?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  delete?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  connect?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  update?:
    | Prisma.SchoolUpdateWithWhereUniqueWithoutAppreciationRuleSetInput
    | Prisma.SchoolUpdateWithWhereUniqueWithoutAppreciationRuleSetInput[];
  updateMany?:
    | Prisma.SchoolUpdateManyWithWhereWithoutAppreciationRuleSetInput
    | Prisma.SchoolUpdateManyWithWhereWithoutAppreciationRuleSetInput[];
  deleteMany?: Prisma.SchoolScalarWhereInput | Prisma.SchoolScalarWhereInput[];
};

export type SchoolUncheckedUpdateManyWithoutAppreciationRuleSetNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SchoolCreateWithoutAppreciationRuleSetInput,
        Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput
      >
    | Prisma.SchoolCreateWithoutAppreciationRuleSetInput[]
    | Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput[];
  connectOrCreate?:
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput
    | Prisma.SchoolCreateOrConnectWithoutAppreciationRuleSetInput[];
  upsert?:
    | Prisma.SchoolUpsertWithWhereUniqueWithoutAppreciationRuleSetInput
    | Prisma.SchoolUpsertWithWhereUniqueWithoutAppreciationRuleSetInput[];
  createMany?: Prisma.SchoolCreateManyAppreciationRuleSetInputEnvelope;
  set?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  disconnect?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  delete?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  connect?: Prisma.SchoolWhereUniqueInput | Prisma.SchoolWhereUniqueInput[];
  update?:
    | Prisma.SchoolUpdateWithWhereUniqueWithoutAppreciationRuleSetInput
    | Prisma.SchoolUpdateWithWhereUniqueWithoutAppreciationRuleSetInput[];
  updateMany?:
    | Prisma.SchoolUpdateManyWithWhereWithoutAppreciationRuleSetInput
    | Prisma.SchoolUpdateManyWithWhereWithoutAppreciationRuleSetInput[];
  deleteMany?: Prisma.SchoolScalarWhereInput | Prisma.SchoolScalarWhereInput[];
};

export type SchoolCreateWithoutTimetableCategoriesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutTimetableCategoriesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutTimetableCategoriesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolUncheckedCreateWithoutTimetableCategoriesInput
  >;
};

export type SchoolUpsertWithoutTimetableCategoriesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutTimetableCategoriesInput,
    Prisma.SchoolUncheckedUpdateWithoutTimetableCategoriesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutTimetableCategoriesInput,
    Prisma.SchoolUncheckedCreateWithoutTimetableCategoriesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutTimetableCategoriesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutTimetableCategoriesInput,
    Prisma.SchoolUncheckedUpdateWithoutTimetableCategoriesInput
  >;
};

export type SchoolUpdateWithoutTimetableCategoriesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutTimetableCategoriesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutInventoryAssetsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutInventoryAssetsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutInventoryAssetsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryAssetsInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryAssetsInput
  >;
};

export type SchoolUpsertWithoutInventoryAssetsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutInventoryAssetsInput,
    Prisma.SchoolUncheckedUpdateWithoutInventoryAssetsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryAssetsInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryAssetsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutInventoryAssetsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutInventoryAssetsInput,
    Prisma.SchoolUncheckedUpdateWithoutInventoryAssetsInput
  >;
};

export type SchoolUpdateWithoutInventoryAssetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutInventoryAssetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutInventoryConsumablesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutInventoryConsumablesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutInventoryConsumablesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryConsumablesInput
  >;
};

export type SchoolUpsertWithoutInventoryConsumablesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutInventoryConsumablesInput,
    Prisma.SchoolUncheckedUpdateWithoutInventoryConsumablesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutInventoryConsumablesInput,
    Prisma.SchoolUncheckedCreateWithoutInventoryConsumablesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutInventoryConsumablesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutInventoryConsumablesInput,
    Prisma.SchoolUncheckedUpdateWithoutInventoryConsumablesInput
  >;
};

export type SchoolUpdateWithoutInventoryConsumablesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutInventoryConsumablesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutConsumableUsagesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutConsumableUsagesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutConsumableUsagesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutConsumableUsagesInput,
    Prisma.SchoolUncheckedCreateWithoutConsumableUsagesInput
  >;
};

export type SchoolUpsertWithoutConsumableUsagesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutConsumableUsagesInput,
    Prisma.SchoolUncheckedUpdateWithoutConsumableUsagesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutConsumableUsagesInput,
    Prisma.SchoolUncheckedCreateWithoutConsumableUsagesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutConsumableUsagesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutConsumableUsagesInput,
    Prisma.SchoolUncheckedUpdateWithoutConsumableUsagesInput
  >;
};

export type SchoolUpdateWithoutConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutConsumableUsagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutStockMovementsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutStockMovementsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutStockMovementsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutStockMovementsInput,
    Prisma.SchoolUncheckedCreateWithoutStockMovementsInput
  >;
};

export type SchoolUpsertWithoutStockMovementsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutStockMovementsInput,
    Prisma.SchoolUncheckedUpdateWithoutStockMovementsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutStockMovementsInput,
    Prisma.SchoolUncheckedCreateWithoutStockMovementsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutStockMovementsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutStockMovementsInput,
    Prisma.SchoolUncheckedUpdateWithoutStockMovementsInput
  >;
};

export type SchoolUpdateWithoutStockMovementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutStockMovementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutPermissionsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutPermissionsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutPermissionsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutPermissionsInput,
    Prisma.SchoolUncheckedCreateWithoutPermissionsInput
  >;
};

export type SchoolUpsertWithoutPermissionsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutPermissionsInput,
    Prisma.SchoolUncheckedUpdateWithoutPermissionsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutPermissionsInput,
    Prisma.SchoolUncheckedCreateWithoutPermissionsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutPermissionsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutPermissionsInput,
    Prisma.SchoolUncheckedUpdateWithoutPermissionsInput
  >;
};

export type SchoolUpdateWithoutPermissionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutPermissionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutClassroomsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutClassroomsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutClassroomsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutClassroomsInput,
    Prisma.SchoolUncheckedCreateWithoutClassroomsInput
  >;
};

export type SchoolUpsertWithoutClassroomsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutClassroomsInput,
    Prisma.SchoolUncheckedUpdateWithoutClassroomsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutClassroomsInput,
    Prisma.SchoolUncheckedCreateWithoutClassroomsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutClassroomsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutClassroomsInput,
    Prisma.SchoolUncheckedUpdateWithoutClassroomsInput
  >;
};

export type SchoolUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutLevelsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutLevelsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutLevelsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutLevelsInput,
    Prisma.SchoolUncheckedCreateWithoutLevelsInput
  >;
};

export type SchoolUpsertWithoutLevelsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutLevelsInput,
    Prisma.SchoolUncheckedUpdateWithoutLevelsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutLevelsInput,
    Prisma.SchoolUncheckedCreateWithoutLevelsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutLevelsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutLevelsInput,
    Prisma.SchoolUncheckedUpdateWithoutLevelsInput
  >;
};

export type SchoolUpdateWithoutLevelsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutLevelsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutTermsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutTermsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutTermsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutTermsInput,
    Prisma.SchoolUncheckedCreateWithoutTermsInput
  >;
};

export type SchoolUpsertWithoutTermsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutTermsInput,
    Prisma.SchoolUncheckedUpdateWithoutTermsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutTermsInput,
    Prisma.SchoolUncheckedCreateWithoutTermsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutTermsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutTermsInput,
    Prisma.SchoolUncheckedUpdateWithoutTermsInput
  >;
};

export type SchoolUpdateWithoutTermsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutTermsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutRelationshipsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutRelationshipsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutRelationshipsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutRelationshipsInput,
    Prisma.SchoolUncheckedCreateWithoutRelationshipsInput
  >;
};

export type SchoolUpsertWithoutRelationshipsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutRelationshipsInput,
    Prisma.SchoolUncheckedUpdateWithoutRelationshipsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutRelationshipsInput,
    Prisma.SchoolUncheckedCreateWithoutRelationshipsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutRelationshipsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutRelationshipsInput,
    Prisma.SchoolUncheckedUpdateWithoutRelationshipsInput
  >;
};

export type SchoolUpdateWithoutRelationshipsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutRelationshipsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutDegreesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutDegreesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutDegreesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutDegreesInput,
    Prisma.SchoolUncheckedCreateWithoutDegreesInput
  >;
};

export type SchoolUpsertWithoutDegreesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutDegreesInput,
    Prisma.SchoolUncheckedUpdateWithoutDegreesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutDegreesInput,
    Prisma.SchoolUncheckedCreateWithoutDegreesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutDegreesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutDegreesInput,
    Prisma.SchoolUncheckedUpdateWithoutDegreesInput
  >;
};

export type SchoolUpdateWithoutDegreesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutDegreesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutStaffsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutStaffsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutStaffsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutStaffsInput,
    Prisma.SchoolUncheckedCreateWithoutStaffsInput
  >;
};

export type SchoolUpsertWithoutStaffsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutStaffsInput,
    Prisma.SchoolUncheckedUpdateWithoutStaffsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutStaffsInput,
    Prisma.SchoolUncheckedCreateWithoutStaffsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutStaffsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutStaffsInput,
    Prisma.SchoolUncheckedUpdateWithoutStaffsInput
  >;
};

export type SchoolUpdateWithoutStaffsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutStaffsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutDocumentsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutDocumentsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutDocumentsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutDocumentsInput,
    Prisma.SchoolUncheckedCreateWithoutDocumentsInput
  >;
};

export type SchoolUpsertWithoutDocumentsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutDocumentsInput,
    Prisma.SchoolUncheckedUpdateWithoutDocumentsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutDocumentsInput,
    Prisma.SchoolUncheckedCreateWithoutDocumentsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutDocumentsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutDocumentsInput,
    Prisma.SchoolUncheckedUpdateWithoutDocumentsInput
  >;
};

export type SchoolUpdateWithoutDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutDocumentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutStudentsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutStudentsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutStudentsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutStudentsInput,
    Prisma.SchoolUncheckedCreateWithoutStudentsInput
  >;
};

export type SchoolUpsertWithoutStudentsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutStudentsInput,
    Prisma.SchoolUncheckedUpdateWithoutStudentsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutStudentsInput,
    Prisma.SchoolUncheckedCreateWithoutStudentsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutStudentsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutStudentsInput,
    Prisma.SchoolUncheckedUpdateWithoutStudentsInput
  >;
};

export type SchoolUpdateWithoutStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutContactsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutContactsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutContactsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutContactsInput,
    Prisma.SchoolUncheckedCreateWithoutContactsInput
  >;
};

export type SchoolUpsertWithoutContactsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutContactsInput,
    Prisma.SchoolUncheckedUpdateWithoutContactsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutContactsInput,
    Prisma.SchoolUncheckedCreateWithoutContactsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutContactsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutContactsInput,
    Prisma.SchoolUncheckedUpdateWithoutContactsInput
  >;
};

export type SchoolUpdateWithoutContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutRequiredJournalsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutRequiredJournalsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutRequiredJournalsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutRequiredJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutRequiredJournalsInput
  >;
};

export type SchoolUpsertWithoutRequiredJournalsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutRequiredJournalsInput,
    Prisma.SchoolUncheckedUpdateWithoutRequiredJournalsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutRequiredJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutRequiredJournalsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutRequiredJournalsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutRequiredJournalsInput,
    Prisma.SchoolUncheckedUpdateWithoutRequiredJournalsInput
  >;
};

export type SchoolUpdateWithoutRequiredJournalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutRequiredJournalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutFormerSchoolsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutFormerSchoolsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutFormerSchoolsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutFormerSchoolsInput,
    Prisma.SchoolUncheckedCreateWithoutFormerSchoolsInput
  >;
};

export type SchoolUpsertWithoutFormerSchoolsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutFormerSchoolsInput,
    Prisma.SchoolUncheckedUpdateWithoutFormerSchoolsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutFormerSchoolsInput,
    Prisma.SchoolUncheckedCreateWithoutFormerSchoolsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutFormerSchoolsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutFormerSchoolsInput,
    Prisma.SchoolUncheckedUpdateWithoutFormerSchoolsInput
  >;
};

export type SchoolUpdateWithoutFormerSchoolsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutFormerSchoolsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutSubjectGroupInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutSubjectGroupInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutSubjectGroupInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSubjectGroupInput,
    Prisma.SchoolUncheckedCreateWithoutSubjectGroupInput
  >;
};

export type SchoolUpsertWithoutSubjectGroupInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSubjectGroupInput,
    Prisma.SchoolUncheckedUpdateWithoutSubjectGroupInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSubjectGroupInput,
    Prisma.SchoolUncheckedCreateWithoutSubjectGroupInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutSubjectGroupInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSubjectGroupInput,
    Prisma.SchoolUncheckedUpdateWithoutSubjectGroupInput
  >;
};

export type SchoolUpdateWithoutSubjectGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutSubjectGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutCoursesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutCoursesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutCoursesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutCoursesInput,
    Prisma.SchoolUncheckedCreateWithoutCoursesInput
  >;
};

export type SchoolUpsertWithoutCoursesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutCoursesInput,
    Prisma.SchoolUncheckedUpdateWithoutCoursesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutCoursesInput,
    Prisma.SchoolUncheckedCreateWithoutCoursesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutCoursesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutCoursesInput,
    Prisma.SchoolUncheckedUpdateWithoutCoursesInput
  >;
};

export type SchoolUpdateWithoutCoursesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutCoursesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutSchoolYearsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutSchoolYearsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutSchoolYearsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearsInput
  >;
};

export type SchoolUpsertWithoutSchoolYearsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSchoolYearsInput,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutSchoolYearsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSchoolYearsInput,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearsInput
  >;
};

export type SchoolUpdateWithoutSchoolYearsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutSchoolYearsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutCyclesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutCyclesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutCyclesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutCyclesInput,
    Prisma.SchoolUncheckedCreateWithoutCyclesInput
  >;
};

export type SchoolUpsertWithoutCyclesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutCyclesInput,
    Prisma.SchoolUncheckedUpdateWithoutCyclesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutCyclesInput,
    Prisma.SchoolUncheckedCreateWithoutCyclesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutCyclesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutCyclesInput,
    Prisma.SchoolUncheckedUpdateWithoutCyclesInput
  >;
};

export type SchoolUpdateWithoutCyclesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutCyclesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutSectionsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutSectionsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutSectionsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSectionsInput,
    Prisma.SchoolUncheckedCreateWithoutSectionsInput
  >;
};

export type SchoolUpsertWithoutSectionsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSectionsInput,
    Prisma.SchoolUncheckedUpdateWithoutSectionsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSectionsInput,
    Prisma.SchoolUncheckedCreateWithoutSectionsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutSectionsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSectionsInput,
    Prisma.SchoolUncheckedUpdateWithoutSectionsInput
  >;
};

export type SchoolUpdateWithoutSectionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutSectionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutReligionsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutReligionsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutReligionsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutReligionsInput,
    Prisma.SchoolUncheckedCreateWithoutReligionsInput
  >;
};

export type SchoolUpsertWithoutReligionsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutReligionsInput,
    Prisma.SchoolUncheckedUpdateWithoutReligionsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutReligionsInput,
    Prisma.SchoolUncheckedCreateWithoutReligionsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutReligionsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutReligionsInput,
    Prisma.SchoolUncheckedUpdateWithoutReligionsInput
  >;
};

export type SchoolUpdateWithoutReligionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutReligionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutClubsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutClubsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutClubsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutClubsInput,
    Prisma.SchoolUncheckedCreateWithoutClubsInput
  >;
};

export type SchoolUpsertWithoutClubsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutClubsInput,
    Prisma.SchoolUncheckedUpdateWithoutClubsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutClubsInput,
    Prisma.SchoolUncheckedCreateWithoutClubsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutClubsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutClubsInput,
    Prisma.SchoolUncheckedUpdateWithoutClubsInput
  >;
};

export type SchoolUpdateWithoutClubsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutClubsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutSportsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutSportsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutSportsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSportsInput,
    Prisma.SchoolUncheckedCreateWithoutSportsInput
  >;
};

export type SchoolUpsertWithoutSportsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSportsInput,
    Prisma.SchoolUncheckedUpdateWithoutSportsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSportsInput,
    Prisma.SchoolUncheckedCreateWithoutSportsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutSportsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSportsInput,
    Prisma.SchoolUncheckedUpdateWithoutSportsInput
  >;
};

export type SchoolUpdateWithoutSportsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutSportsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutAccountingJournalsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutAccountingJournalsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutAccountingJournalsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutAccountingJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutAccountingJournalsInput
  >;
};

export type SchoolUpsertWithoutAccountingJournalsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutAccountingJournalsInput,
    Prisma.SchoolUncheckedUpdateWithoutAccountingJournalsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutAccountingJournalsInput,
    Prisma.SchoolUncheckedCreateWithoutAccountingJournalsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutAccountingJournalsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutAccountingJournalsInput,
    Prisma.SchoolUncheckedUpdateWithoutAccountingJournalsInput
  >;
};

export type SchoolUpdateWithoutAccountingJournalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutAccountingJournalsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutUsersInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutUsersInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutUsersInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutUsersInput,
    Prisma.SchoolUncheckedCreateWithoutUsersInput
  >;
};

export type SchoolUpsertWithoutUsersInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutUsersInput,
    Prisma.SchoolUncheckedUpdateWithoutUsersInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutUsersInput,
    Prisma.SchoolUncheckedCreateWithoutUsersInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutUsersInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutUsersInput,
    Prisma.SchoolUncheckedUpdateWithoutUsersInput
  >;
};

export type SchoolUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutRolesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutRolesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutRolesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutRolesInput,
    Prisma.SchoolUncheckedCreateWithoutRolesInput
  >;
};

export type SchoolUpsertWithoutRolesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutRolesInput,
    Prisma.SchoolUncheckedUpdateWithoutRolesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutRolesInput,
    Prisma.SchoolUncheckedCreateWithoutRolesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutRolesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutRolesInput,
    Prisma.SchoolUncheckedUpdateWithoutRolesInput
  >;
};

export type SchoolUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutLogActivitiesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutLogActivitiesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutLogActivitiesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutLogActivitiesInput,
    Prisma.SchoolUncheckedCreateWithoutLogActivitiesInput
  >;
};

export type SchoolUpsertWithoutLogActivitiesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutLogActivitiesInput,
    Prisma.SchoolUncheckedUpdateWithoutLogActivitiesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutLogActivitiesInput,
    Prisma.SchoolUncheckedCreateWithoutLogActivitiesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutLogActivitiesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutLogActivitiesInput,
    Prisma.SchoolUncheckedUpdateWithoutLogActivitiesInput
  >;
};

export type SchoolUpdateWithoutLogActivitiesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutLogActivitiesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutSchoolYearEventsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutSchoolYearEventsInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutSchoolYearEventsInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventsInput
  >;
};

export type SchoolUpsertWithoutSchoolYearEventsInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSchoolYearEventsInput,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearEventsInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventsInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventsInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutSchoolYearEventsInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSchoolYearEventsInput,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearEventsInput
  >;
};

export type SchoolUpdateWithoutSchoolYearEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutSchoolYearEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutSchoolYearEventTypesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetCreateNestedOneWithoutSchoolsInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutSchoolYearEventTypesInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  appreciationRuleSetId?: string | null;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutSchoolYearEventTypesInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventTypesInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventTypesInput
  >;
};

export type SchoolUpsertWithoutSchoolYearEventTypesInput = {
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSchoolYearEventTypesInput,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearEventTypesInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutSchoolYearEventTypesInput,
    Prisma.SchoolUncheckedCreateWithoutSchoolYearEventTypesInput
  >;
  where?: Prisma.SchoolWhereInput;
};

export type SchoolUpdateToOneWithWhereWithoutSchoolYearEventTypesInput = {
  where?: Prisma.SchoolWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutSchoolYearEventTypesInput,
    Prisma.SchoolUncheckedUpdateWithoutSchoolYearEventTypesInput
  >;
};

export type SchoolUpdateWithoutSchoolYearEventTypesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  AppreciationRuleSet?: Prisma.AppreciationRuleSetUpdateOneWithoutSchoolsNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutSchoolYearEventTypesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  appreciationRuleSetId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolCreateWithoutAppreciationRuleSetInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalCreateNestedManyWithoutSchoolInput;
};

export type SchoolUncheckedCreateWithoutAppreciationRuleSetInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
  contacts?: Prisma.ContactUncheckedCreateNestedManyWithoutSchoolInput;
  users?: Prisma.UserUncheckedCreateNestedManyWithoutSchoolInput;
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutSchoolInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutSchoolInput;
  staffs?: Prisma.StaffUncheckedCreateNestedManyWithoutSchoolInput;
  formerSchools?: Prisma.FormerSchoolUncheckedCreateNestedManyWithoutSchoolInput;
  religions?: Prisma.ReligionUncheckedCreateNestedManyWithoutSchoolInput;
  sports?: Prisma.SportUncheckedCreateNestedManyWithoutSchoolInput;
  clubs?: Prisma.ClubUncheckedCreateNestedManyWithoutSchoolInput;
  permissions?: Prisma.PolicyUncheckedCreateNestedManyWithoutSchoolInput;
  roles?: Prisma.RoleUncheckedCreateNestedManyWithoutSchoolInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedCreateNestedManyWithoutSchoolInput;
  courses?: Prisma.CourseUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYears?: Prisma.SchoolYearUncheckedCreateNestedManyWithoutSchoolInput;
  cycles?: Prisma.ClassroomCycleUncheckedCreateNestedManyWithoutSchoolInput;
  sections?: Prisma.ClassroomSectionUncheckedCreateNestedManyWithoutSchoolInput;
  levels?: Prisma.ClassroomLevelUncheckedCreateNestedManyWithoutSchoolInput;
  terms?: Prisma.TermUncheckedCreateNestedManyWithoutSchoolInput;
  documents?: Prisma.DocumentUncheckedCreateNestedManyWithoutSchoolInput;
  degrees?: Prisma.StaffDegreeUncheckedCreateNestedManyWithoutSchoolInput;
  relationships?: Prisma.ContactRelationshipUncheckedCreateNestedManyWithoutSchoolInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedCreateNestedManyWithoutSchoolInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedCreateNestedManyWithoutSchoolInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedCreateNestedManyWithoutSchoolInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedCreateNestedManyWithoutSchoolInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedCreateNestedManyWithoutSchoolInput;
  logActivities?: Prisma.LogActivityUncheckedCreateNestedManyWithoutSchoolInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedCreateNestedManyWithoutSchoolInput;
};

export type SchoolCreateOrConnectWithoutAppreciationRuleSetInput = {
  where: Prisma.SchoolWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutAppreciationRuleSetInput,
    Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput
  >;
};

export type SchoolCreateManyAppreciationRuleSetInputEnvelope = {
  data:
    | Prisma.SchoolCreateManyAppreciationRuleSetInput
    | Prisma.SchoolCreateManyAppreciationRuleSetInput[];
  skipDuplicates?: boolean;
};

export type SchoolUpsertWithWhereUniqueWithoutAppreciationRuleSetInput = {
  where: Prisma.SchoolWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.SchoolUpdateWithoutAppreciationRuleSetInput,
    Prisma.SchoolUncheckedUpdateWithoutAppreciationRuleSetInput
  >;
  create: Prisma.XOR<
    Prisma.SchoolCreateWithoutAppreciationRuleSetInput,
    Prisma.SchoolUncheckedCreateWithoutAppreciationRuleSetInput
  >;
};

export type SchoolUpdateWithWhereUniqueWithoutAppreciationRuleSetInput = {
  where: Prisma.SchoolWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateWithoutAppreciationRuleSetInput,
    Prisma.SchoolUncheckedUpdateWithoutAppreciationRuleSetInput
  >;
};

export type SchoolUpdateManyWithWhereWithoutAppreciationRuleSetInput = {
  where: Prisma.SchoolScalarWhereInput;
  data: Prisma.XOR<
    Prisma.SchoolUpdateManyMutationInput,
    Prisma.SchoolUncheckedUpdateManyWithoutAppreciationRuleSetInput
  >;
};

export type SchoolScalarWhereInput = {
  AND?: Prisma.SchoolScalarWhereInput | Prisma.SchoolScalarWhereInput[];
  OR?: Prisma.SchoolScalarWhereInput[];
  NOT?: Prisma.SchoolScalarWhereInput | Prisma.SchoolScalarWhereInput[];
  id?: Prisma.StringFilter<"School"> | string;
  code?: Prisma.StringFilter<"School"> | string;
  name?: Prisma.StringFilter<"School"> | string;
  authorization?: Prisma.StringNullableFilter<"School"> | string | null;
  ministry?: Prisma.StringNullableFilter<"School"> | string | null;
  department?: Prisma.StringNullableFilter<"School"> | string | null;
  region?: Prisma.StringNullableFilter<"School"> | string | null;
  defaultLocale?: Prisma.StringFilter<"School"> | string;
  city?: Prisma.StringNullableFilter<"School"> | string | null;
  headmaster?: Prisma.StringNullableFilter<"School"> | string | null;
  phoneNumber1?: Prisma.StringNullableFilter<"School"> | string | null;
  phoneNumber2?: Prisma.StringNullableFilter<"School"> | string | null;
  email?: Prisma.StringNullableFilter<"School"> | string | null;
  website?: Prisma.StringNullableFilter<"School"> | string | null;
  numberOfReceipts?: Prisma.IntNullableFilter<"School"> | number | null;
  logo?: Prisma.StringNullableFilter<"School"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"School"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"School"> | Date | string;
  isActive?: Prisma.BoolFilter<"School"> | boolean;
  address?: Prisma.StringNullableFilter<"School"> | string | null;
  timezone?: Prisma.StringFilter<"School"> | string;
  defaultCountryId?: Prisma.StringNullableFilter<"School"> | string | null;
  registrationPrefix?: Prisma.StringFilter<"School"> | string;
  requestSunPlusNo?: Prisma.BoolNullableFilter<"School"> | boolean | null;
  allowOverEnrollment?: Prisma.BoolNullableFilter<"School"> | boolean | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFilter<"School">
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?: Prisma.BoolNullableFilter<"School"> | boolean | null;
  hasQuarterlyReports?: Prisma.BoolFilter<"School"> | boolean;
  currency?: Prisma.StringFilter<"School"> | string;
  appreciationRuleSetId?: Prisma.StringNullableFilter<"School"> | string | null;
};

export type SchoolCreateManyAppreciationRuleSetInput = {
  id?: string;
  code: string;
  name: string;
  authorization?: string | null;
  ministry?: string | null;
  department?: string | null;
  region?: string | null;
  defaultLocale?: string;
  city?: string | null;
  headmaster?: string | null;
  phoneNumber1?: string | null;
  phoneNumber2?: string | null;
  email?: string | null;
  website?: string | null;
  numberOfReceipts?: number | null;
  logo?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  isActive?: boolean;
  address?: string | null;
  timezone?: string;
  defaultCountryId?: string | null;
  registrationPrefix?: string;
  requestSunPlusNo?: boolean | null;
  allowOverEnrollment?: boolean | null;
  applyRequiredFee?: $Enums.ApplyRequiredFee;
  includeRequiredFee?: boolean | null;
  hasQuarterlyReports?: boolean;
  currency: string;
};

export type SchoolUpdateWithoutAppreciationRuleSetInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateWithoutAppreciationRuleSetInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
  contacts?: Prisma.ContactUncheckedUpdateManyWithoutSchoolNestedInput;
  users?: Prisma.UserUncheckedUpdateManyWithoutSchoolNestedInput;
  students?: Prisma.StudentUncheckedUpdateManyWithoutSchoolNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutSchoolNestedInput;
  staffs?: Prisma.StaffUncheckedUpdateManyWithoutSchoolNestedInput;
  formerSchools?: Prisma.FormerSchoolUncheckedUpdateManyWithoutSchoolNestedInput;
  religions?: Prisma.ReligionUncheckedUpdateManyWithoutSchoolNestedInput;
  sports?: Prisma.SportUncheckedUpdateManyWithoutSchoolNestedInput;
  clubs?: Prisma.ClubUncheckedUpdateManyWithoutSchoolNestedInput;
  permissions?: Prisma.PolicyUncheckedUpdateManyWithoutSchoolNestedInput;
  roles?: Prisma.RoleUncheckedUpdateManyWithoutSchoolNestedInput;
  subjectGroup?: Prisma.SubjectGroupUncheckedUpdateManyWithoutSchoolNestedInput;
  courses?: Prisma.CourseUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYears?: Prisma.SchoolYearUncheckedUpdateManyWithoutSchoolNestedInput;
  cycles?: Prisma.ClassroomCycleUncheckedUpdateManyWithoutSchoolNestedInput;
  sections?: Prisma.ClassroomSectionUncheckedUpdateManyWithoutSchoolNestedInput;
  levels?: Prisma.ClassroomLevelUncheckedUpdateManyWithoutSchoolNestedInput;
  terms?: Prisma.TermUncheckedUpdateManyWithoutSchoolNestedInput;
  documents?: Prisma.DocumentUncheckedUpdateManyWithoutSchoolNestedInput;
  degrees?: Prisma.StaffDegreeUncheckedUpdateManyWithoutSchoolNestedInput;
  relationships?: Prisma.ContactRelationshipUncheckedUpdateManyWithoutSchoolNestedInput;
  timetableCategories?: Prisma.TimetableCategoryUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryAssets?: Prisma.InventoryAssetUncheckedUpdateManyWithoutSchoolNestedInput;
  inventoryConsumables?: Prisma.InventoryConsumableUncheckedUpdateManyWithoutSchoolNestedInput;
  stockMovements?: Prisma.InventoryStockMovementUncheckedUpdateManyWithoutSchoolNestedInput;
  consumableUsages?: Prisma.InventoryConsumableUsageUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEvents?: Prisma.SchoolYearEventUncheckedUpdateManyWithoutSchoolNestedInput;
  schoolYearEventTypes?: Prisma.SchoolYearEventTypeUncheckedUpdateManyWithoutSchoolNestedInput;
  logActivities?: Prisma.LogActivityUncheckedUpdateManyWithoutSchoolNestedInput;
  accountingJournals?: Prisma.AccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
  requiredJournals?: Prisma.RequiredAccountingJournalUncheckedUpdateManyWithoutSchoolNestedInput;
};

export type SchoolUncheckedUpdateManyWithoutAppreciationRuleSetInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  code?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  authorization?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  ministry?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  region?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  defaultLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  headmaster?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  phoneNumber1?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  phoneNumber2?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  website?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberOfReceipts?:
    | Prisma.NullableIntFieldUpdateOperationsInput
    | number
    | null;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  timezone?: Prisma.StringFieldUpdateOperationsInput | string;
  defaultCountryId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  registrationPrefix?: Prisma.StringFieldUpdateOperationsInput | string;
  requestSunPlusNo?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  allowOverEnrollment?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  applyRequiredFee?:
    | Prisma.EnumApplyRequiredFeeFieldUpdateOperationsInput
    | $Enums.ApplyRequiredFee;
  includeRequiredFee?:
    | Prisma.NullableBoolFieldUpdateOperationsInput
    | boolean
    | null;
  hasQuarterlyReports?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  currency?: Prisma.StringFieldUpdateOperationsInput | string;
};

/**
 * Count Type SchoolCountOutputType
 */

export type SchoolCountOutputType = {
  contacts: number;
  users: number;
  students: number;
  classrooms: number;
  staffs: number;
  formerSchools: number;
  religions: number;
  sports: number;
  clubs: number;
  permissions: number;
  roles: number;
  subjectGroup: number;
  courses: number;
  schoolYears: number;
  cycles: number;
  sections: number;
  levels: number;
  terms: number;
  documents: number;
  degrees: number;
  relationships: number;
  timetableCategories: number;
  inventoryAssets: number;
  inventoryConsumables: number;
  stockMovements: number;
  consumableUsages: number;
  schoolYearEvents: number;
  schoolYearEventTypes: number;
  logActivities: number;
  accountingJournals: number;
  requiredJournals: number;
};

export type SchoolCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  contacts?: boolean | SchoolCountOutputTypeCountContactsArgs;
  users?: boolean | SchoolCountOutputTypeCountUsersArgs;
  students?: boolean | SchoolCountOutputTypeCountStudentsArgs;
  classrooms?: boolean | SchoolCountOutputTypeCountClassroomsArgs;
  staffs?: boolean | SchoolCountOutputTypeCountStaffsArgs;
  formerSchools?: boolean | SchoolCountOutputTypeCountFormerSchoolsArgs;
  religions?: boolean | SchoolCountOutputTypeCountReligionsArgs;
  sports?: boolean | SchoolCountOutputTypeCountSportsArgs;
  clubs?: boolean | SchoolCountOutputTypeCountClubsArgs;
  permissions?: boolean | SchoolCountOutputTypeCountPermissionsArgs;
  roles?: boolean | SchoolCountOutputTypeCountRolesArgs;
  subjectGroup?: boolean | SchoolCountOutputTypeCountSubjectGroupArgs;
  courses?: boolean | SchoolCountOutputTypeCountCoursesArgs;
  schoolYears?: boolean | SchoolCountOutputTypeCountSchoolYearsArgs;
  cycles?: boolean | SchoolCountOutputTypeCountCyclesArgs;
  sections?: boolean | SchoolCountOutputTypeCountSectionsArgs;
  levels?: boolean | SchoolCountOutputTypeCountLevelsArgs;
  terms?: boolean | SchoolCountOutputTypeCountTermsArgs;
  documents?: boolean | SchoolCountOutputTypeCountDocumentsArgs;
  degrees?: boolean | SchoolCountOutputTypeCountDegreesArgs;
  relationships?: boolean | SchoolCountOutputTypeCountRelationshipsArgs;
  timetableCategories?:
    | boolean
    | SchoolCountOutputTypeCountTimetableCategoriesArgs;
  inventoryAssets?: boolean | SchoolCountOutputTypeCountInventoryAssetsArgs;
  inventoryConsumables?:
    | boolean
    | SchoolCountOutputTypeCountInventoryConsumablesArgs;
  stockMovements?: boolean | SchoolCountOutputTypeCountStockMovementsArgs;
  consumableUsages?: boolean | SchoolCountOutputTypeCountConsumableUsagesArgs;
  schoolYearEvents?: boolean | SchoolCountOutputTypeCountSchoolYearEventsArgs;
  schoolYearEventTypes?:
    | boolean
    | SchoolCountOutputTypeCountSchoolYearEventTypesArgs;
  logActivities?: boolean | SchoolCountOutputTypeCountLogActivitiesArgs;
  accountingJournals?:
    | boolean
    | SchoolCountOutputTypeCountAccountingJournalsArgs;
  requiredJournals?: boolean | SchoolCountOutputTypeCountRequiredJournalsArgs;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolCountOutputType
   */
  select?: Prisma.SchoolCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountContactsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ContactWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountUsersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountStudentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountClassroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountStaffsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StaffWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountFormerSchoolsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FormerSchoolWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountReligionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReligionWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountSportsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SportWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountClubsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClubWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountPermissionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PolicyWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountRolesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.RoleWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountSubjectGroupArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SubjectGroupWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountCoursesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CourseWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountSchoolYearsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolYearWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountCyclesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomCycleWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountSectionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomSectionWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountLevelsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomLevelWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountTermsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TermWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountDocumentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.DocumentWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountDegreesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StaffDegreeWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountRelationshipsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ContactRelationshipWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountTimetableCategoriesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TimetableCategoryWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountInventoryAssetsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryAssetWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountInventoryConsumablesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryConsumableWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountStockMovementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryStockMovementWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountConsumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InventoryConsumableUsageWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountSchoolYearEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolYearEventWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountSchoolYearEventTypesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SchoolYearEventTypeWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountLogActivitiesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.LogActivityWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountAccountingJournalsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AccountingJournalWhereInput;
};

/**
 * SchoolCountOutputType without action
 */
export type SchoolCountOutputTypeCountRequiredJournalsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.RequiredAccountingJournalWhereInput;
};

export type SchoolSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    code?: boolean;
    name?: boolean;
    authorization?: boolean;
    ministry?: boolean;
    department?: boolean;
    region?: boolean;
    defaultLocale?: boolean;
    city?: boolean;
    headmaster?: boolean;
    phoneNumber1?: boolean;
    phoneNumber2?: boolean;
    email?: boolean;
    website?: boolean;
    numberOfReceipts?: boolean;
    logo?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    isActive?: boolean;
    address?: boolean;
    timezone?: boolean;
    defaultCountryId?: boolean;
    registrationPrefix?: boolean;
    requestSunPlusNo?: boolean;
    allowOverEnrollment?: boolean;
    applyRequiredFee?: boolean;
    includeRequiredFee?: boolean;
    hasQuarterlyReports?: boolean;
    currency?: boolean;
    appreciationRuleSetId?: boolean;
    contacts?: boolean | Prisma.School$contactsArgs<ExtArgs>;
    users?: boolean | Prisma.School$usersArgs<ExtArgs>;
    students?: boolean | Prisma.School$studentsArgs<ExtArgs>;
    classrooms?: boolean | Prisma.School$classroomsArgs<ExtArgs>;
    staffs?: boolean | Prisma.School$staffsArgs<ExtArgs>;
    formerSchools?: boolean | Prisma.School$formerSchoolsArgs<ExtArgs>;
    religions?: boolean | Prisma.School$religionsArgs<ExtArgs>;
    sports?: boolean | Prisma.School$sportsArgs<ExtArgs>;
    clubs?: boolean | Prisma.School$clubsArgs<ExtArgs>;
    permissions?: boolean | Prisma.School$permissionsArgs<ExtArgs>;
    roles?: boolean | Prisma.School$rolesArgs<ExtArgs>;
    subjectGroup?: boolean | Prisma.School$subjectGroupArgs<ExtArgs>;
    courses?: boolean | Prisma.School$coursesArgs<ExtArgs>;
    schoolYears?: boolean | Prisma.School$schoolYearsArgs<ExtArgs>;
    cycles?: boolean | Prisma.School$cyclesArgs<ExtArgs>;
    sections?: boolean | Prisma.School$sectionsArgs<ExtArgs>;
    levels?: boolean | Prisma.School$levelsArgs<ExtArgs>;
    terms?: boolean | Prisma.School$termsArgs<ExtArgs>;
    documents?: boolean | Prisma.School$documentsArgs<ExtArgs>;
    degrees?: boolean | Prisma.School$degreesArgs<ExtArgs>;
    relationships?: boolean | Prisma.School$relationshipsArgs<ExtArgs>;
    timetableCategories?:
      | boolean
      | Prisma.School$timetableCategoriesArgs<ExtArgs>;
    inventoryAssets?: boolean | Prisma.School$inventoryAssetsArgs<ExtArgs>;
    inventoryConsumables?:
      | boolean
      | Prisma.School$inventoryConsumablesArgs<ExtArgs>;
    stockMovements?: boolean | Prisma.School$stockMovementsArgs<ExtArgs>;
    consumableUsages?: boolean | Prisma.School$consumableUsagesArgs<ExtArgs>;
    schoolYearEvents?: boolean | Prisma.School$schoolYearEventsArgs<ExtArgs>;
    schoolYearEventTypes?:
      | boolean
      | Prisma.School$schoolYearEventTypesArgs<ExtArgs>;
    logActivities?: boolean | Prisma.School$logActivitiesArgs<ExtArgs>;
    AppreciationRuleSet?:
      | boolean
      | Prisma.School$AppreciationRuleSetArgs<ExtArgs>;
    accountingJournals?:
      | boolean
      | Prisma.School$accountingJournalsArgs<ExtArgs>;
    requiredJournals?: boolean | Prisma.School$requiredJournalsArgs<ExtArgs>;
    _count?: boolean | Prisma.SchoolCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["school"]
>;

export type SchoolSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    code?: boolean;
    name?: boolean;
    authorization?: boolean;
    ministry?: boolean;
    department?: boolean;
    region?: boolean;
    defaultLocale?: boolean;
    city?: boolean;
    headmaster?: boolean;
    phoneNumber1?: boolean;
    phoneNumber2?: boolean;
    email?: boolean;
    website?: boolean;
    numberOfReceipts?: boolean;
    logo?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    isActive?: boolean;
    address?: boolean;
    timezone?: boolean;
    defaultCountryId?: boolean;
    registrationPrefix?: boolean;
    requestSunPlusNo?: boolean;
    allowOverEnrollment?: boolean;
    applyRequiredFee?: boolean;
    includeRequiredFee?: boolean;
    hasQuarterlyReports?: boolean;
    currency?: boolean;
    appreciationRuleSetId?: boolean;
    AppreciationRuleSet?:
      | boolean
      | Prisma.School$AppreciationRuleSetArgs<ExtArgs>;
  },
  ExtArgs["result"]["school"]
>;

export type SchoolSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    code?: boolean;
    name?: boolean;
    authorization?: boolean;
    ministry?: boolean;
    department?: boolean;
    region?: boolean;
    defaultLocale?: boolean;
    city?: boolean;
    headmaster?: boolean;
    phoneNumber1?: boolean;
    phoneNumber2?: boolean;
    email?: boolean;
    website?: boolean;
    numberOfReceipts?: boolean;
    logo?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    isActive?: boolean;
    address?: boolean;
    timezone?: boolean;
    defaultCountryId?: boolean;
    registrationPrefix?: boolean;
    requestSunPlusNo?: boolean;
    allowOverEnrollment?: boolean;
    applyRequiredFee?: boolean;
    includeRequiredFee?: boolean;
    hasQuarterlyReports?: boolean;
    currency?: boolean;
    appreciationRuleSetId?: boolean;
    AppreciationRuleSet?:
      | boolean
      | Prisma.School$AppreciationRuleSetArgs<ExtArgs>;
  },
  ExtArgs["result"]["school"]
>;

export type SchoolSelectScalar = {
  id?: boolean;
  code?: boolean;
  name?: boolean;
  authorization?: boolean;
  ministry?: boolean;
  department?: boolean;
  region?: boolean;
  defaultLocale?: boolean;
  city?: boolean;
  headmaster?: boolean;
  phoneNumber1?: boolean;
  phoneNumber2?: boolean;
  email?: boolean;
  website?: boolean;
  numberOfReceipts?: boolean;
  logo?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  isActive?: boolean;
  address?: boolean;
  timezone?: boolean;
  defaultCountryId?: boolean;
  registrationPrefix?: boolean;
  requestSunPlusNo?: boolean;
  allowOverEnrollment?: boolean;
  applyRequiredFee?: boolean;
  includeRequiredFee?: boolean;
  hasQuarterlyReports?: boolean;
  currency?: boolean;
  appreciationRuleSetId?: boolean;
};

export type SchoolOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "code"
  | "name"
  | "authorization"
  | "ministry"
  | "department"
  | "region"
  | "defaultLocale"
  | "city"
  | "headmaster"
  | "phoneNumber1"
  | "phoneNumber2"
  | "email"
  | "website"
  | "numberOfReceipts"
  | "logo"
  | "createdAt"
  | "updatedAt"
  | "isActive"
  | "address"
  | "timezone"
  | "defaultCountryId"
  | "registrationPrefix"
  | "requestSunPlusNo"
  | "allowOverEnrollment"
  | "applyRequiredFee"
  | "includeRequiredFee"
  | "hasQuarterlyReports"
  | "currency"
  | "appreciationRuleSetId",
  ExtArgs["result"]["school"]
>;
export type SchoolInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  contacts?: boolean | Prisma.School$contactsArgs<ExtArgs>;
  users?: boolean | Prisma.School$usersArgs<ExtArgs>;
  students?: boolean | Prisma.School$studentsArgs<ExtArgs>;
  classrooms?: boolean | Prisma.School$classroomsArgs<ExtArgs>;
  staffs?: boolean | Prisma.School$staffsArgs<ExtArgs>;
  formerSchools?: boolean | Prisma.School$formerSchoolsArgs<ExtArgs>;
  religions?: boolean | Prisma.School$religionsArgs<ExtArgs>;
  sports?: boolean | Prisma.School$sportsArgs<ExtArgs>;
  clubs?: boolean | Prisma.School$clubsArgs<ExtArgs>;
  permissions?: boolean | Prisma.School$permissionsArgs<ExtArgs>;
  roles?: boolean | Prisma.School$rolesArgs<ExtArgs>;
  subjectGroup?: boolean | Prisma.School$subjectGroupArgs<ExtArgs>;
  courses?: boolean | Prisma.School$coursesArgs<ExtArgs>;
  schoolYears?: boolean | Prisma.School$schoolYearsArgs<ExtArgs>;
  cycles?: boolean | Prisma.School$cyclesArgs<ExtArgs>;
  sections?: boolean | Prisma.School$sectionsArgs<ExtArgs>;
  levels?: boolean | Prisma.School$levelsArgs<ExtArgs>;
  terms?: boolean | Prisma.School$termsArgs<ExtArgs>;
  documents?: boolean | Prisma.School$documentsArgs<ExtArgs>;
  degrees?: boolean | Prisma.School$degreesArgs<ExtArgs>;
  relationships?: boolean | Prisma.School$relationshipsArgs<ExtArgs>;
  timetableCategories?:
    | boolean
    | Prisma.School$timetableCategoriesArgs<ExtArgs>;
  inventoryAssets?: boolean | Prisma.School$inventoryAssetsArgs<ExtArgs>;
  inventoryConsumables?:
    | boolean
    | Prisma.School$inventoryConsumablesArgs<ExtArgs>;
  stockMovements?: boolean | Prisma.School$stockMovementsArgs<ExtArgs>;
  consumableUsages?: boolean | Prisma.School$consumableUsagesArgs<ExtArgs>;
  schoolYearEvents?: boolean | Prisma.School$schoolYearEventsArgs<ExtArgs>;
  schoolYearEventTypes?:
    | boolean
    | Prisma.School$schoolYearEventTypesArgs<ExtArgs>;
  logActivities?: boolean | Prisma.School$logActivitiesArgs<ExtArgs>;
  AppreciationRuleSet?:
    | boolean
    | Prisma.School$AppreciationRuleSetArgs<ExtArgs>;
  accountingJournals?: boolean | Prisma.School$accountingJournalsArgs<ExtArgs>;
  requiredJournals?: boolean | Prisma.School$requiredJournalsArgs<ExtArgs>;
  _count?: boolean | Prisma.SchoolCountOutputTypeDefaultArgs<ExtArgs>;
};
export type SchoolIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  AppreciationRuleSet?:
    | boolean
    | Prisma.School$AppreciationRuleSetArgs<ExtArgs>;
};
export type SchoolIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  AppreciationRuleSet?:
    | boolean
    | Prisma.School$AppreciationRuleSetArgs<ExtArgs>;
};

export type $SchoolPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "School";
  objects: {
    contacts: Prisma.$ContactPayload<ExtArgs>[];
    users: Prisma.$UserPayload<ExtArgs>[];
    students: Prisma.$StudentPayload<ExtArgs>[];
    classrooms: Prisma.$ClassroomPayload<ExtArgs>[];
    staffs: Prisma.$StaffPayload<ExtArgs>[];
    formerSchools: Prisma.$FormerSchoolPayload<ExtArgs>[];
    religions: Prisma.$ReligionPayload<ExtArgs>[];
    sports: Prisma.$SportPayload<ExtArgs>[];
    clubs: Prisma.$ClubPayload<ExtArgs>[];
    permissions: Prisma.$PolicyPayload<ExtArgs>[];
    roles: Prisma.$RolePayload<ExtArgs>[];
    subjectGroup: Prisma.$SubjectGroupPayload<ExtArgs>[];
    courses: Prisma.$CoursePayload<ExtArgs>[];
    schoolYears: Prisma.$SchoolYearPayload<ExtArgs>[];
    cycles: Prisma.$ClassroomCyclePayload<ExtArgs>[];
    sections: Prisma.$ClassroomSectionPayload<ExtArgs>[];
    levels: Prisma.$ClassroomLevelPayload<ExtArgs>[];
    terms: Prisma.$TermPayload<ExtArgs>[];
    documents: Prisma.$DocumentPayload<ExtArgs>[];
    degrees: Prisma.$StaffDegreePayload<ExtArgs>[];
    relationships: Prisma.$ContactRelationshipPayload<ExtArgs>[];
    timetableCategories: Prisma.$TimetableCategoryPayload<ExtArgs>[];
    inventoryAssets: Prisma.$InventoryAssetPayload<ExtArgs>[];
    inventoryConsumables: Prisma.$InventoryConsumablePayload<ExtArgs>[];
    stockMovements: Prisma.$InventoryStockMovementPayload<ExtArgs>[];
    consumableUsages: Prisma.$InventoryConsumableUsagePayload<ExtArgs>[];
    schoolYearEvents: Prisma.$SchoolYearEventPayload<ExtArgs>[];
    schoolYearEventTypes: Prisma.$SchoolYearEventTypePayload<ExtArgs>[];
    logActivities: Prisma.$LogActivityPayload<ExtArgs>[];
    AppreciationRuleSet: Prisma.$AppreciationRuleSetPayload<ExtArgs> | null;
    accountingJournals: Prisma.$AccountingJournalPayload<ExtArgs>[];
    requiredJournals: Prisma.$RequiredAccountingJournalPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      code: string;
      name: string;
      authorization: string | null;
      ministry: string | null;
      department: string | null;
      region: string | null;
      defaultLocale: string;
      city: string | null;
      headmaster: string | null;
      phoneNumber1: string | null;
      phoneNumber2: string | null;
      email: string | null;
      website: string | null;
      numberOfReceipts: number | null;
      logo: string | null;
      createdAt: Date;
      updatedAt: Date;
      isActive: boolean;
      address: string | null;
      timezone: string;
      defaultCountryId: string | null;
      registrationPrefix: string;
      requestSunPlusNo: boolean | null;
      allowOverEnrollment: boolean | null;
      applyRequiredFee: $Enums.ApplyRequiredFee;
      includeRequiredFee: boolean | null;
      hasQuarterlyReports: boolean;
      currency: string;
      appreciationRuleSetId: string | null;
    },
    ExtArgs["result"]["school"]
  >;
  composites: {};
};

export type SchoolGetPayload<
  S extends boolean | null | undefined | SchoolDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$SchoolPayload, S>;

export type SchoolCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<SchoolFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: SchoolCountAggregateInputType | true;
};

export interface SchoolDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["School"];
    meta: { name: "School" };
  };
  /**
   * Find zero or one School that matches the filter.
   * @param {SchoolFindUniqueArgs} args - Arguments to find a School
   * @example
   * // Get one School
   * const school = await prisma.school.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SchoolFindUniqueArgs>(
    args: Prisma.SelectSubset<T, SchoolFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one School that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SchoolFindUniqueOrThrowArgs} args - Arguments to find a School
   * @example
   * // Get one School
   * const school = await prisma.school.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SchoolFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, SchoolFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first School that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolFindFirstArgs} args - Arguments to find a School
   * @example
   * // Get one School
   * const school = await prisma.school.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SchoolFindFirstArgs>(
    args?: Prisma.SelectSubset<T, SchoolFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first School that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolFindFirstOrThrowArgs} args - Arguments to find a School
   * @example
   * // Get one School
   * const school = await prisma.school.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SchoolFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, SchoolFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Schools that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Schools
   * const schools = await prisma.school.findMany()
   *
   * // Get first 10 Schools
   * const schools = await prisma.school.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const schoolWithIdOnly = await prisma.school.findMany({ select: { id: true } })
   *
   */
  findMany<T extends SchoolFindManyArgs>(
    args?: Prisma.SelectSubset<T, SchoolFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a School.
   * @param {SchoolCreateArgs} args - Arguments to create a School.
   * @example
   * // Create one School
   * const School = await prisma.school.create({
   *   data: {
   *     // ... data to create a School
   *   }
   * })
   *
   */
  create<T extends SchoolCreateArgs>(
    args: Prisma.SelectSubset<T, SchoolCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Schools.
   * @param {SchoolCreateManyArgs} args - Arguments to create many Schools.
   * @example
   * // Create many Schools
   * const school = await prisma.school.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends SchoolCreateManyArgs>(
    args?: Prisma.SelectSubset<T, SchoolCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Schools and returns the data saved in the database.
   * @param {SchoolCreateManyAndReturnArgs} args - Arguments to create many Schools.
   * @example
   * // Create many Schools
   * const school = await prisma.school.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Schools and only return the `id`
   * const schoolWithIdOnly = await prisma.school.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends SchoolCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, SchoolCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a School.
   * @param {SchoolDeleteArgs} args - Arguments to delete one School.
   * @example
   * // Delete one School
   * const School = await prisma.school.delete({
   *   where: {
   *     // ... filter to delete one School
   *   }
   * })
   *
   */
  delete<T extends SchoolDeleteArgs>(
    args: Prisma.SelectSubset<T, SchoolDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one School.
   * @param {SchoolUpdateArgs} args - Arguments to update one School.
   * @example
   * // Update one School
   * const school = await prisma.school.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends SchoolUpdateArgs>(
    args: Prisma.SelectSubset<T, SchoolUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Schools.
   * @param {SchoolDeleteManyArgs} args - Arguments to filter Schools to delete.
   * @example
   * // Delete a few Schools
   * const { count } = await prisma.school.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends SchoolDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, SchoolDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Schools.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Schools
   * const school = await prisma.school.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends SchoolUpdateManyArgs>(
    args: Prisma.SelectSubset<T, SchoolUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Schools and returns the data updated in the database.
   * @param {SchoolUpdateManyAndReturnArgs} args - Arguments to update many Schools.
   * @example
   * // Update many Schools
   * const school = await prisma.school.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Schools and only return the `id`
   * const schoolWithIdOnly = await prisma.school.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends SchoolUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, SchoolUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one School.
   * @param {SchoolUpsertArgs} args - Arguments to update or create a School.
   * @example
   * // Update or create a School
   * const school = await prisma.school.upsert({
   *   create: {
   *     // ... data to create a School
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the School we want to update
   *   }
   * })
   */
  upsert<T extends SchoolUpsertArgs>(
    args: Prisma.SelectSubset<T, SchoolUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchoolPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Schools.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolCountArgs} args - Arguments to filter Schools to count.
   * @example
   * // Count the number of Schools
   * const count = await prisma.school.count({
   *   where: {
   *     // ... the filter for the Schools we want to count
   *   }
   * })
   **/
  count<T extends SchoolCountArgs>(
    args?: Prisma.Subset<T, SchoolCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], SchoolCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a School.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends SchoolAggregateArgs>(
    args: Prisma.Subset<T, SchoolAggregateArgs>,
  ): Prisma.PrismaPromise<GetSchoolAggregateType<T>>;

  /**
   * Group by School.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SchoolGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends SchoolGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SchoolGroupByArgs["orderBy"] }
      : { orderBy?: SchoolGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, SchoolGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetSchoolGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the School model
   */
  readonly fields: SchoolFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for School.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SchoolClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  contacts<T extends Prisma.School$contactsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$contactsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ContactPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  users<T extends Prisma.School$usersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$usersArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  students<T extends Prisma.School$studentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$studentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  classrooms<T extends Prisma.School$classroomsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$classroomsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  staffs<T extends Prisma.School$staffsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$staffsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StaffPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  formerSchools<T extends Prisma.School$formerSchoolsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$formerSchoolsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$FormerSchoolPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  religions<T extends Prisma.School$religionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$religionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReligionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  sports<T extends Prisma.School$sportsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$sportsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SportPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  clubs<T extends Prisma.School$clubsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$clubsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClubPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  permissions<T extends Prisma.School$permissionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$permissionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PolicyPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  roles<T extends Prisma.School$rolesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$rolesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$RolePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  subjectGroup<T extends Prisma.School$subjectGroupArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$subjectGroupArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SubjectGroupPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  courses<T extends Prisma.School$coursesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$coursesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CoursePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  schoolYears<T extends Prisma.School$schoolYearsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$schoolYearsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolYearPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  cycles<T extends Prisma.School$cyclesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$cyclesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomCyclePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  sections<T extends Prisma.School$sectionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$sectionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomSectionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  levels<T extends Prisma.School$levelsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$levelsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomLevelPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  terms<T extends Prisma.School$termsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$termsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TermPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  documents<T extends Prisma.School$documentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$documentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$DocumentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  degrees<T extends Prisma.School$degreesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$degreesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StaffDegreePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  relationships<T extends Prisma.School$relationshipsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$relationshipsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ContactRelationshipPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  timetableCategories<
    T extends Prisma.School$timetableCategoriesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.School$timetableCategoriesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TimetableCategoryPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  inventoryAssets<T extends Prisma.School$inventoryAssetsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$inventoryAssetsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryAssetPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  inventoryConsumables<
    T extends Prisma.School$inventoryConsumablesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.School$inventoryConsumablesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumablePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  stockMovements<T extends Prisma.School$stockMovementsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$stockMovementsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryStockMovementPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  consumableUsages<T extends Prisma.School$consumableUsagesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$consumableUsagesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InventoryConsumableUsagePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  schoolYearEvents<T extends Prisma.School$schoolYearEventsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$schoolYearEventsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolYearEventPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  schoolYearEventTypes<
    T extends Prisma.School$schoolYearEventTypesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.School$schoolYearEventTypesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolYearEventTypePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  logActivities<T extends Prisma.School$logActivitiesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$logActivitiesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$LogActivityPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  AppreciationRuleSet<
    T extends Prisma.School$AppreciationRuleSetArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.School$AppreciationRuleSetArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationRuleSetClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationRuleSetPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  accountingJournals<
    T extends Prisma.School$accountingJournalsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.School$accountingJournalsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AccountingJournalPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  requiredJournals<T extends Prisma.School$requiredJournalsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.School$requiredJournalsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$RequiredAccountingJournalPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the School model
 */
export interface SchoolFieldRefs {
  readonly id: Prisma.FieldRef<"School", "String">;
  readonly code: Prisma.FieldRef<"School", "String">;
  readonly name: Prisma.FieldRef<"School", "String">;
  readonly authorization: Prisma.FieldRef<"School", "String">;
  readonly ministry: Prisma.FieldRef<"School", "String">;
  readonly department: Prisma.FieldRef<"School", "String">;
  readonly region: Prisma.FieldRef<"School", "String">;
  readonly defaultLocale: Prisma.FieldRef<"School", "String">;
  readonly city: Prisma.FieldRef<"School", "String">;
  readonly headmaster: Prisma.FieldRef<"School", "String">;
  readonly phoneNumber1: Prisma.FieldRef<"School", "String">;
  readonly phoneNumber2: Prisma.FieldRef<"School", "String">;
  readonly email: Prisma.FieldRef<"School", "String">;
  readonly website: Prisma.FieldRef<"School", "String">;
  readonly numberOfReceipts: Prisma.FieldRef<"School", "Int">;
  readonly logo: Prisma.FieldRef<"School", "String">;
  readonly createdAt: Prisma.FieldRef<"School", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"School", "DateTime">;
  readonly isActive: Prisma.FieldRef<"School", "Boolean">;
  readonly address: Prisma.FieldRef<"School", "String">;
  readonly timezone: Prisma.FieldRef<"School", "String">;
  readonly defaultCountryId: Prisma.FieldRef<"School", "String">;
  readonly registrationPrefix: Prisma.FieldRef<"School", "String">;
  readonly requestSunPlusNo: Prisma.FieldRef<"School", "Boolean">;
  readonly allowOverEnrollment: Prisma.FieldRef<"School", "Boolean">;
  readonly applyRequiredFee: Prisma.FieldRef<"School", "ApplyRequiredFee">;
  readonly includeRequiredFee: Prisma.FieldRef<"School", "Boolean">;
  readonly hasQuarterlyReports: Prisma.FieldRef<"School", "Boolean">;
  readonly currency: Prisma.FieldRef<"School", "String">;
  readonly appreciationRuleSetId: Prisma.FieldRef<"School", "String">;
}

// Custom InputTypes
/**
 * School findUnique
 */
export type SchoolFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * Filter, which School to fetch.
   */
  where: Prisma.SchoolWhereUniqueInput;
};

/**
 * School findUniqueOrThrow
 */
export type SchoolFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * Filter, which School to fetch.
   */
  where: Prisma.SchoolWhereUniqueInput;
};

/**
 * School findFirst
 */
export type SchoolFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * Filter, which School to fetch.
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Schools to fetch.
   */
  orderBy?:
    | Prisma.SchoolOrderByWithRelationInput
    | Prisma.SchoolOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Schools.
   */
  cursor?: Prisma.SchoolWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Schools from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Schools.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Schools.
   */
  distinct?: Prisma.SchoolScalarFieldEnum | Prisma.SchoolScalarFieldEnum[];
};

/**
 * School findFirstOrThrow
 */
export type SchoolFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * Filter, which School to fetch.
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Schools to fetch.
   */
  orderBy?:
    | Prisma.SchoolOrderByWithRelationInput
    | Prisma.SchoolOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Schools.
   */
  cursor?: Prisma.SchoolWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Schools from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Schools.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Schools.
   */
  distinct?: Prisma.SchoolScalarFieldEnum | Prisma.SchoolScalarFieldEnum[];
};

/**
 * School findMany
 */
export type SchoolFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * Filter, which Schools to fetch.
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Schools to fetch.
   */
  orderBy?:
    | Prisma.SchoolOrderByWithRelationInput
    | Prisma.SchoolOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Schools.
   */
  cursor?: Prisma.SchoolWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Schools from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Schools.
   */
  skip?: number;
  distinct?: Prisma.SchoolScalarFieldEnum | Prisma.SchoolScalarFieldEnum[];
};

/**
 * School create
 */
export type SchoolCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * The data needed to create a School.
   */
  data: Prisma.XOR<Prisma.SchoolCreateInput, Prisma.SchoolUncheckedCreateInput>;
};

/**
 * School createMany
 */
export type SchoolCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Schools.
   */
  data: Prisma.SchoolCreateManyInput | Prisma.SchoolCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * School createManyAndReturn
 */
export type SchoolCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * The data used to create many Schools.
   */
  data: Prisma.SchoolCreateManyInput | Prisma.SchoolCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * School update
 */
export type SchoolUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * The data needed to update a School.
   */
  data: Prisma.XOR<Prisma.SchoolUpdateInput, Prisma.SchoolUncheckedUpdateInput>;
  /**
   * Choose, which School to update.
   */
  where: Prisma.SchoolWhereUniqueInput;
};

/**
 * School updateMany
 */
export type SchoolUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Schools.
   */
  data: Prisma.XOR<
    Prisma.SchoolUpdateManyMutationInput,
    Prisma.SchoolUncheckedUpdateManyInput
  >;
  /**
   * Filter which Schools to update
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * Limit how many Schools to update.
   */
  limit?: number;
};

/**
 * School updateManyAndReturn
 */
export type SchoolUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * The data used to update Schools.
   */
  data: Prisma.XOR<
    Prisma.SchoolUpdateManyMutationInput,
    Prisma.SchoolUncheckedUpdateManyInput
  >;
  /**
   * Filter which Schools to update
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * Limit how many Schools to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * School upsert
 */
export type SchoolUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * The filter to search for the School to update in case it exists.
   */
  where: Prisma.SchoolWhereUniqueInput;
  /**
   * In case the School found by the `where` argument doesn't exist, create a new School with this data.
   */
  create: Prisma.XOR<
    Prisma.SchoolCreateInput,
    Prisma.SchoolUncheckedCreateInput
  >;
  /**
   * In case the School was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.SchoolUpdateInput,
    Prisma.SchoolUncheckedUpdateInput
  >;
};

/**
 * School delete
 */
export type SchoolDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
  /**
   * Filter which School to delete.
   */
  where: Prisma.SchoolWhereUniqueInput;
};

/**
 * School deleteMany
 */
export type SchoolDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Schools to delete
   */
  where?: Prisma.SchoolWhereInput;
  /**
   * Limit how many Schools to delete.
   */
  limit?: number;
};

/**
 * School.contacts
 */
export type School$contactsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Contact
   */
  select?: Prisma.ContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Contact
   */
  omit?: Prisma.ContactOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContactInclude<ExtArgs> | null;
  where?: Prisma.ContactWhereInput;
  orderBy?:
    | Prisma.ContactOrderByWithRelationInput
    | Prisma.ContactOrderByWithRelationInput[];
  cursor?: Prisma.ContactWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ContactScalarFieldEnum | Prisma.ContactScalarFieldEnum[];
};

/**
 * School.users
 */
export type School$usersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  cursor?: Prisma.UserWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * School.students
 */
export type School$studentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  where?: Prisma.StudentWhereInput;
  orderBy?:
    | Prisma.StudentOrderByWithRelationInput
    | Prisma.StudentOrderByWithRelationInput[];
  cursor?: Prisma.StudentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[];
};

/**
 * School.classrooms
 */
export type School$classroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * School.staffs
 */
export type School$staffsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null;
  where?: Prisma.StaffWhereInput;
  orderBy?:
    | Prisma.StaffOrderByWithRelationInput
    | Prisma.StaffOrderByWithRelationInput[];
  cursor?: Prisma.StaffWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[];
};

/**
 * School.formerSchools
 */
export type School$formerSchoolsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FormerSchool
   */
  select?: Prisma.FormerSchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FormerSchool
   */
  omit?: Prisma.FormerSchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormerSchoolInclude<ExtArgs> | null;
  where?: Prisma.FormerSchoolWhereInput;
  orderBy?:
    | Prisma.FormerSchoolOrderByWithRelationInput
    | Prisma.FormerSchoolOrderByWithRelationInput[];
  cursor?: Prisma.FormerSchoolWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.FormerSchoolScalarFieldEnum
    | Prisma.FormerSchoolScalarFieldEnum[];
};

/**
 * School.religions
 */
export type School$religionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Religion
   */
  select?: Prisma.ReligionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Religion
   */
  omit?: Prisma.ReligionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReligionInclude<ExtArgs> | null;
  where?: Prisma.ReligionWhereInput;
  orderBy?:
    | Prisma.ReligionOrderByWithRelationInput
    | Prisma.ReligionOrderByWithRelationInput[];
  cursor?: Prisma.ReligionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ReligionScalarFieldEnum | Prisma.ReligionScalarFieldEnum[];
};

/**
 * School.sports
 */
export type School$sportsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Sport
   */
  select?: Prisma.SportSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Sport
   */
  omit?: Prisma.SportOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SportInclude<ExtArgs> | null;
  where?: Prisma.SportWhereInput;
  orderBy?:
    | Prisma.SportOrderByWithRelationInput
    | Prisma.SportOrderByWithRelationInput[];
  cursor?: Prisma.SportWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SportScalarFieldEnum | Prisma.SportScalarFieldEnum[];
};

/**
 * School.clubs
 */
export type School$clubsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Club
   */
  select?: Prisma.ClubSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Club
   */
  omit?: Prisma.ClubOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClubInclude<ExtArgs> | null;
  where?: Prisma.ClubWhereInput;
  orderBy?:
    | Prisma.ClubOrderByWithRelationInput
    | Prisma.ClubOrderByWithRelationInput[];
  cursor?: Prisma.ClubWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ClubScalarFieldEnum | Prisma.ClubScalarFieldEnum[];
};

/**
 * School.permissions
 */
export type School$permissionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Policy
   */
  select?: Prisma.PolicySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Policy
   */
  omit?: Prisma.PolicyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PolicyInclude<ExtArgs> | null;
  where?: Prisma.PolicyWhereInput;
  orderBy?:
    | Prisma.PolicyOrderByWithRelationInput
    | Prisma.PolicyOrderByWithRelationInput[];
  cursor?: Prisma.PolicyWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.PolicyScalarFieldEnum | Prisma.PolicyScalarFieldEnum[];
};

/**
 * School.roles
 */
export type School$rolesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Role
   */
  select?: Prisma.RoleSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Role
   */
  omit?: Prisma.RoleOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RoleInclude<ExtArgs> | null;
  where?: Prisma.RoleWhereInput;
  orderBy?:
    | Prisma.RoleOrderByWithRelationInput
    | Prisma.RoleOrderByWithRelationInput[];
  cursor?: Prisma.RoleWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.RoleScalarFieldEnum | Prisma.RoleScalarFieldEnum[];
};

/**
 * School.subjectGroup
 */
export type School$subjectGroupArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SubjectGroup
   */
  select?: Prisma.SubjectGroupSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SubjectGroup
   */
  omit?: Prisma.SubjectGroupOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubjectGroupInclude<ExtArgs> | null;
  where?: Prisma.SubjectGroupWhereInput;
  orderBy?:
    | Prisma.SubjectGroupOrderByWithRelationInput
    | Prisma.SubjectGroupOrderByWithRelationInput[];
  cursor?: Prisma.SubjectGroupWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SubjectGroupScalarFieldEnum
    | Prisma.SubjectGroupScalarFieldEnum[];
};

/**
 * School.courses
 */
export type School$coursesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Course
   */
  select?: Prisma.CourseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Course
   */
  omit?: Prisma.CourseOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CourseInclude<ExtArgs> | null;
  where?: Prisma.CourseWhereInput;
  orderBy?:
    | Prisma.CourseOrderByWithRelationInput
    | Prisma.CourseOrderByWithRelationInput[];
  cursor?: Prisma.CourseWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.CourseScalarFieldEnum | Prisma.CourseScalarFieldEnum[];
};

/**
 * School.schoolYears
 */
export type School$schoolYearsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYear
   */
  select?: Prisma.SchoolYearSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYear
   */
  omit?: Prisma.SchoolYearOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearInclude<ExtArgs> | null;
  where?: Prisma.SchoolYearWhereInput;
  orderBy?:
    | Prisma.SchoolYearOrderByWithRelationInput
    | Prisma.SchoolYearOrderByWithRelationInput[];
  cursor?: Prisma.SchoolYearWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SchoolYearScalarFieldEnum
    | Prisma.SchoolYearScalarFieldEnum[];
};

/**
 * School.cycles
 */
export type School$cyclesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ClassroomCycle
   */
  select?: Prisma.ClassroomCycleSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ClassroomCycle
   */
  omit?: Prisma.ClassroomCycleOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomCycleInclude<ExtArgs> | null;
  where?: Prisma.ClassroomCycleWhereInput;
  orderBy?:
    | Prisma.ClassroomCycleOrderByWithRelationInput
    | Prisma.ClassroomCycleOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomCycleWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomCycleScalarFieldEnum
    | Prisma.ClassroomCycleScalarFieldEnum[];
};

/**
 * School.sections
 */
export type School$sectionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ClassroomSection
   */
  select?: Prisma.ClassroomSectionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ClassroomSection
   */
  omit?: Prisma.ClassroomSectionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomSectionInclude<ExtArgs> | null;
  where?: Prisma.ClassroomSectionWhereInput;
  orderBy?:
    | Prisma.ClassroomSectionOrderByWithRelationInput
    | Prisma.ClassroomSectionOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomSectionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomSectionScalarFieldEnum
    | Prisma.ClassroomSectionScalarFieldEnum[];
};

/**
 * School.levels
 */
export type School$levelsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ClassroomLevel
   */
  select?: Prisma.ClassroomLevelSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ClassroomLevel
   */
  omit?: Prisma.ClassroomLevelOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomLevelInclude<ExtArgs> | null;
  where?: Prisma.ClassroomLevelWhereInput;
  orderBy?:
    | Prisma.ClassroomLevelOrderByWithRelationInput
    | Prisma.ClassroomLevelOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomLevelWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomLevelScalarFieldEnum
    | Prisma.ClassroomLevelScalarFieldEnum[];
};

/**
 * School.terms
 */
export type School$termsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Term
   */
  select?: Prisma.TermSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Term
   */
  omit?: Prisma.TermOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermInclude<ExtArgs> | null;
  where?: Prisma.TermWhereInput;
  orderBy?:
    | Prisma.TermOrderByWithRelationInput
    | Prisma.TermOrderByWithRelationInput[];
  cursor?: Prisma.TermWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.TermScalarFieldEnum | Prisma.TermScalarFieldEnum[];
};

/**
 * School.documents
 */
export type School$documentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Document
   */
  select?: Prisma.DocumentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Document
   */
  omit?: Prisma.DocumentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DocumentInclude<ExtArgs> | null;
  where?: Prisma.DocumentWhereInput;
  orderBy?:
    | Prisma.DocumentOrderByWithRelationInput
    | Prisma.DocumentOrderByWithRelationInput[];
  cursor?: Prisma.DocumentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.DocumentScalarFieldEnum | Prisma.DocumentScalarFieldEnum[];
};

/**
 * School.degrees
 */
export type School$degreesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StaffDegree
   */
  select?: Prisma.StaffDegreeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StaffDegree
   */
  omit?: Prisma.StaffDegreeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffDegreeInclude<ExtArgs> | null;
  where?: Prisma.StaffDegreeWhereInput;
  orderBy?:
    | Prisma.StaffDegreeOrderByWithRelationInput
    | Prisma.StaffDegreeOrderByWithRelationInput[];
  cursor?: Prisma.StaffDegreeWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.StaffDegreeScalarFieldEnum
    | Prisma.StaffDegreeScalarFieldEnum[];
};

/**
 * School.relationships
 */
export type School$relationshipsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ContactRelationship
   */
  select?: Prisma.ContactRelationshipSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ContactRelationship
   */
  omit?: Prisma.ContactRelationshipOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContactRelationshipInclude<ExtArgs> | null;
  where?: Prisma.ContactRelationshipWhereInput;
  orderBy?:
    | Prisma.ContactRelationshipOrderByWithRelationInput
    | Prisma.ContactRelationshipOrderByWithRelationInput[];
  cursor?: Prisma.ContactRelationshipWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ContactRelationshipScalarFieldEnum
    | Prisma.ContactRelationshipScalarFieldEnum[];
};

/**
 * School.timetableCategories
 */
export type School$timetableCategoriesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the TimetableCategory
   */
  select?: Prisma.TimetableCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the TimetableCategory
   */
  omit?: Prisma.TimetableCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetableCategoryInclude<ExtArgs> | null;
  where?: Prisma.TimetableCategoryWhereInput;
  orderBy?:
    | Prisma.TimetableCategoryOrderByWithRelationInput
    | Prisma.TimetableCategoryOrderByWithRelationInput[];
  cursor?: Prisma.TimetableCategoryWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TimetableCategoryScalarFieldEnum
    | Prisma.TimetableCategoryScalarFieldEnum[];
};

/**
 * School.inventoryAssets
 */
export type School$inventoryAssetsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryAsset
   */
  select?: Prisma.InventoryAssetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryAsset
   */
  omit?: Prisma.InventoryAssetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryAssetInclude<ExtArgs> | null;
  where?: Prisma.InventoryAssetWhereInput;
  orderBy?:
    | Prisma.InventoryAssetOrderByWithRelationInput
    | Prisma.InventoryAssetOrderByWithRelationInput[];
  cursor?: Prisma.InventoryAssetWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryAssetScalarFieldEnum
    | Prisma.InventoryAssetScalarFieldEnum[];
};

/**
 * School.inventoryConsumables
 */
export type School$inventoryConsumablesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryConsumable
   */
  select?: Prisma.InventoryConsumableSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryConsumable
   */
  omit?: Prisma.InventoryConsumableOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryConsumableInclude<ExtArgs> | null;
  where?: Prisma.InventoryConsumableWhereInput;
  orderBy?:
    | Prisma.InventoryConsumableOrderByWithRelationInput
    | Prisma.InventoryConsumableOrderByWithRelationInput[];
  cursor?: Prisma.InventoryConsumableWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryConsumableScalarFieldEnum
    | Prisma.InventoryConsumableScalarFieldEnum[];
};

/**
 * School.stockMovements
 */
export type School$stockMovementsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryStockMovement
   */
  select?: Prisma.InventoryStockMovementSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryStockMovement
   */
  omit?: Prisma.InventoryStockMovementOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryStockMovementInclude<ExtArgs> | null;
  where?: Prisma.InventoryStockMovementWhereInput;
  orderBy?:
    | Prisma.InventoryStockMovementOrderByWithRelationInput
    | Prisma.InventoryStockMovementOrderByWithRelationInput[];
  cursor?: Prisma.InventoryStockMovementWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryStockMovementScalarFieldEnum
    | Prisma.InventoryStockMovementScalarFieldEnum[];
};

/**
 * School.consumableUsages
 */
export type School$consumableUsagesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InventoryConsumableUsage
   */
  select?: Prisma.InventoryConsumableUsageSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InventoryConsumableUsage
   */
  omit?: Prisma.InventoryConsumableUsageOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InventoryConsumableUsageInclude<ExtArgs> | null;
  where?: Prisma.InventoryConsumableUsageWhereInput;
  orderBy?:
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput
    | Prisma.InventoryConsumableUsageOrderByWithRelationInput[];
  cursor?: Prisma.InventoryConsumableUsageWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.InventoryConsumableUsageScalarFieldEnum
    | Prisma.InventoryConsumableUsageScalarFieldEnum[];
};

/**
 * School.schoolYearEvents
 */
export type School$schoolYearEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYearEvent
   */
  select?: Prisma.SchoolYearEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYearEvent
   */
  omit?: Prisma.SchoolYearEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearEventInclude<ExtArgs> | null;
  where?: Prisma.SchoolYearEventWhereInput;
  orderBy?:
    | Prisma.SchoolYearEventOrderByWithRelationInput
    | Prisma.SchoolYearEventOrderByWithRelationInput[];
  cursor?: Prisma.SchoolYearEventWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SchoolYearEventScalarFieldEnum
    | Prisma.SchoolYearEventScalarFieldEnum[];
};

/**
 * School.schoolYearEventTypes
 */
export type School$schoolYearEventTypesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the SchoolYearEventType
   */
  select?: Prisma.SchoolYearEventTypeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SchoolYearEventType
   */
  omit?: Prisma.SchoolYearEventTypeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolYearEventTypeInclude<ExtArgs> | null;
  where?: Prisma.SchoolYearEventTypeWhereInput;
  orderBy?:
    | Prisma.SchoolYearEventTypeOrderByWithRelationInput
    | Prisma.SchoolYearEventTypeOrderByWithRelationInput[];
  cursor?: Prisma.SchoolYearEventTypeWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SchoolYearEventTypeScalarFieldEnum
    | Prisma.SchoolYearEventTypeScalarFieldEnum[];
};

/**
 * School.logActivities
 */
export type School$logActivitiesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the LogActivity
   */
  select?: Prisma.LogActivitySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the LogActivity
   */
  omit?: Prisma.LogActivityOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LogActivityInclude<ExtArgs> | null;
  where?: Prisma.LogActivityWhereInput;
  orderBy?:
    | Prisma.LogActivityOrderByWithRelationInput
    | Prisma.LogActivityOrderByWithRelationInput[];
  cursor?: Prisma.LogActivityWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.LogActivityScalarFieldEnum
    | Prisma.LogActivityScalarFieldEnum[];
};

/**
 * School.AppreciationRuleSet
 */
export type School$AppreciationRuleSetArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationRuleSet
   */
  select?: Prisma.AppreciationRuleSetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationRuleSet
   */
  omit?: Prisma.AppreciationRuleSetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationRuleSetInclude<ExtArgs> | null;
  where?: Prisma.AppreciationRuleSetWhereInput;
};

/**
 * School.accountingJournals
 */
export type School$accountingJournalsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AccountingJournal
   */
  select?: Prisma.AccountingJournalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AccountingJournal
   */
  omit?: Prisma.AccountingJournalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountingJournalInclude<ExtArgs> | null;
  where?: Prisma.AccountingJournalWhereInput;
  orderBy?:
    | Prisma.AccountingJournalOrderByWithRelationInput
    | Prisma.AccountingJournalOrderByWithRelationInput[];
  cursor?: Prisma.AccountingJournalWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AccountingJournalScalarFieldEnum
    | Prisma.AccountingJournalScalarFieldEnum[];
};

/**
 * School.requiredJournals
 */
export type School$requiredJournalsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the RequiredAccountingJournal
   */
  select?: Prisma.RequiredAccountingJournalSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RequiredAccountingJournal
   */
  omit?: Prisma.RequiredAccountingJournalOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RequiredAccountingJournalInclude<ExtArgs> | null;
  where?: Prisma.RequiredAccountingJournalWhereInput;
  orderBy?:
    | Prisma.RequiredAccountingJournalOrderByWithRelationInput
    | Prisma.RequiredAccountingJournalOrderByWithRelationInput[];
  cursor?: Prisma.RequiredAccountingJournalWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.RequiredAccountingJournalScalarFieldEnum
    | Prisma.RequiredAccountingJournalScalarFieldEnum[];
};

/**
 * School without action
 */
export type SchoolDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the School
   */
  select?: Prisma.SchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the School
   */
  omit?: Prisma.SchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SchoolInclude<ExtArgs> | null;
};
