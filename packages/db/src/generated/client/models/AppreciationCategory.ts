/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `AppreciationCategory` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model AppreciationCategory
 *
 */
export type AppreciationCategoryModel =
  runtime.Types.Result.DefaultSelection<Prisma.$AppreciationCategoryPayload>;

export type AggregateAppreciationCategory = {
  _count: AppreciationCategoryCountAggregateOutputType | null;
  _avg: AppreciationCategoryAvgAggregateOutputType | null;
  _sum: AppreciationCategorySumAggregateOutputType | null;
  _min: AppreciationCategoryMinAggregateOutputType | null;
  _max: AppreciationCategoryMaxAggregateOutputType | null;
};

export type AppreciationCategoryAvgAggregateOutputType = {
  id: number | null;
};

export type AppreciationCategorySumAggregateOutputType = {
  id: number | null;
};

export type AppreciationCategoryMinAggregateOutputType = {
  id: number | null;
  name: string | null;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  createdBy: string | null;
};

export type AppreciationCategoryMaxAggregateOutputType = {
  id: number | null;
  name: string | null;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  createdBy: string | null;
};

export type AppreciationCategoryCountAggregateOutputType = {
  id: number;
  name: number;
  isActive: number;
  createdAt: number;
  updatedAt: number;
  createdBy: number;
  _all: number;
};

export type AppreciationCategoryAvgAggregateInputType = {
  id?: true;
};

export type AppreciationCategorySumAggregateInputType = {
  id?: true;
};

export type AppreciationCategoryMinAggregateInputType = {
  id?: true;
  name?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  createdBy?: true;
};

export type AppreciationCategoryMaxAggregateInputType = {
  id?: true;
  name?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  createdBy?: true;
};

export type AppreciationCategoryCountAggregateInputType = {
  id?: true;
  name?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  createdBy?: true;
  _all?: true;
};

export type AppreciationCategoryAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AppreciationCategory to aggregate.
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationCategories to fetch.
   */
  orderBy?:
    | Prisma.AppreciationCategoryOrderByWithRelationInput
    | Prisma.AppreciationCategoryOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AppreciationCategoryWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationCategories from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationCategories.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned AppreciationCategories
   **/
  _count?: true | AppreciationCategoryCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: AppreciationCategoryAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: AppreciationCategorySumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AppreciationCategoryMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AppreciationCategoryMaxAggregateInputType;
};

export type GetAppreciationCategoryAggregateType<
  T extends AppreciationCategoryAggregateArgs,
> = {
  [P in keyof T & keyof AggregateAppreciationCategory]: P extends
    | "_count"
    | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAppreciationCategory[P]>
    : Prisma.GetScalarType<T[P], AggregateAppreciationCategory[P]>;
};

export type AppreciationCategoryGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AppreciationCategoryWhereInput;
  orderBy?:
    | Prisma.AppreciationCategoryOrderByWithAggregationInput
    | Prisma.AppreciationCategoryOrderByWithAggregationInput[];
  by:
    | Prisma.AppreciationCategoryScalarFieldEnum[]
    | Prisma.AppreciationCategoryScalarFieldEnum;
  having?: Prisma.AppreciationCategoryScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AppreciationCategoryCountAggregateInputType | true;
  _avg?: AppreciationCategoryAvgAggregateInputType;
  _sum?: AppreciationCategorySumAggregateInputType;
  _min?: AppreciationCategoryMinAggregateInputType;
  _max?: AppreciationCategoryMaxAggregateInputType;
};

export type AppreciationCategoryGroupByOutputType = {
  id: number;
  name: string;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date;
  createdBy: string | null;
  _count: AppreciationCategoryCountAggregateOutputType | null;
  _avg: AppreciationCategoryAvgAggregateOutputType | null;
  _sum: AppreciationCategorySumAggregateOutputType | null;
  _min: AppreciationCategoryMinAggregateOutputType | null;
  _max: AppreciationCategoryMaxAggregateOutputType | null;
};

type GetAppreciationCategoryGroupByPayload<
  T extends AppreciationCategoryGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AppreciationCategoryGroupByOutputType, T["by"]> & {
      [P in keyof T &
        keyof AppreciationCategoryGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], AppreciationCategoryGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], AppreciationCategoryGroupByOutputType[P]>;
    }
  >
>;

export type AppreciationCategoryWhereInput = {
  AND?:
    | Prisma.AppreciationCategoryWhereInput
    | Prisma.AppreciationCategoryWhereInput[];
  OR?: Prisma.AppreciationCategoryWhereInput[];
  NOT?:
    | Prisma.AppreciationCategoryWhereInput
    | Prisma.AppreciationCategoryWhereInput[];
  id?: Prisma.IntFilter<"AppreciationCategory"> | number;
  name?: Prisma.StringFilter<"AppreciationCategory"> | string;
  isActive?: Prisma.BoolNullableFilter<"AppreciationCategory"> | boolean | null;
  createdAt?:
    | Prisma.DateTimeNullableFilter<"AppreciationCategory">
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFilter<"AppreciationCategory"> | Date | string;
  createdBy?:
    | Prisma.StringNullableFilter<"AppreciationCategory">
    | string
    | null;
  appreciations?: Prisma.AppreciationListRelationFilter;
};

export type AppreciationCategoryOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  isActive?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  appreciations?: Prisma.AppreciationOrderByRelationAggregateInput;
};

export type AppreciationCategoryWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?:
      | Prisma.AppreciationCategoryWhereInput
      | Prisma.AppreciationCategoryWhereInput[];
    OR?: Prisma.AppreciationCategoryWhereInput[];
    NOT?:
      | Prisma.AppreciationCategoryWhereInput
      | Prisma.AppreciationCategoryWhereInput[];
    name?: Prisma.StringFilter<"AppreciationCategory"> | string;
    isActive?:
      | Prisma.BoolNullableFilter<"AppreciationCategory">
      | boolean
      | null;
    createdAt?:
      | Prisma.DateTimeNullableFilter<"AppreciationCategory">
      | Date
      | string
      | null;
    updatedAt?: Prisma.DateTimeFilter<"AppreciationCategory"> | Date | string;
    createdBy?:
      | Prisma.StringNullableFilter<"AppreciationCategory">
      | string
      | null;
    appreciations?: Prisma.AppreciationListRelationFilter;
  },
  "id"
>;

export type AppreciationCategoryOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  isActive?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.AppreciationCategoryCountOrderByAggregateInput;
  _avg?: Prisma.AppreciationCategoryAvgOrderByAggregateInput;
  _max?: Prisma.AppreciationCategoryMaxOrderByAggregateInput;
  _min?: Prisma.AppreciationCategoryMinOrderByAggregateInput;
  _sum?: Prisma.AppreciationCategorySumOrderByAggregateInput;
};

export type AppreciationCategoryScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AppreciationCategoryScalarWhereWithAggregatesInput
    | Prisma.AppreciationCategoryScalarWhereWithAggregatesInput[];
  OR?: Prisma.AppreciationCategoryScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AppreciationCategoryScalarWhereWithAggregatesInput
    | Prisma.AppreciationCategoryScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"AppreciationCategory"> | number;
  name?: Prisma.StringWithAggregatesFilter<"AppreciationCategory"> | string;
  isActive?:
    | Prisma.BoolNullableWithAggregatesFilter<"AppreciationCategory">
    | boolean
    | null;
  createdAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"AppreciationCategory">
    | Date
    | string
    | null;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"AppreciationCategory">
    | Date
    | string;
  createdBy?:
    | Prisma.StringNullableWithAggregatesFilter<"AppreciationCategory">
    | string
    | null;
};

export type AppreciationCategoryCreateInput = {
  name: string;
  isActive?: boolean | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  createdBy?: string | null;
  appreciations?: Prisma.AppreciationCreateNestedManyWithoutCategoryInput;
};

export type AppreciationCategoryUncheckedCreateInput = {
  id?: number;
  name: string;
  isActive?: boolean | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  createdBy?: string | null;
  appreciations?: Prisma.AppreciationUncheckedCreateNestedManyWithoutCategoryInput;
};

export type AppreciationCategoryUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  appreciations?: Prisma.AppreciationUpdateManyWithoutCategoryNestedInput;
};

export type AppreciationCategoryUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  appreciations?: Prisma.AppreciationUncheckedUpdateManyWithoutCategoryNestedInput;
};

export type AppreciationCategoryCreateManyInput = {
  id?: number;
  name: string;
  isActive?: boolean | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  createdBy?: string | null;
};

export type AppreciationCategoryUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AppreciationCategoryUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AppreciationCategoryNullableScalarRelationFilter = {
  is?: Prisma.AppreciationCategoryWhereInput | null;
  isNot?: Prisma.AppreciationCategoryWhereInput | null;
};

export type AppreciationCategoryCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
};

export type AppreciationCategoryAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
};

export type AppreciationCategoryMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
};

export type AppreciationCategoryMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
};

export type AppreciationCategorySumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
};

export type AppreciationCategoryCreateNestedOneWithoutAppreciationsInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationCategoryCreateWithoutAppreciationsInput,
    Prisma.AppreciationCategoryUncheckedCreateWithoutAppreciationsInput
  >;
  connectOrCreate?: Prisma.AppreciationCategoryCreateOrConnectWithoutAppreciationsInput;
  connect?: Prisma.AppreciationCategoryWhereUniqueInput;
};

export type AppreciationCategoryUpdateOneWithoutAppreciationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.AppreciationCategoryCreateWithoutAppreciationsInput,
    Prisma.AppreciationCategoryUncheckedCreateWithoutAppreciationsInput
  >;
  connectOrCreate?: Prisma.AppreciationCategoryCreateOrConnectWithoutAppreciationsInput;
  upsert?: Prisma.AppreciationCategoryUpsertWithoutAppreciationsInput;
  disconnect?: Prisma.AppreciationCategoryWhereInput | boolean;
  delete?: Prisma.AppreciationCategoryWhereInput | boolean;
  connect?: Prisma.AppreciationCategoryWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AppreciationCategoryUpdateToOneWithWhereWithoutAppreciationsInput,
      Prisma.AppreciationCategoryUpdateWithoutAppreciationsInput
    >,
    Prisma.AppreciationCategoryUncheckedUpdateWithoutAppreciationsInput
  >;
};

export type AppreciationCategoryCreateWithoutAppreciationsInput = {
  name: string;
  isActive?: boolean | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  createdBy?: string | null;
};

export type AppreciationCategoryUncheckedCreateWithoutAppreciationsInput = {
  id?: number;
  name: string;
  isActive?: boolean | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string;
  createdBy?: string | null;
};

export type AppreciationCategoryCreateOrConnectWithoutAppreciationsInput = {
  where: Prisma.AppreciationCategoryWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppreciationCategoryCreateWithoutAppreciationsInput,
    Prisma.AppreciationCategoryUncheckedCreateWithoutAppreciationsInput
  >;
};

export type AppreciationCategoryUpsertWithoutAppreciationsInput = {
  update: Prisma.XOR<
    Prisma.AppreciationCategoryUpdateWithoutAppreciationsInput,
    Prisma.AppreciationCategoryUncheckedUpdateWithoutAppreciationsInput
  >;
  create: Prisma.XOR<
    Prisma.AppreciationCategoryCreateWithoutAppreciationsInput,
    Prisma.AppreciationCategoryUncheckedCreateWithoutAppreciationsInput
  >;
  where?: Prisma.AppreciationCategoryWhereInput;
};

export type AppreciationCategoryUpdateToOneWithWhereWithoutAppreciationsInput =
  {
    where?: Prisma.AppreciationCategoryWhereInput;
    data: Prisma.XOR<
      Prisma.AppreciationCategoryUpdateWithoutAppreciationsInput,
      Prisma.AppreciationCategoryUncheckedUpdateWithoutAppreciationsInput
    >;
  };

export type AppreciationCategoryUpdateWithoutAppreciationsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AppreciationCategoryUncheckedUpdateWithoutAppreciationsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

/**
 * Count Type AppreciationCategoryCountOutputType
 */

export type AppreciationCategoryCountOutputType = {
  appreciations: number;
};

export type AppreciationCategoryCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  appreciations?:
    | boolean
    | AppreciationCategoryCountOutputTypeCountAppreciationsArgs;
};

/**
 * AppreciationCategoryCountOutputType without action
 */
export type AppreciationCategoryCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategoryCountOutputType
   */
  select?: Prisma.AppreciationCategoryCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * AppreciationCategoryCountOutputType without action
 */
export type AppreciationCategoryCountOutputTypeCountAppreciationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AppreciationWhereInput;
};

export type AppreciationCategorySelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdBy?: boolean;
    appreciations?:
      | boolean
      | Prisma.AppreciationCategory$appreciationsArgs<ExtArgs>;
    _count?:
      | boolean
      | Prisma.AppreciationCategoryCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["appreciationCategory"]
>;

export type AppreciationCategorySelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdBy?: boolean;
  },
  ExtArgs["result"]["appreciationCategory"]
>;

export type AppreciationCategorySelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdBy?: boolean;
  },
  ExtArgs["result"]["appreciationCategory"]
>;

export type AppreciationCategorySelectScalar = {
  id?: boolean;
  name?: boolean;
  isActive?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  createdBy?: boolean;
};

export type AppreciationCategoryOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  "id" | "name" | "isActive" | "createdAt" | "updatedAt" | "createdBy",
  ExtArgs["result"]["appreciationCategory"]
>;
export type AppreciationCategoryInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  appreciations?:
    | boolean
    | Prisma.AppreciationCategory$appreciationsArgs<ExtArgs>;
  _count?:
    | boolean
    | Prisma.AppreciationCategoryCountOutputTypeDefaultArgs<ExtArgs>;
};
export type AppreciationCategoryIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};
export type AppreciationCategoryIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};

export type $AppreciationCategoryPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "AppreciationCategory";
  objects: {
    appreciations: Prisma.$AppreciationPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      name: string;
      isActive: boolean | null;
      createdAt: Date | null;
      updatedAt: Date;
      createdBy: string | null;
    },
    ExtArgs["result"]["appreciationCategory"]
  >;
  composites: {};
};

export type AppreciationCategoryGetPayload<
  S extends boolean | null | undefined | AppreciationCategoryDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$AppreciationCategoryPayload, S>;

export type AppreciationCategoryCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  AppreciationCategoryFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: AppreciationCategoryCountAggregateInputType | true;
};

export interface AppreciationCategoryDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["AppreciationCategory"];
    meta: { name: "AppreciationCategory" };
  };
  /**
   * Find zero or one AppreciationCategory that matches the filter.
   * @param {AppreciationCategoryFindUniqueArgs} args - Arguments to find a AppreciationCategory
   * @example
   * // Get one AppreciationCategory
   * const appreciationCategory = await prisma.appreciationCategory.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AppreciationCategoryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AppreciationCategoryFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one AppreciationCategory that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AppreciationCategoryFindUniqueOrThrowArgs} args - Arguments to find a AppreciationCategory
   * @example
   * // Get one AppreciationCategory
   * const appreciationCategory = await prisma.appreciationCategory.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AppreciationCategoryFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      AppreciationCategoryFindUniqueOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AppreciationCategory that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryFindFirstArgs} args - Arguments to find a AppreciationCategory
   * @example
   * // Get one AppreciationCategory
   * const appreciationCategory = await prisma.appreciationCategory.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AppreciationCategoryFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AppreciationCategoryFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AppreciationCategory that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryFindFirstOrThrowArgs} args - Arguments to find a AppreciationCategory
   * @example
   * // Get one AppreciationCategory
   * const appreciationCategory = await prisma.appreciationCategory.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AppreciationCategoryFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      AppreciationCategoryFindFirstOrThrowArgs<ExtArgs>
    >,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more AppreciationCategories that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AppreciationCategories
   * const appreciationCategories = await prisma.appreciationCategory.findMany()
   *
   * // Get first 10 AppreciationCategories
   * const appreciationCategories = await prisma.appreciationCategory.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const appreciationCategoryWithIdOnly = await prisma.appreciationCategory.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AppreciationCategoryFindManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationCategoryFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a AppreciationCategory.
   * @param {AppreciationCategoryCreateArgs} args - Arguments to create a AppreciationCategory.
   * @example
   * // Create one AppreciationCategory
   * const AppreciationCategory = await prisma.appreciationCategory.create({
   *   data: {
   *     // ... data to create a AppreciationCategory
   *   }
   * })
   *
   */
  create<T extends AppreciationCategoryCreateArgs>(
    args: Prisma.SelectSubset<T, AppreciationCategoryCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many AppreciationCategories.
   * @param {AppreciationCategoryCreateManyArgs} args - Arguments to create many AppreciationCategories.
   * @example
   * // Create many AppreciationCategories
   * const appreciationCategory = await prisma.appreciationCategory.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AppreciationCategoryCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationCategoryCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many AppreciationCategories and returns the data saved in the database.
   * @param {AppreciationCategoryCreateManyAndReturnArgs} args - Arguments to create many AppreciationCategories.
   * @example
   * // Create many AppreciationCategories
   * const appreciationCategory = await prisma.appreciationCategory.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many AppreciationCategories and only return the `id`
   * const appreciationCategoryWithIdOnly = await prisma.appreciationCategory.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AppreciationCategoryCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      AppreciationCategoryCreateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a AppreciationCategory.
   * @param {AppreciationCategoryDeleteArgs} args - Arguments to delete one AppreciationCategory.
   * @example
   * // Delete one AppreciationCategory
   * const AppreciationCategory = await prisma.appreciationCategory.delete({
   *   where: {
   *     // ... filter to delete one AppreciationCategory
   *   }
   * })
   *
   */
  delete<T extends AppreciationCategoryDeleteArgs>(
    args: Prisma.SelectSubset<T, AppreciationCategoryDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one AppreciationCategory.
   * @param {AppreciationCategoryUpdateArgs} args - Arguments to update one AppreciationCategory.
   * @example
   * // Update one AppreciationCategory
   * const appreciationCategory = await prisma.appreciationCategory.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AppreciationCategoryUpdateArgs>(
    args: Prisma.SelectSubset<T, AppreciationCategoryUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more AppreciationCategories.
   * @param {AppreciationCategoryDeleteManyArgs} args - Arguments to filter AppreciationCategories to delete.
   * @example
   * // Delete a few AppreciationCategories
   * const { count } = await prisma.appreciationCategory.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AppreciationCategoryDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationCategoryDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AppreciationCategories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AppreciationCategories
   * const appreciationCategory = await prisma.appreciationCategory.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AppreciationCategoryUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AppreciationCategoryUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AppreciationCategories and returns the data updated in the database.
   * @param {AppreciationCategoryUpdateManyAndReturnArgs} args - Arguments to update many AppreciationCategories.
   * @example
   * // Update many AppreciationCategories
   * const appreciationCategory = await prisma.appreciationCategory.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more AppreciationCategories and only return the `id`
   * const appreciationCategoryWithIdOnly = await prisma.appreciationCategory.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AppreciationCategoryUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      AppreciationCategoryUpdateManyAndReturnArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one AppreciationCategory.
   * @param {AppreciationCategoryUpsertArgs} args - Arguments to update or create a AppreciationCategory.
   * @example
   * // Update or create a AppreciationCategory
   * const appreciationCategory = await prisma.appreciationCategory.upsert({
   *   create: {
   *     // ... data to create a AppreciationCategory
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AppreciationCategory we want to update
   *   }
   * })
   */
  upsert<T extends AppreciationCategoryUpsertArgs>(
    args: Prisma.SelectSubset<T, AppreciationCategoryUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of AppreciationCategories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryCountArgs} args - Arguments to filter AppreciationCategories to count.
   * @example
   * // Count the number of AppreciationCategories
   * const count = await prisma.appreciationCategory.count({
   *   where: {
   *     // ... the filter for the AppreciationCategories we want to count
   *   }
   * })
   **/
  count<T extends AppreciationCategoryCountArgs>(
    args?: Prisma.Subset<T, AppreciationCategoryCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            AppreciationCategoryCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a AppreciationCategory.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AppreciationCategoryAggregateArgs>(
    args: Prisma.Subset<T, AppreciationCategoryAggregateArgs>,
  ): Prisma.PrismaPromise<GetAppreciationCategoryAggregateType<T>>;

  /**
   * Group by AppreciationCategory.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCategoryGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AppreciationCategoryGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AppreciationCategoryGroupByArgs["orderBy"] }
      : { orderBy?: AppreciationCategoryGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      AppreciationCategoryGroupByArgs,
      OrderByArg
    > &
      InputErrors,
  ): {} extends InputErrors
    ? GetAppreciationCategoryGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the AppreciationCategory model
   */
  readonly fields: AppreciationCategoryFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AppreciationCategory.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AppreciationCategoryClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  appreciations<
    T extends Prisma.AppreciationCategory$appreciationsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.AppreciationCategory$appreciationsArgs<ExtArgs>
    >,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AppreciationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the AppreciationCategory model
 */
export interface AppreciationCategoryFieldRefs {
  readonly id: Prisma.FieldRef<"AppreciationCategory", "Int">;
  readonly name: Prisma.FieldRef<"AppreciationCategory", "String">;
  readonly isActive: Prisma.FieldRef<"AppreciationCategory", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"AppreciationCategory", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"AppreciationCategory", "DateTime">;
  readonly createdBy: Prisma.FieldRef<"AppreciationCategory", "String">;
}

// Custom InputTypes
/**
 * AppreciationCategory findUnique
 */
export type AppreciationCategoryFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationCategory to fetch.
   */
  where: Prisma.AppreciationCategoryWhereUniqueInput;
};

/**
 * AppreciationCategory findUniqueOrThrow
 */
export type AppreciationCategoryFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationCategory to fetch.
   */
  where: Prisma.AppreciationCategoryWhereUniqueInput;
};

/**
 * AppreciationCategory findFirst
 */
export type AppreciationCategoryFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationCategory to fetch.
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationCategories to fetch.
   */
  orderBy?:
    | Prisma.AppreciationCategoryOrderByWithRelationInput
    | Prisma.AppreciationCategoryOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AppreciationCategories.
   */
  cursor?: Prisma.AppreciationCategoryWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationCategories from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationCategories.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AppreciationCategories.
   */
  distinct?:
    | Prisma.AppreciationCategoryScalarFieldEnum
    | Prisma.AppreciationCategoryScalarFieldEnum[];
};

/**
 * AppreciationCategory findFirstOrThrow
 */
export type AppreciationCategoryFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationCategory to fetch.
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationCategories to fetch.
   */
  orderBy?:
    | Prisma.AppreciationCategoryOrderByWithRelationInput
    | Prisma.AppreciationCategoryOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AppreciationCategories.
   */
  cursor?: Prisma.AppreciationCategoryWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationCategories from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationCategories.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AppreciationCategories.
   */
  distinct?:
    | Prisma.AppreciationCategoryScalarFieldEnum
    | Prisma.AppreciationCategoryScalarFieldEnum[];
};

/**
 * AppreciationCategory findMany
 */
export type AppreciationCategoryFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * Filter, which AppreciationCategories to fetch.
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AppreciationCategories to fetch.
   */
  orderBy?:
    | Prisma.AppreciationCategoryOrderByWithRelationInput
    | Prisma.AppreciationCategoryOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing AppreciationCategories.
   */
  cursor?: Prisma.AppreciationCategoryWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AppreciationCategories from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AppreciationCategories.
   */
  skip?: number;
  distinct?:
    | Prisma.AppreciationCategoryScalarFieldEnum
    | Prisma.AppreciationCategoryScalarFieldEnum[];
};

/**
 * AppreciationCategory create
 */
export type AppreciationCategoryCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * The data needed to create a AppreciationCategory.
   */
  data: Prisma.XOR<
    Prisma.AppreciationCategoryCreateInput,
    Prisma.AppreciationCategoryUncheckedCreateInput
  >;
};

/**
 * AppreciationCategory createMany
 */
export type AppreciationCategoryCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many AppreciationCategories.
   */
  data:
    | Prisma.AppreciationCategoryCreateManyInput
    | Prisma.AppreciationCategoryCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AppreciationCategory createManyAndReturn
 */
export type AppreciationCategoryCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * The data used to create many AppreciationCategories.
   */
  data:
    | Prisma.AppreciationCategoryCreateManyInput
    | Prisma.AppreciationCategoryCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AppreciationCategory update
 */
export type AppreciationCategoryUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * The data needed to update a AppreciationCategory.
   */
  data: Prisma.XOR<
    Prisma.AppreciationCategoryUpdateInput,
    Prisma.AppreciationCategoryUncheckedUpdateInput
  >;
  /**
   * Choose, which AppreciationCategory to update.
   */
  where: Prisma.AppreciationCategoryWhereUniqueInput;
};

/**
 * AppreciationCategory updateMany
 */
export type AppreciationCategoryUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update AppreciationCategories.
   */
  data: Prisma.XOR<
    Prisma.AppreciationCategoryUpdateManyMutationInput,
    Prisma.AppreciationCategoryUncheckedUpdateManyInput
  >;
  /**
   * Filter which AppreciationCategories to update
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * Limit how many AppreciationCategories to update.
   */
  limit?: number;
};

/**
 * AppreciationCategory updateManyAndReturn
 */
export type AppreciationCategoryUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * The data used to update AppreciationCategories.
   */
  data: Prisma.XOR<
    Prisma.AppreciationCategoryUpdateManyMutationInput,
    Prisma.AppreciationCategoryUncheckedUpdateManyInput
  >;
  /**
   * Filter which AppreciationCategories to update
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * Limit how many AppreciationCategories to update.
   */
  limit?: number;
};

/**
 * AppreciationCategory upsert
 */
export type AppreciationCategoryUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * The filter to search for the AppreciationCategory to update in case it exists.
   */
  where: Prisma.AppreciationCategoryWhereUniqueInput;
  /**
   * In case the AppreciationCategory found by the `where` argument doesn't exist, create a new AppreciationCategory with this data.
   */
  create: Prisma.XOR<
    Prisma.AppreciationCategoryCreateInput,
    Prisma.AppreciationCategoryUncheckedCreateInput
  >;
  /**
   * In case the AppreciationCategory was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.AppreciationCategoryUpdateInput,
    Prisma.AppreciationCategoryUncheckedUpdateInput
  >;
};

/**
 * AppreciationCategory delete
 */
export type AppreciationCategoryDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  /**
   * Filter which AppreciationCategory to delete.
   */
  where: Prisma.AppreciationCategoryWhereUniqueInput;
};

/**
 * AppreciationCategory deleteMany
 */
export type AppreciationCategoryDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AppreciationCategories to delete
   */
  where?: Prisma.AppreciationCategoryWhereInput;
  /**
   * Limit how many AppreciationCategories to delete.
   */
  limit?: number;
};

/**
 * AppreciationCategory.appreciations
 */
export type AppreciationCategory$appreciationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  where?: Prisma.AppreciationWhereInput;
  orderBy?:
    | Prisma.AppreciationOrderByWithRelationInput
    | Prisma.AppreciationOrderByWithRelationInput[];
  cursor?: Prisma.AppreciationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AppreciationScalarFieldEnum
    | Prisma.AppreciationScalarFieldEnum[];
};

/**
 * AppreciationCategory without action
 */
export type AppreciationCategoryDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
};
