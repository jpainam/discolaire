/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Appreciation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Appreciation
 *
 */
export type AppreciationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$AppreciationPayload>;

export type AggregateAppreciation = {
  _count: AppreciationCountAggregateOutputType | null;
  _avg: AppreciationAvgAggregateOutputType | null;
  _sum: AppreciationSumAggregateOutputType | null;
  _min: AppreciationMinAggregateOutputType | null;
  _max: AppreciationMaxAggregateOutputType | null;
};

export type AppreciationAvgAggregateOutputType = {
  id: number | null;
  categoryId: number | null;
};

export type AppreciationSumAggregateOutputType = {
  id: number | null;
  categoryId: number | null;
};

export type AppreciationMinAggregateOutputType = {
  id: number | null;
  content: string | null;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  categoryId: number | null;
};

export type AppreciationMaxAggregateOutputType = {
  id: number | null;
  content: string | null;
  isActive: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  categoryId: number | null;
};

export type AppreciationCountAggregateOutputType = {
  id: number;
  content: number;
  isActive: number;
  createdAt: number;
  updatedAt: number;
  categoryId: number;
  _all: number;
};

export type AppreciationAvgAggregateInputType = {
  id?: true;
  categoryId?: true;
};

export type AppreciationSumAggregateInputType = {
  id?: true;
  categoryId?: true;
};

export type AppreciationMinAggregateInputType = {
  id?: true;
  content?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  categoryId?: true;
};

export type AppreciationMaxAggregateInputType = {
  id?: true;
  content?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  categoryId?: true;
};

export type AppreciationCountAggregateInputType = {
  id?: true;
  content?: true;
  isActive?: true;
  createdAt?: true;
  updatedAt?: true;
  categoryId?: true;
  _all?: true;
};

export type AppreciationAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Appreciation to aggregate.
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Appreciations to fetch.
   */
  orderBy?:
    | Prisma.AppreciationOrderByWithRelationInput
    | Prisma.AppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Appreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Appreciations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Appreciations
   **/
  _count?: true | AppreciationCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: AppreciationAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: AppreciationSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AppreciationMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AppreciationMaxAggregateInputType;
};

export type GetAppreciationAggregateType<T extends AppreciationAggregateArgs> =
  {
    [P in keyof T & keyof AggregateAppreciation]: P extends "_count" | "count"
      ? T[P] extends true
        ? number
        : Prisma.GetScalarType<T[P], AggregateAppreciation[P]>
      : Prisma.GetScalarType<T[P], AggregateAppreciation[P]>;
  };

export type AppreciationGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AppreciationWhereInput;
  orderBy?:
    | Prisma.AppreciationOrderByWithAggregationInput
    | Prisma.AppreciationOrderByWithAggregationInput[];
  by: Prisma.AppreciationScalarFieldEnum[] | Prisma.AppreciationScalarFieldEnum;
  having?: Prisma.AppreciationScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AppreciationCountAggregateInputType | true;
  _avg?: AppreciationAvgAggregateInputType;
  _sum?: AppreciationSumAggregateInputType;
  _min?: AppreciationMinAggregateInputType;
  _max?: AppreciationMaxAggregateInputType;
};

export type AppreciationGroupByOutputType = {
  id: number;
  content: string;
  isActive: boolean | null;
  createdAt: Date;
  updatedAt: Date;
  categoryId: number | null;
  _count: AppreciationCountAggregateOutputType | null;
  _avg: AppreciationAvgAggregateOutputType | null;
  _sum: AppreciationSumAggregateOutputType | null;
  _min: AppreciationMinAggregateOutputType | null;
  _max: AppreciationMaxAggregateOutputType | null;
};

type GetAppreciationGroupByPayload<T extends AppreciationGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<AppreciationGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof AppreciationGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AppreciationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AppreciationGroupByOutputType[P]>;
      }
    >
  >;

export type AppreciationWhereInput = {
  AND?: Prisma.AppreciationWhereInput | Prisma.AppreciationWhereInput[];
  OR?: Prisma.AppreciationWhereInput[];
  NOT?: Prisma.AppreciationWhereInput | Prisma.AppreciationWhereInput[];
  id?: Prisma.IntFilter<"Appreciation"> | number;
  content?: Prisma.StringFilter<"Appreciation"> | string;
  isActive?: Prisma.BoolNullableFilter<"Appreciation"> | boolean | null;
  createdAt?: Prisma.DateTimeFilter<"Appreciation"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Appreciation"> | Date | string;
  categoryId?: Prisma.IntNullableFilter<"Appreciation"> | number | null;
  category?: Prisma.XOR<
    Prisma.AppreciationCategoryNullableScalarRelationFilter,
    Prisma.AppreciationCategoryWhereInput
  > | null;
};

export type AppreciationOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  isActive?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  category?: Prisma.AppreciationCategoryOrderByWithRelationInput;
};

export type AppreciationWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.AppreciationWhereInput | Prisma.AppreciationWhereInput[];
    OR?: Prisma.AppreciationWhereInput[];
    NOT?: Prisma.AppreciationWhereInput | Prisma.AppreciationWhereInput[];
    content?: Prisma.StringFilter<"Appreciation"> | string;
    isActive?: Prisma.BoolNullableFilter<"Appreciation"> | boolean | null;
    createdAt?: Prisma.DateTimeFilter<"Appreciation"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"Appreciation"> | Date | string;
    categoryId?: Prisma.IntNullableFilter<"Appreciation"> | number | null;
    category?: Prisma.XOR<
      Prisma.AppreciationCategoryNullableScalarRelationFilter,
      Prisma.AppreciationCategoryWhereInput
    > | null;
  },
  "id"
>;

export type AppreciationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  isActive?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.AppreciationCountOrderByAggregateInput;
  _avg?: Prisma.AppreciationAvgOrderByAggregateInput;
  _max?: Prisma.AppreciationMaxOrderByAggregateInput;
  _min?: Prisma.AppreciationMinOrderByAggregateInput;
  _sum?: Prisma.AppreciationSumOrderByAggregateInput;
};

export type AppreciationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AppreciationScalarWhereWithAggregatesInput
    | Prisma.AppreciationScalarWhereWithAggregatesInput[];
  OR?: Prisma.AppreciationScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AppreciationScalarWhereWithAggregatesInput
    | Prisma.AppreciationScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"Appreciation"> | number;
  content?: Prisma.StringWithAggregatesFilter<"Appreciation"> | string;
  isActive?:
    | Prisma.BoolNullableWithAggregatesFilter<"Appreciation">
    | boolean
    | null;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"Appreciation">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"Appreciation">
    | Date
    | string;
  categoryId?:
    | Prisma.IntNullableWithAggregatesFilter<"Appreciation">
    | number
    | null;
};

export type AppreciationCreateInput = {
  content: string;
  isActive?: boolean | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  category?: Prisma.AppreciationCategoryCreateNestedOneWithoutAppreciationsInput;
};

export type AppreciationUncheckedCreateInput = {
  id?: number;
  content: string;
  isActive?: boolean | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  categoryId?: number | null;
};

export type AppreciationUpdateInput = {
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  category?: Prisma.AppreciationCategoryUpdateOneWithoutAppreciationsNestedInput;
};

export type AppreciationUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type AppreciationCreateManyInput = {
  id?: number;
  content: string;
  isActive?: boolean | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  categoryId?: number | null;
};

export type AppreciationUpdateManyMutationInput = {
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AppreciationUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  categoryId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type AppreciationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
};

export type AppreciationAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
};

export type AppreciationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
};

export type AppreciationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
};

export type AppreciationSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  categoryId?: Prisma.SortOrder;
};

export type AppreciationListRelationFilter = {
  every?: Prisma.AppreciationWhereInput;
  some?: Prisma.AppreciationWhereInput;
  none?: Prisma.AppreciationWhereInput;
};

export type AppreciationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type AppreciationCreateNestedManyWithoutCategoryInput = {
  create?:
    | Prisma.XOR<
        Prisma.AppreciationCreateWithoutCategoryInput,
        Prisma.AppreciationUncheckedCreateWithoutCategoryInput
      >
    | Prisma.AppreciationCreateWithoutCategoryInput[]
    | Prisma.AppreciationUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput[];
  createMany?: Prisma.AppreciationCreateManyCategoryInputEnvelope;
  connect?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
};

export type AppreciationUncheckedCreateNestedManyWithoutCategoryInput = {
  create?:
    | Prisma.XOR<
        Prisma.AppreciationCreateWithoutCategoryInput,
        Prisma.AppreciationUncheckedCreateWithoutCategoryInput
      >
    | Prisma.AppreciationCreateWithoutCategoryInput[]
    | Prisma.AppreciationUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput[];
  createMany?: Prisma.AppreciationCreateManyCategoryInputEnvelope;
  connect?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
};

export type AppreciationUpdateManyWithoutCategoryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AppreciationCreateWithoutCategoryInput,
        Prisma.AppreciationUncheckedCreateWithoutCategoryInput
      >
    | Prisma.AppreciationCreateWithoutCategoryInput[]
    | Prisma.AppreciationUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput[];
  upsert?:
    | Prisma.AppreciationUpsertWithWhereUniqueWithoutCategoryInput
    | Prisma.AppreciationUpsertWithWhereUniqueWithoutCategoryInput[];
  createMany?: Prisma.AppreciationCreateManyCategoryInputEnvelope;
  set?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  disconnect?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  delete?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  connect?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  update?:
    | Prisma.AppreciationUpdateWithWhereUniqueWithoutCategoryInput
    | Prisma.AppreciationUpdateWithWhereUniqueWithoutCategoryInput[];
  updateMany?:
    | Prisma.AppreciationUpdateManyWithWhereWithoutCategoryInput
    | Prisma.AppreciationUpdateManyWithWhereWithoutCategoryInput[];
  deleteMany?:
    | Prisma.AppreciationScalarWhereInput
    | Prisma.AppreciationScalarWhereInput[];
};

export type AppreciationUncheckedUpdateManyWithoutCategoryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AppreciationCreateWithoutCategoryInput,
        Prisma.AppreciationUncheckedCreateWithoutCategoryInput
      >
    | Prisma.AppreciationCreateWithoutCategoryInput[]
    | Prisma.AppreciationUncheckedCreateWithoutCategoryInput[];
  connectOrCreate?:
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput
    | Prisma.AppreciationCreateOrConnectWithoutCategoryInput[];
  upsert?:
    | Prisma.AppreciationUpsertWithWhereUniqueWithoutCategoryInput
    | Prisma.AppreciationUpsertWithWhereUniqueWithoutCategoryInput[];
  createMany?: Prisma.AppreciationCreateManyCategoryInputEnvelope;
  set?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  disconnect?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  delete?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  connect?:
    | Prisma.AppreciationWhereUniqueInput
    | Prisma.AppreciationWhereUniqueInput[];
  update?:
    | Prisma.AppreciationUpdateWithWhereUniqueWithoutCategoryInput
    | Prisma.AppreciationUpdateWithWhereUniqueWithoutCategoryInput[];
  updateMany?:
    | Prisma.AppreciationUpdateManyWithWhereWithoutCategoryInput
    | Prisma.AppreciationUpdateManyWithWhereWithoutCategoryInput[];
  deleteMany?:
    | Prisma.AppreciationScalarWhereInput
    | Prisma.AppreciationScalarWhereInput[];
};

export type AppreciationCreateWithoutCategoryInput = {
  content: string;
  isActive?: boolean | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AppreciationUncheckedCreateWithoutCategoryInput = {
  id?: number;
  content: string;
  isActive?: boolean | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AppreciationCreateOrConnectWithoutCategoryInput = {
  where: Prisma.AppreciationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppreciationCreateWithoutCategoryInput,
    Prisma.AppreciationUncheckedCreateWithoutCategoryInput
  >;
};

export type AppreciationCreateManyCategoryInputEnvelope = {
  data:
    | Prisma.AppreciationCreateManyCategoryInput
    | Prisma.AppreciationCreateManyCategoryInput[];
  skipDuplicates?: boolean;
};

export type AppreciationUpsertWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.AppreciationWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AppreciationUpdateWithoutCategoryInput,
    Prisma.AppreciationUncheckedUpdateWithoutCategoryInput
  >;
  create: Prisma.XOR<
    Prisma.AppreciationCreateWithoutCategoryInput,
    Prisma.AppreciationUncheckedCreateWithoutCategoryInput
  >;
};

export type AppreciationUpdateWithWhereUniqueWithoutCategoryInput = {
  where: Prisma.AppreciationWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AppreciationUpdateWithoutCategoryInput,
    Prisma.AppreciationUncheckedUpdateWithoutCategoryInput
  >;
};

export type AppreciationUpdateManyWithWhereWithoutCategoryInput = {
  where: Prisma.AppreciationScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AppreciationUpdateManyMutationInput,
    Prisma.AppreciationUncheckedUpdateManyWithoutCategoryInput
  >;
};

export type AppreciationScalarWhereInput = {
  AND?:
    | Prisma.AppreciationScalarWhereInput
    | Prisma.AppreciationScalarWhereInput[];
  OR?: Prisma.AppreciationScalarWhereInput[];
  NOT?:
    | Prisma.AppreciationScalarWhereInput
    | Prisma.AppreciationScalarWhereInput[];
  id?: Prisma.IntFilter<"Appreciation"> | number;
  content?: Prisma.StringFilter<"Appreciation"> | string;
  isActive?: Prisma.BoolNullableFilter<"Appreciation"> | boolean | null;
  createdAt?: Prisma.DateTimeFilter<"Appreciation"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Appreciation"> | Date | string;
  categoryId?: Prisma.IntNullableFilter<"Appreciation"> | number | null;
};

export type AppreciationCreateManyCategoryInput = {
  id?: number;
  content: string;
  isActive?: boolean | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AppreciationUpdateWithoutCategoryInput = {
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AppreciationUncheckedUpdateWithoutCategoryInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AppreciationUncheckedUpdateManyWithoutCategoryInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  isActive?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AppreciationSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    content?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    categoryId?: boolean;
    category?: boolean | Prisma.Appreciation$categoryArgs<ExtArgs>;
  },
  ExtArgs["result"]["appreciation"]
>;

export type AppreciationSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    content?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    categoryId?: boolean;
    category?: boolean | Prisma.Appreciation$categoryArgs<ExtArgs>;
  },
  ExtArgs["result"]["appreciation"]
>;

export type AppreciationSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    content?: boolean;
    isActive?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    categoryId?: boolean;
    category?: boolean | Prisma.Appreciation$categoryArgs<ExtArgs>;
  },
  ExtArgs["result"]["appreciation"]
>;

export type AppreciationSelectScalar = {
  id?: boolean;
  content?: boolean;
  isActive?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  categoryId?: boolean;
};

export type AppreciationOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  "id" | "content" | "isActive" | "createdAt" | "updatedAt" | "categoryId",
  ExtArgs["result"]["appreciation"]
>;
export type AppreciationInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  category?: boolean | Prisma.Appreciation$categoryArgs<ExtArgs>;
};
export type AppreciationIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  category?: boolean | Prisma.Appreciation$categoryArgs<ExtArgs>;
};
export type AppreciationIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  category?: boolean | Prisma.Appreciation$categoryArgs<ExtArgs>;
};

export type $AppreciationPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "Appreciation";
  objects: {
    category: Prisma.$AppreciationCategoryPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      content: string;
      isActive: boolean | null;
      createdAt: Date;
      updatedAt: Date;
      categoryId: number | null;
    },
    ExtArgs["result"]["appreciation"]
  >;
  composites: {};
};

export type AppreciationGetPayload<
  S extends boolean | null | undefined | AppreciationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$AppreciationPayload, S>;

export type AppreciationCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  AppreciationFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: AppreciationCountAggregateInputType | true;
};

export interface AppreciationDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["Appreciation"];
    meta: { name: "Appreciation" };
  };
  /**
   * Find zero or one Appreciation that matches the filter.
   * @param {AppreciationFindUniqueArgs} args - Arguments to find a Appreciation
   * @example
   * // Get one Appreciation
   * const appreciation = await prisma.appreciation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AppreciationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AppreciationFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Appreciation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AppreciationFindUniqueOrThrowArgs} args - Arguments to find a Appreciation
   * @example
   * // Get one Appreciation
   * const appreciation = await prisma.appreciation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AppreciationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AppreciationFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Appreciation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationFindFirstArgs} args - Arguments to find a Appreciation
   * @example
   * // Get one Appreciation
   * const appreciation = await prisma.appreciation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AppreciationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AppreciationFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Appreciation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationFindFirstOrThrowArgs} args - Arguments to find a Appreciation
   * @example
   * // Get one Appreciation
   * const appreciation = await prisma.appreciation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AppreciationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AppreciationFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Appreciations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Appreciations
   * const appreciations = await prisma.appreciation.findMany()
   *
   * // Get first 10 Appreciations
   * const appreciations = await prisma.appreciation.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const appreciationWithIdOnly = await prisma.appreciation.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AppreciationFindManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a Appreciation.
   * @param {AppreciationCreateArgs} args - Arguments to create a Appreciation.
   * @example
   * // Create one Appreciation
   * const Appreciation = await prisma.appreciation.create({
   *   data: {
   *     // ... data to create a Appreciation
   *   }
   * })
   *
   */
  create<T extends AppreciationCreateArgs>(
    args: Prisma.SelectSubset<T, AppreciationCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Appreciations.
   * @param {AppreciationCreateManyArgs} args - Arguments to create many Appreciations.
   * @example
   * // Create many Appreciations
   * const appreciation = await prisma.appreciation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AppreciationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Appreciations and returns the data saved in the database.
   * @param {AppreciationCreateManyAndReturnArgs} args - Arguments to create many Appreciations.
   * @example
   * // Create many Appreciations
   * const appreciation = await prisma.appreciation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Appreciations and only return the `id`
   * const appreciationWithIdOnly = await prisma.appreciation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AppreciationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, AppreciationCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Appreciation.
   * @param {AppreciationDeleteArgs} args - Arguments to delete one Appreciation.
   * @example
   * // Delete one Appreciation
   * const Appreciation = await prisma.appreciation.delete({
   *   where: {
   *     // ... filter to delete one Appreciation
   *   }
   * })
   *
   */
  delete<T extends AppreciationDeleteArgs>(
    args: Prisma.SelectSubset<T, AppreciationDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Appreciation.
   * @param {AppreciationUpdateArgs} args - Arguments to update one Appreciation.
   * @example
   * // Update one Appreciation
   * const appreciation = await prisma.appreciation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AppreciationUpdateArgs>(
    args: Prisma.SelectSubset<T, AppreciationUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Appreciations.
   * @param {AppreciationDeleteManyArgs} args - Arguments to filter Appreciations to delete.
   * @example
   * // Delete a few Appreciations
   * const { count } = await prisma.appreciation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AppreciationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AppreciationDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Appreciations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Appreciations
   * const appreciation = await prisma.appreciation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AppreciationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AppreciationUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Appreciations and returns the data updated in the database.
   * @param {AppreciationUpdateManyAndReturnArgs} args - Arguments to update many Appreciations.
   * @example
   * // Update many Appreciations
   * const appreciation = await prisma.appreciation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Appreciations and only return the `id`
   * const appreciationWithIdOnly = await prisma.appreciation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AppreciationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AppreciationUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Appreciation.
   * @param {AppreciationUpsertArgs} args - Arguments to update or create a Appreciation.
   * @example
   * // Update or create a Appreciation
   * const appreciation = await prisma.appreciation.upsert({
   *   create: {
   *     // ... data to create a Appreciation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Appreciation we want to update
   *   }
   * })
   */
  upsert<T extends AppreciationUpsertArgs>(
    args: Prisma.SelectSubset<T, AppreciationUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Appreciations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationCountArgs} args - Arguments to filter Appreciations to count.
   * @example
   * // Count the number of Appreciations
   * const count = await prisma.appreciation.count({
   *   where: {
   *     // ... the filter for the Appreciations we want to count
   *   }
   * })
   **/
  count<T extends AppreciationCountArgs>(
    args?: Prisma.Subset<T, AppreciationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            AppreciationCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Appreciation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AppreciationAggregateArgs>(
    args: Prisma.Subset<T, AppreciationAggregateArgs>,
  ): Prisma.PrismaPromise<GetAppreciationAggregateType<T>>;

  /**
   * Group by Appreciation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppreciationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AppreciationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AppreciationGroupByArgs["orderBy"] }
      : { orderBy?: AppreciationGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, AppreciationGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetAppreciationGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Appreciation model
   */
  readonly fields: AppreciationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Appreciation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AppreciationClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  category<T extends Prisma.Appreciation$categoryArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Appreciation$categoryArgs<ExtArgs>>,
  ): Prisma.Prisma__AppreciationCategoryClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppreciationCategoryPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Appreciation model
 */
export interface AppreciationFieldRefs {
  readonly id: Prisma.FieldRef<"Appreciation", "Int">;
  readonly content: Prisma.FieldRef<"Appreciation", "String">;
  readonly isActive: Prisma.FieldRef<"Appreciation", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"Appreciation", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"Appreciation", "DateTime">;
  readonly categoryId: Prisma.FieldRef<"Appreciation", "Int">;
}

// Custom InputTypes
/**
 * Appreciation findUnique
 */
export type AppreciationFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which Appreciation to fetch.
   */
  where: Prisma.AppreciationWhereUniqueInput;
};

/**
 * Appreciation findUniqueOrThrow
 */
export type AppreciationFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which Appreciation to fetch.
   */
  where: Prisma.AppreciationWhereUniqueInput;
};

/**
 * Appreciation findFirst
 */
export type AppreciationFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which Appreciation to fetch.
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Appreciations to fetch.
   */
  orderBy?:
    | Prisma.AppreciationOrderByWithRelationInput
    | Prisma.AppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Appreciations.
   */
  cursor?: Prisma.AppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Appreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Appreciations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Appreciations.
   */
  distinct?:
    | Prisma.AppreciationScalarFieldEnum
    | Prisma.AppreciationScalarFieldEnum[];
};

/**
 * Appreciation findFirstOrThrow
 */
export type AppreciationFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which Appreciation to fetch.
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Appreciations to fetch.
   */
  orderBy?:
    | Prisma.AppreciationOrderByWithRelationInput
    | Prisma.AppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Appreciations.
   */
  cursor?: Prisma.AppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Appreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Appreciations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Appreciations.
   */
  distinct?:
    | Prisma.AppreciationScalarFieldEnum
    | Prisma.AppreciationScalarFieldEnum[];
};

/**
 * Appreciation findMany
 */
export type AppreciationFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * Filter, which Appreciations to fetch.
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Appreciations to fetch.
   */
  orderBy?:
    | Prisma.AppreciationOrderByWithRelationInput
    | Prisma.AppreciationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Appreciations.
   */
  cursor?: Prisma.AppreciationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Appreciations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Appreciations.
   */
  skip?: number;
  distinct?:
    | Prisma.AppreciationScalarFieldEnum
    | Prisma.AppreciationScalarFieldEnum[];
};

/**
 * Appreciation create
 */
export type AppreciationCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * The data needed to create a Appreciation.
   */
  data: Prisma.XOR<
    Prisma.AppreciationCreateInput,
    Prisma.AppreciationUncheckedCreateInput
  >;
};

/**
 * Appreciation createMany
 */
export type AppreciationCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Appreciations.
   */
  data:
    | Prisma.AppreciationCreateManyInput
    | Prisma.AppreciationCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Appreciation createManyAndReturn
 */
export type AppreciationCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * The data used to create many Appreciations.
   */
  data:
    | Prisma.AppreciationCreateManyInput
    | Prisma.AppreciationCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Appreciation update
 */
export type AppreciationUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * The data needed to update a Appreciation.
   */
  data: Prisma.XOR<
    Prisma.AppreciationUpdateInput,
    Prisma.AppreciationUncheckedUpdateInput
  >;
  /**
   * Choose, which Appreciation to update.
   */
  where: Prisma.AppreciationWhereUniqueInput;
};

/**
 * Appreciation updateMany
 */
export type AppreciationUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Appreciations.
   */
  data: Prisma.XOR<
    Prisma.AppreciationUpdateManyMutationInput,
    Prisma.AppreciationUncheckedUpdateManyInput
  >;
  /**
   * Filter which Appreciations to update
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * Limit how many Appreciations to update.
   */
  limit?: number;
};

/**
 * Appreciation updateManyAndReturn
 */
export type AppreciationUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * The data used to update Appreciations.
   */
  data: Prisma.XOR<
    Prisma.AppreciationUpdateManyMutationInput,
    Prisma.AppreciationUncheckedUpdateManyInput
  >;
  /**
   * Filter which Appreciations to update
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * Limit how many Appreciations to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Appreciation upsert
 */
export type AppreciationUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * The filter to search for the Appreciation to update in case it exists.
   */
  where: Prisma.AppreciationWhereUniqueInput;
  /**
   * In case the Appreciation found by the `where` argument doesn't exist, create a new Appreciation with this data.
   */
  create: Prisma.XOR<
    Prisma.AppreciationCreateInput,
    Prisma.AppreciationUncheckedCreateInput
  >;
  /**
   * In case the Appreciation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.AppreciationUpdateInput,
    Prisma.AppreciationUncheckedUpdateInput
  >;
};

/**
 * Appreciation delete
 */
export type AppreciationDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
  /**
   * Filter which Appreciation to delete.
   */
  where: Prisma.AppreciationWhereUniqueInput;
};

/**
 * Appreciation deleteMany
 */
export type AppreciationDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Appreciations to delete
   */
  where?: Prisma.AppreciationWhereInput;
  /**
   * Limit how many Appreciations to delete.
   */
  limit?: number;
};

/**
 * Appreciation.category
 */
export type Appreciation$categoryArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AppreciationCategory
   */
  select?: Prisma.AppreciationCategorySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AppreciationCategory
   */
  omit?: Prisma.AppreciationCategoryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationCategoryInclude<ExtArgs> | null;
  where?: Prisma.AppreciationCategoryWhereInput;
};

/**
 * Appreciation without action
 */
export type AppreciationDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Appreciation
   */
  select?: Prisma.AppreciationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Appreciation
   */
  omit?: Prisma.AppreciationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppreciationInclude<ExtArgs> | null;
};
