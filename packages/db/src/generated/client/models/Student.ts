/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Student` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Student
 *
 */
export type StudentModel =
  runtime.Types.Result.DefaultSelection<Prisma.$StudentPayload>;

export type AggregateStudent = {
  _count: StudentCountAggregateOutputType | null;
  _min: StudentMinAggregateOutputType | null;
  _max: StudentMaxAggregateOutputType | null;
};

export type StudentMinAggregateOutputType = {
  id: string | null;
  registrationNumber: string | null;
  isActive: boolean | null;
  firstName: string | null;
  lastName: string | null;
  dateOfBirth: Date | null;
  bloodType: string | null;
  placeOfBirth: string | null;
  residence: string | null;
  status: $Enums.StudentStatus | null;
  gender: string | null;
  religionId: string | null;
  isBaptized: boolean | null;
  isRepeating: boolean | null;
  isNew: boolean | null;
  phoneNumber: string | null;
  parentDivorced: boolean | null;
  dateOfEntry: Date | null;
  dateOfExit: Date | null;
  dateOfWithdraw: Date | null;
  lastAccessed: Date | null;
  observation: string | null;
  externalAccountingNo: string | null;
  allergies: string | null;
  countryId: string | null;
  userId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  createdById: string | null;
  formerSchoolId: string | null;
  schoolId: string | null;
};

export type StudentMaxAggregateOutputType = {
  id: string | null;
  registrationNumber: string | null;
  isActive: boolean | null;
  firstName: string | null;
  lastName: string | null;
  dateOfBirth: Date | null;
  bloodType: string | null;
  placeOfBirth: string | null;
  residence: string | null;
  status: $Enums.StudentStatus | null;
  gender: string | null;
  religionId: string | null;
  isBaptized: boolean | null;
  isRepeating: boolean | null;
  isNew: boolean | null;
  phoneNumber: string | null;
  parentDivorced: boolean | null;
  dateOfEntry: Date | null;
  dateOfExit: Date | null;
  dateOfWithdraw: Date | null;
  lastAccessed: Date | null;
  observation: string | null;
  externalAccountingNo: string | null;
  allergies: string | null;
  countryId: string | null;
  userId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  createdById: string | null;
  formerSchoolId: string | null;
  schoolId: string | null;
};

export type StudentCountAggregateOutputType = {
  id: number;
  registrationNumber: number;
  isActive: number;
  firstName: number;
  lastName: number;
  dateOfBirth: number;
  bloodType: number;
  placeOfBirth: number;
  photos: number;
  residence: number;
  status: number;
  gender: number;
  religionId: number;
  isBaptized: number;
  isRepeating: number;
  isNew: number;
  phoneNumber: number;
  parentDivorced: number;
  dateOfEntry: number;
  dateOfExit: number;
  dateOfWithdraw: number;
  lastAccessed: number;
  observation: number;
  externalAccountingNo: number;
  allergies: number;
  countryId: number;
  userId: number;
  tags: number;
  createdAt: number;
  updatedAt: number;
  createdById: number;
  formerSchoolId: number;
  achievements: number;
  hobbies: number;
  socialMedias: number;
  schoolId: number;
  _all: number;
};

export type StudentMinAggregateInputType = {
  id?: true;
  registrationNumber?: true;
  isActive?: true;
  firstName?: true;
  lastName?: true;
  dateOfBirth?: true;
  bloodType?: true;
  placeOfBirth?: true;
  residence?: true;
  status?: true;
  gender?: true;
  religionId?: true;
  isBaptized?: true;
  isRepeating?: true;
  isNew?: true;
  phoneNumber?: true;
  parentDivorced?: true;
  dateOfEntry?: true;
  dateOfExit?: true;
  dateOfWithdraw?: true;
  lastAccessed?: true;
  observation?: true;
  externalAccountingNo?: true;
  allergies?: true;
  countryId?: true;
  userId?: true;
  createdAt?: true;
  updatedAt?: true;
  createdById?: true;
  formerSchoolId?: true;
  schoolId?: true;
};

export type StudentMaxAggregateInputType = {
  id?: true;
  registrationNumber?: true;
  isActive?: true;
  firstName?: true;
  lastName?: true;
  dateOfBirth?: true;
  bloodType?: true;
  placeOfBirth?: true;
  residence?: true;
  status?: true;
  gender?: true;
  religionId?: true;
  isBaptized?: true;
  isRepeating?: true;
  isNew?: true;
  phoneNumber?: true;
  parentDivorced?: true;
  dateOfEntry?: true;
  dateOfExit?: true;
  dateOfWithdraw?: true;
  lastAccessed?: true;
  observation?: true;
  externalAccountingNo?: true;
  allergies?: true;
  countryId?: true;
  userId?: true;
  createdAt?: true;
  updatedAt?: true;
  createdById?: true;
  formerSchoolId?: true;
  schoolId?: true;
};

export type StudentCountAggregateInputType = {
  id?: true;
  registrationNumber?: true;
  isActive?: true;
  firstName?: true;
  lastName?: true;
  dateOfBirth?: true;
  bloodType?: true;
  placeOfBirth?: true;
  photos?: true;
  residence?: true;
  status?: true;
  gender?: true;
  religionId?: true;
  isBaptized?: true;
  isRepeating?: true;
  isNew?: true;
  phoneNumber?: true;
  parentDivorced?: true;
  dateOfEntry?: true;
  dateOfExit?: true;
  dateOfWithdraw?: true;
  lastAccessed?: true;
  observation?: true;
  externalAccountingNo?: true;
  allergies?: true;
  countryId?: true;
  userId?: true;
  tags?: true;
  createdAt?: true;
  updatedAt?: true;
  createdById?: true;
  formerSchoolId?: true;
  achievements?: true;
  hobbies?: true;
  socialMedias?: true;
  schoolId?: true;
  _all?: true;
};

export type StudentAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Student to aggregate.
   */
  where?: Prisma.StudentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Students to fetch.
   */
  orderBy?:
    | Prisma.StudentOrderByWithRelationInput
    | Prisma.StudentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.StudentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Students.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Students
   **/
  _count?: true | StudentCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: StudentMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: StudentMaxAggregateInputType;
};

export type GetStudentAggregateType<T extends StudentAggregateArgs> = {
  [P in keyof T & keyof AggregateStudent]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStudent[P]>
    : Prisma.GetScalarType<T[P], AggregateStudent[P]>;
};

export type StudentGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentWhereInput;
  orderBy?:
    | Prisma.StudentOrderByWithAggregationInput
    | Prisma.StudentOrderByWithAggregationInput[];
  by: Prisma.StudentScalarFieldEnum[] | Prisma.StudentScalarFieldEnum;
  having?: Prisma.StudentScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: StudentCountAggregateInputType | true;
  _min?: StudentMinAggregateInputType;
  _max?: StudentMaxAggregateInputType;
};

export type StudentGroupByOutputType = {
  id: string;
  registrationNumber: string | null;
  isActive: boolean;
  firstName: string | null;
  lastName: string | null;
  dateOfBirth: Date | null;
  bloodType: string | null;
  placeOfBirth: string | null;
  photos: string[];
  residence: string | null;
  status: $Enums.StudentStatus;
  gender: string | null;
  religionId: string | null;
  isBaptized: boolean;
  isRepeating: boolean;
  isNew: boolean;
  phoneNumber: string | null;
  parentDivorced: boolean;
  dateOfEntry: Date | null;
  dateOfExit: Date | null;
  dateOfWithdraw: Date | null;
  lastAccessed: Date;
  observation: string | null;
  externalAccountingNo: string | null;
  allergies: string | null;
  countryId: string | null;
  userId: string | null;
  tags: runtime.JsonValue | null;
  createdAt: Date;
  updatedAt: Date;
  createdById: string | null;
  formerSchoolId: string | null;
  achievements: string[];
  hobbies: string[];
  socialMedias: string[];
  schoolId: string;
  _count: StudentCountAggregateOutputType | null;
  _min: StudentMinAggregateOutputType | null;
  _max: StudentMaxAggregateOutputType | null;
};

type GetStudentGroupByPayload<T extends StudentGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<StudentGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof StudentGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StudentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StudentGroupByOutputType[P]>;
      }
    >
  >;

export type StudentWhereInput = {
  AND?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[];
  OR?: Prisma.StudentWhereInput[];
  NOT?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[];
  id?: Prisma.StringFilter<"Student"> | string;
  registrationNumber?: Prisma.StringNullableFilter<"Student"> | string | null;
  isActive?: Prisma.BoolFilter<"Student"> | boolean;
  firstName?: Prisma.StringNullableFilter<"Student"> | string | null;
  lastName?: Prisma.StringNullableFilter<"Student"> | string | null;
  dateOfBirth?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null;
  bloodType?: Prisma.StringNullableFilter<"Student"> | string | null;
  placeOfBirth?: Prisma.StringNullableFilter<"Student"> | string | null;
  photos?: Prisma.StringNullableListFilter<"Student">;
  residence?: Prisma.StringNullableFilter<"Student"> | string | null;
  status?: Prisma.EnumStudentStatusFilter<"Student"> | $Enums.StudentStatus;
  gender?: Prisma.StringNullableFilter<"Student"> | string | null;
  religionId?: Prisma.StringNullableFilter<"Student"> | string | null;
  isBaptized?: Prisma.BoolFilter<"Student"> | boolean;
  isRepeating?: Prisma.BoolFilter<"Student"> | boolean;
  isNew?: Prisma.BoolFilter<"Student"> | boolean;
  phoneNumber?: Prisma.StringNullableFilter<"Student"> | string | null;
  parentDivorced?: Prisma.BoolFilter<"Student"> | boolean;
  dateOfEntry?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null;
  dateOfExit?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null;
  dateOfWithdraw?:
    | Prisma.DateTimeNullableFilter<"Student">
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFilter<"Student"> | Date | string;
  observation?: Prisma.StringNullableFilter<"Student"> | string | null;
  externalAccountingNo?: Prisma.StringNullableFilter<"Student"> | string | null;
  allergies?: Prisma.StringNullableFilter<"Student"> | string | null;
  countryId?: Prisma.StringNullableFilter<"Student"> | string | null;
  userId?: Prisma.StringNullableFilter<"Student"> | string | null;
  tags?: Prisma.JsonNullableFilter<"Student">;
  createdAt?: Prisma.DateTimeFilter<"Student"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Student"> | Date | string;
  createdById?: Prisma.StringNullableFilter<"Student"> | string | null;
  formerSchoolId?: Prisma.StringNullableFilter<"Student"> | string | null;
  achievements?: Prisma.StringNullableListFilter<"Student">;
  hobbies?: Prisma.StringNullableListFilter<"Student">;
  socialMedias?: Prisma.StringNullableListFilter<"Student">;
  schoolId?: Prisma.StringFilter<"Student"> | string;
  enrollments?: Prisma.EnrollmentListRelationFilter;
  grades?: Prisma.GradeListRelationFilter;
  country?: Prisma.XOR<
    Prisma.CountryNullableScalarRelationFilter,
    Prisma.CountryWhereInput
  > | null;
  formerSchool?: Prisma.XOR<
    Prisma.FormerSchoolNullableScalarRelationFilter,
    Prisma.FormerSchoolWhereInput
  > | null;
  user?: Prisma.XOR<
    Prisma.UserNullableScalarRelationFilter,
    Prisma.UserWhereInput
  > | null;
  transactions?: Prisma.TransactionListRelationFilter;
  studentContacts?: Prisma.StudentContactListRelationFilter;
  siblings?: Prisma.StudentSiblingListRelationFilter;
  siblings2?: Prisma.StudentSiblingListRelationFilter;
  classrooms?: Prisma.ClassroomListRelationFilter;
  reportCards?: Prisma.ReportCardListRelationFilter;
  religion?: Prisma.XOR<
    Prisma.ReligionNullableScalarRelationFilter,
    Prisma.ReligionWhereInput
  > | null;
  sports?: Prisma.StudentSportListRelationFilter;
  clubs?: Prisma.StudentClubListRelationFilter;
  preventedAbsences?: Prisma.PreventedAbsenceListRelationFilter;
  school?: Prisma.XOR<
    Prisma.SchoolScalarRelationFilter,
    Prisma.SchoolWhereInput
  >;
  absences?: Prisma.AbsenceListRelationFilter;
  latenesses?: Prisma.LatenessListRelationFilter;
  consignes?: Prisma.ConsigneListRelationFilter;
  chatters?: Prisma.ChatterListRelationFilter;
  exclusions?: Prisma.ExclusionListRelationFilter;
  requiredFees?: Prisma.RequiredFeeTransactionListRelationFilter;
  convocations?: Prisma.ConvocationListRelationFilter;
  periodicAttendances?: Prisma.PeriodicAttendanceListRelationFilter;
};

export type StudentOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  registrationNumber?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder;
  bloodType?: Prisma.SortOrderInput | Prisma.SortOrder;
  placeOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder;
  photos?: Prisma.SortOrder;
  residence?: Prisma.SortOrderInput | Prisma.SortOrder;
  status?: Prisma.SortOrder;
  gender?: Prisma.SortOrderInput | Prisma.SortOrder;
  religionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  isBaptized?: Prisma.SortOrder;
  isRepeating?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder;
  parentDivorced?: Prisma.SortOrder;
  dateOfEntry?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfExit?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfWithdraw?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastAccessed?: Prisma.SortOrder;
  observation?: Prisma.SortOrderInput | Prisma.SortOrder;
  externalAccountingNo?: Prisma.SortOrderInput | Prisma.SortOrder;
  allergies?: Prisma.SortOrderInput | Prisma.SortOrder;
  countryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  tags?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrderInput | Prisma.SortOrder;
  formerSchoolId?: Prisma.SortOrderInput | Prisma.SortOrder;
  achievements?: Prisma.SortOrder;
  hobbies?: Prisma.SortOrder;
  socialMedias?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  enrollments?: Prisma.EnrollmentOrderByRelationAggregateInput;
  grades?: Prisma.GradeOrderByRelationAggregateInput;
  country?: Prisma.CountryOrderByWithRelationInput;
  formerSchool?: Prisma.FormerSchoolOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
  transactions?: Prisma.TransactionOrderByRelationAggregateInput;
  studentContacts?: Prisma.StudentContactOrderByRelationAggregateInput;
  siblings?: Prisma.StudentSiblingOrderByRelationAggregateInput;
  siblings2?: Prisma.StudentSiblingOrderByRelationAggregateInput;
  classrooms?: Prisma.ClassroomOrderByRelationAggregateInput;
  reportCards?: Prisma.ReportCardOrderByRelationAggregateInput;
  religion?: Prisma.ReligionOrderByWithRelationInput;
  sports?: Prisma.StudentSportOrderByRelationAggregateInput;
  clubs?: Prisma.StudentClubOrderByRelationAggregateInput;
  preventedAbsences?: Prisma.PreventedAbsenceOrderByRelationAggregateInput;
  school?: Prisma.SchoolOrderByWithRelationInput;
  absences?: Prisma.AbsenceOrderByRelationAggregateInput;
  latenesses?: Prisma.LatenessOrderByRelationAggregateInput;
  consignes?: Prisma.ConsigneOrderByRelationAggregateInput;
  chatters?: Prisma.ChatterOrderByRelationAggregateInput;
  exclusions?: Prisma.ExclusionOrderByRelationAggregateInput;
  requiredFees?: Prisma.RequiredFeeTransactionOrderByRelationAggregateInput;
  convocations?: Prisma.ConvocationOrderByRelationAggregateInput;
  periodicAttendances?: Prisma.PeriodicAttendanceOrderByRelationAggregateInput;
};

export type StudentWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[];
    OR?: Prisma.StudentWhereInput[];
    NOT?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[];
    registrationNumber?: Prisma.StringNullableFilter<"Student"> | string | null;
    isActive?: Prisma.BoolFilter<"Student"> | boolean;
    firstName?: Prisma.StringNullableFilter<"Student"> | string | null;
    lastName?: Prisma.StringNullableFilter<"Student"> | string | null;
    dateOfBirth?:
      | Prisma.DateTimeNullableFilter<"Student">
      | Date
      | string
      | null;
    bloodType?: Prisma.StringNullableFilter<"Student"> | string | null;
    placeOfBirth?: Prisma.StringNullableFilter<"Student"> | string | null;
    photos?: Prisma.StringNullableListFilter<"Student">;
    residence?: Prisma.StringNullableFilter<"Student"> | string | null;
    status?: Prisma.EnumStudentStatusFilter<"Student"> | $Enums.StudentStatus;
    gender?: Prisma.StringNullableFilter<"Student"> | string | null;
    religionId?: Prisma.StringNullableFilter<"Student"> | string | null;
    isBaptized?: Prisma.BoolFilter<"Student"> | boolean;
    isRepeating?: Prisma.BoolFilter<"Student"> | boolean;
    isNew?: Prisma.BoolFilter<"Student"> | boolean;
    phoneNumber?: Prisma.StringNullableFilter<"Student"> | string | null;
    parentDivorced?: Prisma.BoolFilter<"Student"> | boolean;
    dateOfEntry?:
      | Prisma.DateTimeNullableFilter<"Student">
      | Date
      | string
      | null;
    dateOfExit?:
      | Prisma.DateTimeNullableFilter<"Student">
      | Date
      | string
      | null;
    dateOfWithdraw?:
      | Prisma.DateTimeNullableFilter<"Student">
      | Date
      | string
      | null;
    lastAccessed?: Prisma.DateTimeFilter<"Student"> | Date | string;
    observation?: Prisma.StringNullableFilter<"Student"> | string | null;
    externalAccountingNo?:
      | Prisma.StringNullableFilter<"Student">
      | string
      | null;
    allergies?: Prisma.StringNullableFilter<"Student"> | string | null;
    countryId?: Prisma.StringNullableFilter<"Student"> | string | null;
    userId?: Prisma.StringNullableFilter<"Student"> | string | null;
    tags?: Prisma.JsonNullableFilter<"Student">;
    createdAt?: Prisma.DateTimeFilter<"Student"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"Student"> | Date | string;
    createdById?: Prisma.StringNullableFilter<"Student"> | string | null;
    formerSchoolId?: Prisma.StringNullableFilter<"Student"> | string | null;
    achievements?: Prisma.StringNullableListFilter<"Student">;
    hobbies?: Prisma.StringNullableListFilter<"Student">;
    socialMedias?: Prisma.StringNullableListFilter<"Student">;
    schoolId?: Prisma.StringFilter<"Student"> | string;
    enrollments?: Prisma.EnrollmentListRelationFilter;
    grades?: Prisma.GradeListRelationFilter;
    country?: Prisma.XOR<
      Prisma.CountryNullableScalarRelationFilter,
      Prisma.CountryWhereInput
    > | null;
    formerSchool?: Prisma.XOR<
      Prisma.FormerSchoolNullableScalarRelationFilter,
      Prisma.FormerSchoolWhereInput
    > | null;
    user?: Prisma.XOR<
      Prisma.UserNullableScalarRelationFilter,
      Prisma.UserWhereInput
    > | null;
    transactions?: Prisma.TransactionListRelationFilter;
    studentContacts?: Prisma.StudentContactListRelationFilter;
    siblings?: Prisma.StudentSiblingListRelationFilter;
    siblings2?: Prisma.StudentSiblingListRelationFilter;
    classrooms?: Prisma.ClassroomListRelationFilter;
    reportCards?: Prisma.ReportCardListRelationFilter;
    religion?: Prisma.XOR<
      Prisma.ReligionNullableScalarRelationFilter,
      Prisma.ReligionWhereInput
    > | null;
    sports?: Prisma.StudentSportListRelationFilter;
    clubs?: Prisma.StudentClubListRelationFilter;
    preventedAbsences?: Prisma.PreventedAbsenceListRelationFilter;
    school?: Prisma.XOR<
      Prisma.SchoolScalarRelationFilter,
      Prisma.SchoolWhereInput
    >;
    absences?: Prisma.AbsenceListRelationFilter;
    latenesses?: Prisma.LatenessListRelationFilter;
    consignes?: Prisma.ConsigneListRelationFilter;
    chatters?: Prisma.ChatterListRelationFilter;
    exclusions?: Prisma.ExclusionListRelationFilter;
    requiredFees?: Prisma.RequiredFeeTransactionListRelationFilter;
    convocations?: Prisma.ConvocationListRelationFilter;
    periodicAttendances?: Prisma.PeriodicAttendanceListRelationFilter;
  },
  "id"
>;

export type StudentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  registrationNumber?: Prisma.SortOrderInput | Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder;
  bloodType?: Prisma.SortOrderInput | Prisma.SortOrder;
  placeOfBirth?: Prisma.SortOrderInput | Prisma.SortOrder;
  photos?: Prisma.SortOrder;
  residence?: Prisma.SortOrderInput | Prisma.SortOrder;
  status?: Prisma.SortOrder;
  gender?: Prisma.SortOrderInput | Prisma.SortOrder;
  religionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  isBaptized?: Prisma.SortOrder;
  isRepeating?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrderInput | Prisma.SortOrder;
  parentDivorced?: Prisma.SortOrder;
  dateOfEntry?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfExit?: Prisma.SortOrderInput | Prisma.SortOrder;
  dateOfWithdraw?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastAccessed?: Prisma.SortOrder;
  observation?: Prisma.SortOrderInput | Prisma.SortOrder;
  externalAccountingNo?: Prisma.SortOrderInput | Prisma.SortOrder;
  allergies?: Prisma.SortOrderInput | Prisma.SortOrder;
  countryId?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  tags?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrderInput | Prisma.SortOrder;
  formerSchoolId?: Prisma.SortOrderInput | Prisma.SortOrder;
  achievements?: Prisma.SortOrder;
  hobbies?: Prisma.SortOrder;
  socialMedias?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
  _count?: Prisma.StudentCountOrderByAggregateInput;
  _max?: Prisma.StudentMaxOrderByAggregateInput;
  _min?: Prisma.StudentMinOrderByAggregateInput;
};

export type StudentScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.StudentScalarWhereWithAggregatesInput
    | Prisma.StudentScalarWhereWithAggregatesInput[];
  OR?: Prisma.StudentScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.StudentScalarWhereWithAggregatesInput
    | Prisma.StudentScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"Student"> | string;
  registrationNumber?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  isActive?: Prisma.BoolWithAggregatesFilter<"Student"> | boolean;
  firstName?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  lastName?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  dateOfBirth?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Student">
    | Date
    | string
    | null;
  bloodType?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  placeOfBirth?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  photos?: Prisma.StringNullableListFilter<"Student">;
  residence?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  status?:
    | Prisma.EnumStudentStatusWithAggregatesFilter<"Student">
    | $Enums.StudentStatus;
  gender?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null;
  religionId?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  isBaptized?: Prisma.BoolWithAggregatesFilter<"Student"> | boolean;
  isRepeating?: Prisma.BoolWithAggregatesFilter<"Student"> | boolean;
  isNew?: Prisma.BoolWithAggregatesFilter<"Student"> | boolean;
  phoneNumber?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  parentDivorced?: Prisma.BoolWithAggregatesFilter<"Student"> | boolean;
  dateOfEntry?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Student">
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Student">
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Student">
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeWithAggregatesFilter<"Student"> | Date | string;
  observation?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  externalAccountingNo?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  allergies?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  countryId?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  userId?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null;
  tags?: Prisma.JsonNullableWithAggregatesFilter<"Student">;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Student"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Student"> | Date | string;
  createdById?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  formerSchoolId?:
    | Prisma.StringNullableWithAggregatesFilter<"Student">
    | string
    | null;
  achievements?: Prisma.StringNullableListFilter<"Student">;
  hobbies?: Prisma.StringNullableListFilter<"Student">;
  socialMedias?: Prisma.StringNullableListFilter<"Student">;
  schoolId?: Prisma.StringWithAggregatesFilter<"Student"> | string;
};

export type StudentCreateInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateManyInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
};

export type StudentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
};

export type StudentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StudentScalarRelationFilter = {
  is?: Prisma.StudentWhereInput;
  isNot?: Prisma.StudentWhereInput;
};

export type StudentNullableScalarRelationFilter = {
  is?: Prisma.StudentWhereInput | null;
  isNot?: Prisma.StudentWhereInput | null;
};

export type StudentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  registrationNumber?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrder;
  bloodType?: Prisma.SortOrder;
  placeOfBirth?: Prisma.SortOrder;
  photos?: Prisma.SortOrder;
  residence?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  religionId?: Prisma.SortOrder;
  isBaptized?: Prisma.SortOrder;
  isRepeating?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrder;
  parentDivorced?: Prisma.SortOrder;
  dateOfEntry?: Prisma.SortOrder;
  dateOfExit?: Prisma.SortOrder;
  dateOfWithdraw?: Prisma.SortOrder;
  lastAccessed?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  externalAccountingNo?: Prisma.SortOrder;
  allergies?: Prisma.SortOrder;
  countryId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  tags?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  formerSchoolId?: Prisma.SortOrder;
  achievements?: Prisma.SortOrder;
  hobbies?: Prisma.SortOrder;
  socialMedias?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type StudentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  registrationNumber?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrder;
  bloodType?: Prisma.SortOrder;
  placeOfBirth?: Prisma.SortOrder;
  residence?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  religionId?: Prisma.SortOrder;
  isBaptized?: Prisma.SortOrder;
  isRepeating?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrder;
  parentDivorced?: Prisma.SortOrder;
  dateOfEntry?: Prisma.SortOrder;
  dateOfExit?: Prisma.SortOrder;
  dateOfWithdraw?: Prisma.SortOrder;
  lastAccessed?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  externalAccountingNo?: Prisma.SortOrder;
  allergies?: Prisma.SortOrder;
  countryId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  formerSchoolId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type StudentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  registrationNumber?: Prisma.SortOrder;
  isActive?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  dateOfBirth?: Prisma.SortOrder;
  bloodType?: Prisma.SortOrder;
  placeOfBirth?: Prisma.SortOrder;
  residence?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  gender?: Prisma.SortOrder;
  religionId?: Prisma.SortOrder;
  isBaptized?: Prisma.SortOrder;
  isRepeating?: Prisma.SortOrder;
  isNew?: Prisma.SortOrder;
  phoneNumber?: Prisma.SortOrder;
  parentDivorced?: Prisma.SortOrder;
  dateOfEntry?: Prisma.SortOrder;
  dateOfExit?: Prisma.SortOrder;
  dateOfWithdraw?: Prisma.SortOrder;
  lastAccessed?: Prisma.SortOrder;
  observation?: Prisma.SortOrder;
  externalAccountingNo?: Prisma.SortOrder;
  allergies?: Prisma.SortOrder;
  countryId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  formerSchoolId?: Prisma.SortOrder;
  schoolId?: Prisma.SortOrder;
};

export type StudentListRelationFilter = {
  every?: Prisma.StudentWhereInput;
  some?: Prisma.StudentWhereInput;
  none?: Prisma.StudentWhereInput;
};

export type StudentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type StudentCreateNestedOneWithoutAbsencesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutAbsencesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutAbsencesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutAbsencesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutAbsencesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutAbsencesInput;
  upsert?: Prisma.StudentUpsertWithoutAbsencesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutAbsencesInput,
      Prisma.StudentUpdateWithoutAbsencesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutAbsencesInput
  >;
};

export type StudentCreateNestedOneWithoutLatenessesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutLatenessesInput,
    Prisma.StudentUncheckedCreateWithoutLatenessesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutLatenessesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutLatenessesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutLatenessesInput,
    Prisma.StudentUncheckedCreateWithoutLatenessesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutLatenessesInput;
  upsert?: Prisma.StudentUpsertWithoutLatenessesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutLatenessesInput,
      Prisma.StudentUpdateWithoutLatenessesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutLatenessesInput
  >;
};

export type StudentCreateNestedOneWithoutChattersInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutChattersInput,
    Prisma.StudentUncheckedCreateWithoutChattersInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutChattersInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutChattersNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutChattersInput,
    Prisma.StudentUncheckedCreateWithoutChattersInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutChattersInput;
  upsert?: Prisma.StudentUpsertWithoutChattersInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutChattersInput,
      Prisma.StudentUpdateWithoutChattersInput
    >,
    Prisma.StudentUncheckedUpdateWithoutChattersInput
  >;
};

export type StudentCreateNestedOneWithoutConsignesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutConsignesInput,
    Prisma.StudentUncheckedCreateWithoutConsignesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutConsignesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutConsignesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutConsignesInput,
    Prisma.StudentUncheckedCreateWithoutConsignesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutConsignesInput;
  upsert?: Prisma.StudentUpsertWithoutConsignesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutConsignesInput,
      Prisma.StudentUpdateWithoutConsignesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutConsignesInput
  >;
};

export type StudentCreateNestedOneWithoutExclusionsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutExclusionsInput,
    Prisma.StudentUncheckedCreateWithoutExclusionsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutExclusionsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutExclusionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutExclusionsInput,
    Prisma.StudentUncheckedCreateWithoutExclusionsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutExclusionsInput;
  upsert?: Prisma.StudentUpsertWithoutExclusionsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutExclusionsInput,
      Prisma.StudentUpdateWithoutExclusionsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutExclusionsInput
  >;
};

export type StudentCreateNestedOneWithoutPreventedAbsencesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutPreventedAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutPreventedAbsencesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutPreventedAbsencesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutPreventedAbsencesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutPreventedAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutPreventedAbsencesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutPreventedAbsencesInput;
  upsert?: Prisma.StudentUpsertWithoutPreventedAbsencesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutPreventedAbsencesInput,
      Prisma.StudentUpdateWithoutPreventedAbsencesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutPreventedAbsencesInput
  >;
};

export type StudentCreateNestedOneWithoutConvocationsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutConvocationsInput,
    Prisma.StudentUncheckedCreateWithoutConvocationsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutConvocationsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutConvocationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutConvocationsInput,
    Prisma.StudentUncheckedCreateWithoutConvocationsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutConvocationsInput;
  upsert?: Prisma.StudentUpsertWithoutConvocationsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutConvocationsInput,
      Prisma.StudentUpdateWithoutConvocationsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutConvocationsInput
  >;
};

export type StudentCreateNestedOneWithoutPeriodicAttendancesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutPeriodicAttendancesInput,
    Prisma.StudentUncheckedCreateWithoutPeriodicAttendancesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutPeriodicAttendancesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutPeriodicAttendancesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutPeriodicAttendancesInput,
    Prisma.StudentUncheckedCreateWithoutPeriodicAttendancesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutPeriodicAttendancesInput;
  upsert?: Prisma.StudentUpsertWithoutPeriodicAttendancesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutPeriodicAttendancesInput,
      Prisma.StudentUpdateWithoutPeriodicAttendancesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutPeriodicAttendancesInput
  >;
};

export type StudentCreateNestedOneWithoutReportCardsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutReportCardsInput,
    Prisma.StudentUncheckedCreateWithoutReportCardsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutReportCardsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutReportCardsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutReportCardsInput,
    Prisma.StudentUncheckedCreateWithoutReportCardsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutReportCardsInput;
  upsert?: Prisma.StudentUpsertWithoutReportCardsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutReportCardsInput,
      Prisma.StudentUpdateWithoutReportCardsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutReportCardsInput
  >;
};

export type StudentCreateNestedOneWithoutClassroomsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutClassroomsInput,
    Prisma.StudentUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClassroomsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneWithoutClassroomsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutClassroomsInput,
    Prisma.StudentUncheckedCreateWithoutClassroomsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClassroomsInput;
  upsert?: Prisma.StudentUpsertWithoutClassroomsInput;
  disconnect?: Prisma.StudentWhereInput | boolean;
  delete?: Prisma.StudentWhereInput | boolean;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutClassroomsInput,
      Prisma.StudentUpdateWithoutClassroomsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutClassroomsInput
  >;
};

export type StudentCreateNestedOneWithoutEnrollmentsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutEnrollmentsInput,
    Prisma.StudentUncheckedCreateWithoutEnrollmentsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutEnrollmentsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutEnrollmentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutEnrollmentsInput,
    Prisma.StudentUncheckedCreateWithoutEnrollmentsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutEnrollmentsInput;
  upsert?: Prisma.StudentUpsertWithoutEnrollmentsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutEnrollmentsInput,
      Prisma.StudentUpdateWithoutEnrollmentsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutEnrollmentsInput
  >;
};

export type StudentCreateNestedOneWithoutGradesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutGradesInput,
    Prisma.StudentUncheckedCreateWithoutGradesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutGradesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutGradesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutGradesInput,
    Prisma.StudentUncheckedCreateWithoutGradesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutGradesInput;
  upsert?: Prisma.StudentUpsertWithoutGradesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutGradesInput,
      Prisma.StudentUpdateWithoutGradesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutGradesInput
  >;
};

export type StudentCreatephotosInput = {
  set: string[];
};

export type StudentCreateachievementsInput = {
  set: string[];
};

export type StudentCreatehobbiesInput = {
  set: string[];
};

export type StudentCreatesocialMediasInput = {
  set: string[];
};

export type StudentUpdatephotosInput = {
  set?: string[];
  push?: string | string[];
};

export type EnumStudentStatusFieldUpdateOperationsInput = {
  set?: $Enums.StudentStatus;
};

export type StudentUpdateachievementsInput = {
  set?: string[];
  push?: string | string[];
};

export type StudentUpdatehobbiesInput = {
  set?: string[];
  push?: string | string[];
};

export type StudentUpdatesocialMediasInput = {
  set?: string[];
  push?: string | string[];
};

export type StudentCreateNestedOneWithoutSiblingsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblingsInput,
    Prisma.StudentUncheckedCreateWithoutSiblingsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSiblingsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentCreateNestedOneWithoutSiblings2Input = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblings2Input,
    Prisma.StudentUncheckedCreateWithoutSiblings2Input
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSiblings2Input;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutSiblingsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblingsInput,
    Prisma.StudentUncheckedCreateWithoutSiblingsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSiblingsInput;
  upsert?: Prisma.StudentUpsertWithoutSiblingsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutSiblingsInput,
      Prisma.StudentUpdateWithoutSiblingsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutSiblingsInput
  >;
};

export type StudentUpdateOneRequiredWithoutSiblings2NestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblings2Input,
    Prisma.StudentUncheckedCreateWithoutSiblings2Input
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSiblings2Input;
  upsert?: Prisma.StudentUpsertWithoutSiblings2Input;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutSiblings2Input,
      Prisma.StudentUpdateWithoutSiblings2Input
    >,
    Prisma.StudentUncheckedUpdateWithoutSiblings2Input
  >;
};

export type StudentCreateNestedOneWithoutRequiredFeesInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutRequiredFeesInput,
    Prisma.StudentUncheckedCreateWithoutRequiredFeesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutRequiredFeesInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutRequiredFeesNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutRequiredFeesInput,
    Prisma.StudentUncheckedCreateWithoutRequiredFeesInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutRequiredFeesInput;
  upsert?: Prisma.StudentUpsertWithoutRequiredFeesInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutRequiredFeesInput,
      Prisma.StudentUpdateWithoutRequiredFeesInput
    >,
    Prisma.StudentUncheckedUpdateWithoutRequiredFeesInput
  >;
};

export type StudentCreateNestedOneWithoutStudentContactsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutStudentContactsInput,
    Prisma.StudentUncheckedCreateWithoutStudentContactsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutStudentContactsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutStudentContactsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutStudentContactsInput,
    Prisma.StudentUncheckedCreateWithoutStudentContactsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutStudentContactsInput;
  upsert?: Prisma.StudentUpsertWithoutStudentContactsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutStudentContactsInput,
      Prisma.StudentUpdateWithoutStudentContactsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutStudentContactsInput
  >;
};

export type StudentCreateNestedManyWithoutCountryInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutCountryInput,
        Prisma.StudentUncheckedCreateWithoutCountryInput
      >
    | Prisma.StudentCreateWithoutCountryInput[]
    | Prisma.StudentUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutCountryInput
    | Prisma.StudentCreateOrConnectWithoutCountryInput[];
  createMany?: Prisma.StudentCreateManyCountryInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUncheckedCreateNestedManyWithoutCountryInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutCountryInput,
        Prisma.StudentUncheckedCreateWithoutCountryInput
      >
    | Prisma.StudentCreateWithoutCountryInput[]
    | Prisma.StudentUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutCountryInput
    | Prisma.StudentCreateOrConnectWithoutCountryInput[];
  createMany?: Prisma.StudentCreateManyCountryInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUpdateManyWithoutCountryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutCountryInput,
        Prisma.StudentUncheckedCreateWithoutCountryInput
      >
    | Prisma.StudentCreateWithoutCountryInput[]
    | Prisma.StudentUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutCountryInput
    | Prisma.StudentCreateOrConnectWithoutCountryInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutCountryInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutCountryInput[];
  createMany?: Prisma.StudentCreateManyCountryInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutCountryInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutCountryInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutCountryInput
    | Prisma.StudentUpdateManyWithWhereWithoutCountryInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentUncheckedUpdateManyWithoutCountryNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutCountryInput,
        Prisma.StudentUncheckedCreateWithoutCountryInput
      >
    | Prisma.StudentCreateWithoutCountryInput[]
    | Prisma.StudentUncheckedCreateWithoutCountryInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutCountryInput
    | Prisma.StudentCreateOrConnectWithoutCountryInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutCountryInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutCountryInput[];
  createMany?: Prisma.StudentCreateManyCountryInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutCountryInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutCountryInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutCountryInput
    | Prisma.StudentUpdateManyWithWhereWithoutCountryInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutSchoolInput,
        Prisma.StudentUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StudentCreateWithoutSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutSchoolInput
    | Prisma.StudentCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUncheckedCreateNestedManyWithoutSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutSchoolInput,
        Prisma.StudentUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StudentCreateWithoutSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutSchoolInput
    | Prisma.StudentCreateOrConnectWithoutSchoolInput[];
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutSchoolInput,
        Prisma.StudentUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StudentCreateWithoutSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutSchoolInput
    | Prisma.StudentCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutSchoolInput
    | Prisma.StudentUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutSchoolInput,
        Prisma.StudentUncheckedCreateWithoutSchoolInput
      >
    | Prisma.StudentCreateWithoutSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutSchoolInput
    | Prisma.StudentCreateOrConnectWithoutSchoolInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput[];
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutSchoolInput
    | Prisma.StudentUpdateManyWithWhereWithoutSchoolInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentCreateNestedManyWithoutFormerSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutFormerSchoolInput,
        Prisma.StudentUncheckedCreateWithoutFormerSchoolInput
      >
    | Prisma.StudentCreateWithoutFormerSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutFormerSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput[];
  createMany?: Prisma.StudentCreateManyFormerSchoolInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUncheckedCreateNestedManyWithoutFormerSchoolInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutFormerSchoolInput,
        Prisma.StudentUncheckedCreateWithoutFormerSchoolInput
      >
    | Prisma.StudentCreateWithoutFormerSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutFormerSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput[];
  createMany?: Prisma.StudentCreateManyFormerSchoolInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUpdateManyWithoutFormerSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutFormerSchoolInput,
        Prisma.StudentUncheckedCreateWithoutFormerSchoolInput
      >
    | Prisma.StudentCreateWithoutFormerSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutFormerSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutFormerSchoolInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutFormerSchoolInput[];
  createMany?: Prisma.StudentCreateManyFormerSchoolInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutFormerSchoolInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutFormerSchoolInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutFormerSchoolInput
    | Prisma.StudentUpdateManyWithWhereWithoutFormerSchoolInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentUncheckedUpdateManyWithoutFormerSchoolNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutFormerSchoolInput,
        Prisma.StudentUncheckedCreateWithoutFormerSchoolInput
      >
    | Prisma.StudentCreateWithoutFormerSchoolInput[]
    | Prisma.StudentUncheckedCreateWithoutFormerSchoolInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput
    | Prisma.StudentCreateOrConnectWithoutFormerSchoolInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutFormerSchoolInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutFormerSchoolInput[];
  createMany?: Prisma.StudentCreateManyFormerSchoolInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutFormerSchoolInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutFormerSchoolInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutFormerSchoolInput
    | Prisma.StudentUpdateManyWithWhereWithoutFormerSchoolInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentCreateNestedManyWithoutReligionInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutReligionInput,
        Prisma.StudentUncheckedCreateWithoutReligionInput
      >
    | Prisma.StudentCreateWithoutReligionInput[]
    | Prisma.StudentUncheckedCreateWithoutReligionInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutReligionInput
    | Prisma.StudentCreateOrConnectWithoutReligionInput[];
  createMany?: Prisma.StudentCreateManyReligionInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUncheckedCreateNestedManyWithoutReligionInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutReligionInput,
        Prisma.StudentUncheckedCreateWithoutReligionInput
      >
    | Prisma.StudentCreateWithoutReligionInput[]
    | Prisma.StudentUncheckedCreateWithoutReligionInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutReligionInput
    | Prisma.StudentCreateOrConnectWithoutReligionInput[];
  createMany?: Prisma.StudentCreateManyReligionInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUpdateManyWithoutReligionNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutReligionInput,
        Prisma.StudentUncheckedCreateWithoutReligionInput
      >
    | Prisma.StudentCreateWithoutReligionInput[]
    | Prisma.StudentUncheckedCreateWithoutReligionInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutReligionInput
    | Prisma.StudentCreateOrConnectWithoutReligionInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutReligionInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutReligionInput[];
  createMany?: Prisma.StudentCreateManyReligionInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutReligionInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutReligionInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutReligionInput
    | Prisma.StudentUpdateManyWithWhereWithoutReligionInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentUncheckedUpdateManyWithoutReligionNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutReligionInput,
        Prisma.StudentUncheckedCreateWithoutReligionInput
      >
    | Prisma.StudentCreateWithoutReligionInput[]
    | Prisma.StudentUncheckedCreateWithoutReligionInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutReligionInput
    | Prisma.StudentCreateOrConnectWithoutReligionInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutReligionInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutReligionInput[];
  createMany?: Prisma.StudentCreateManyReligionInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutReligionInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutReligionInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutReligionInput
    | Prisma.StudentUpdateManyWithWhereWithoutReligionInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentCreateNestedOneWithoutClubsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutClubsInput,
    Prisma.StudentUncheckedCreateWithoutClubsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClubsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutClubsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutClubsInput,
    Prisma.StudentUncheckedCreateWithoutClubsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClubsInput;
  upsert?: Prisma.StudentUpsertWithoutClubsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutClubsInput,
      Prisma.StudentUpdateWithoutClubsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutClubsInput
  >;
};

export type StudentCreateNestedOneWithoutSportsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutSportsInput,
    Prisma.StudentUncheckedCreateWithoutSportsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSportsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutSportsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutSportsInput,
    Prisma.StudentUncheckedCreateWithoutSportsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSportsInput;
  upsert?: Prisma.StudentUpsertWithoutSportsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutSportsInput,
      Prisma.StudentUpdateWithoutSportsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutSportsInput
  >;
};

export type StudentCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutTransactionsInput,
    Prisma.StudentUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutTransactionsInput;
  connect?: Prisma.StudentWhereUniqueInput;
};

export type StudentUpdateOneRequiredWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.StudentCreateWithoutTransactionsInput,
    Prisma.StudentUncheckedCreateWithoutTransactionsInput
  >;
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutTransactionsInput;
  upsert?: Prisma.StudentUpsertWithoutTransactionsInput;
  connect?: Prisma.StudentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.StudentUpdateToOneWithWhereWithoutTransactionsInput,
      Prisma.StudentUpdateWithoutTransactionsInput
    >,
    Prisma.StudentUncheckedUpdateWithoutTransactionsInput
  >;
};

export type StudentCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutUserInput,
        Prisma.StudentUncheckedCreateWithoutUserInput
      >
    | Prisma.StudentCreateWithoutUserInput[]
    | Prisma.StudentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutUserInput
    | Prisma.StudentCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.StudentCreateManyUserInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutUserInput,
        Prisma.StudentUncheckedCreateWithoutUserInput
      >
    | Prisma.StudentCreateWithoutUserInput[]
    | Prisma.StudentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutUserInput
    | Prisma.StudentCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.StudentCreateManyUserInputEnvelope;
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
};

export type StudentUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutUserInput,
        Prisma.StudentUncheckedCreateWithoutUserInput
      >
    | Prisma.StudentCreateWithoutUserInput[]
    | Prisma.StudentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutUserInput
    | Prisma.StudentCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutUserInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.StudentCreateManyUserInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutUserInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutUserInput
    | Prisma.StudentUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.StudentCreateWithoutUserInput,
        Prisma.StudentUncheckedCreateWithoutUserInput
      >
    | Prisma.StudentCreateWithoutUserInput[]
    | Prisma.StudentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.StudentCreateOrConnectWithoutUserInput
    | Prisma.StudentCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.StudentUpsertWithWhereUniqueWithoutUserInput
    | Prisma.StudentUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.StudentCreateManyUserInputEnvelope;
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  disconnect?:
    | Prisma.StudentWhereUniqueInput
    | Prisma.StudentWhereUniqueInput[];
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[];
  update?:
    | Prisma.StudentUpdateWithWhereUniqueWithoutUserInput
    | Prisma.StudentUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.StudentUpdateManyWithWhereWithoutUserInput
    | Prisma.StudentUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.StudentScalarWhereInput
    | Prisma.StudentScalarWhereInput[];
};

export type StudentCreateWithoutAbsencesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutAbsencesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutAbsencesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutAbsencesInput
  >;
};

export type StudentUpsertWithoutAbsencesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutAbsencesInput,
    Prisma.StudentUncheckedUpdateWithoutAbsencesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutAbsencesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutAbsencesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutAbsencesInput,
    Prisma.StudentUncheckedUpdateWithoutAbsencesInput
  >;
};

export type StudentUpdateWithoutAbsencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutAbsencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutLatenessesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutLatenessesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutLatenessesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutLatenessesInput,
    Prisma.StudentUncheckedCreateWithoutLatenessesInput
  >;
};

export type StudentUpsertWithoutLatenessesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutLatenessesInput,
    Prisma.StudentUncheckedUpdateWithoutLatenessesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutLatenessesInput,
    Prisma.StudentUncheckedCreateWithoutLatenessesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutLatenessesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutLatenessesInput,
    Prisma.StudentUncheckedUpdateWithoutLatenessesInput
  >;
};

export type StudentUpdateWithoutLatenessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutLatenessesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutChattersInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutChattersInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutChattersInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutChattersInput,
    Prisma.StudentUncheckedCreateWithoutChattersInput
  >;
};

export type StudentUpsertWithoutChattersInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutChattersInput,
    Prisma.StudentUncheckedUpdateWithoutChattersInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutChattersInput,
    Prisma.StudentUncheckedCreateWithoutChattersInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutChattersInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutChattersInput,
    Prisma.StudentUncheckedUpdateWithoutChattersInput
  >;
};

export type StudentUpdateWithoutChattersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutChattersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutConsignesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutConsignesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutConsignesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutConsignesInput,
    Prisma.StudentUncheckedCreateWithoutConsignesInput
  >;
};

export type StudentUpsertWithoutConsignesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutConsignesInput,
    Prisma.StudentUncheckedUpdateWithoutConsignesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutConsignesInput,
    Prisma.StudentUncheckedCreateWithoutConsignesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutConsignesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutConsignesInput,
    Prisma.StudentUncheckedUpdateWithoutConsignesInput
  >;
};

export type StudentUpdateWithoutConsignesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutConsignesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutExclusionsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutExclusionsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutExclusionsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutExclusionsInput,
    Prisma.StudentUncheckedCreateWithoutExclusionsInput
  >;
};

export type StudentUpsertWithoutExclusionsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutExclusionsInput,
    Prisma.StudentUncheckedUpdateWithoutExclusionsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutExclusionsInput,
    Prisma.StudentUncheckedCreateWithoutExclusionsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutExclusionsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutExclusionsInput,
    Prisma.StudentUncheckedUpdateWithoutExclusionsInput
  >;
};

export type StudentUpdateWithoutExclusionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutExclusionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutPreventedAbsencesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutPreventedAbsencesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutPreventedAbsencesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutPreventedAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutPreventedAbsencesInput
  >;
};

export type StudentUpsertWithoutPreventedAbsencesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutPreventedAbsencesInput,
    Prisma.StudentUncheckedUpdateWithoutPreventedAbsencesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutPreventedAbsencesInput,
    Prisma.StudentUncheckedCreateWithoutPreventedAbsencesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutPreventedAbsencesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutPreventedAbsencesInput,
    Prisma.StudentUncheckedUpdateWithoutPreventedAbsencesInput
  >;
};

export type StudentUpdateWithoutPreventedAbsencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutPreventedAbsencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutConvocationsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutConvocationsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutConvocationsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutConvocationsInput,
    Prisma.StudentUncheckedCreateWithoutConvocationsInput
  >;
};

export type StudentUpsertWithoutConvocationsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutConvocationsInput,
    Prisma.StudentUncheckedUpdateWithoutConvocationsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutConvocationsInput,
    Prisma.StudentUncheckedCreateWithoutConvocationsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutConvocationsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutConvocationsInput,
    Prisma.StudentUncheckedUpdateWithoutConvocationsInput
  >;
};

export type StudentUpdateWithoutConvocationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutConvocationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutPeriodicAttendancesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutPeriodicAttendancesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutPeriodicAttendancesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutPeriodicAttendancesInput,
    Prisma.StudentUncheckedCreateWithoutPeriodicAttendancesInput
  >;
};

export type StudentUpsertWithoutPeriodicAttendancesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutPeriodicAttendancesInput,
    Prisma.StudentUncheckedUpdateWithoutPeriodicAttendancesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutPeriodicAttendancesInput,
    Prisma.StudentUncheckedCreateWithoutPeriodicAttendancesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutPeriodicAttendancesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutPeriodicAttendancesInput,
    Prisma.StudentUncheckedUpdateWithoutPeriodicAttendancesInput
  >;
};

export type StudentUpdateWithoutPeriodicAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutPeriodicAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutReportCardsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutReportCardsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutReportCardsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutReportCardsInput,
    Prisma.StudentUncheckedCreateWithoutReportCardsInput
  >;
};

export type StudentUpsertWithoutReportCardsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutReportCardsInput,
    Prisma.StudentUncheckedUpdateWithoutReportCardsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutReportCardsInput,
    Prisma.StudentUncheckedCreateWithoutReportCardsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutReportCardsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutReportCardsInput,
    Prisma.StudentUncheckedUpdateWithoutReportCardsInput
  >;
};

export type StudentUpdateWithoutReportCardsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutReportCardsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutClassroomsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutClassroomsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutClassroomsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutClassroomsInput,
    Prisma.StudentUncheckedCreateWithoutClassroomsInput
  >;
};

export type StudentUpsertWithoutClassroomsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutClassroomsInput,
    Prisma.StudentUncheckedUpdateWithoutClassroomsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutClassroomsInput,
    Prisma.StudentUncheckedCreateWithoutClassroomsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutClassroomsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutClassroomsInput,
    Prisma.StudentUncheckedUpdateWithoutClassroomsInput
  >;
};

export type StudentUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutClassroomsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutEnrollmentsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutEnrollmentsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutEnrollmentsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutEnrollmentsInput,
    Prisma.StudentUncheckedCreateWithoutEnrollmentsInput
  >;
};

export type StudentUpsertWithoutEnrollmentsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutEnrollmentsInput,
    Prisma.StudentUncheckedUpdateWithoutEnrollmentsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutEnrollmentsInput,
    Prisma.StudentUncheckedCreateWithoutEnrollmentsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutEnrollmentsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutEnrollmentsInput,
    Prisma.StudentUncheckedUpdateWithoutEnrollmentsInput
  >;
};

export type StudentUpdateWithoutEnrollmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutEnrollmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutGradesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutGradesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutGradesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutGradesInput,
    Prisma.StudentUncheckedCreateWithoutGradesInput
  >;
};

export type StudentUpsertWithoutGradesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutGradesInput,
    Prisma.StudentUncheckedUpdateWithoutGradesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutGradesInput,
    Prisma.StudentUncheckedCreateWithoutGradesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutGradesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutGradesInput,
    Prisma.StudentUncheckedUpdateWithoutGradesInput
  >;
};

export type StudentUpdateWithoutGradesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutGradesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutSiblingsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutSiblingsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutSiblingsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblingsInput,
    Prisma.StudentUncheckedCreateWithoutSiblingsInput
  >;
};

export type StudentCreateWithoutSiblings2Input = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutSiblings2Input = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutSiblings2Input = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblings2Input,
    Prisma.StudentUncheckedCreateWithoutSiblings2Input
  >;
};

export type StudentUpsertWithoutSiblingsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutSiblingsInput,
    Prisma.StudentUncheckedUpdateWithoutSiblingsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblingsInput,
    Prisma.StudentUncheckedCreateWithoutSiblingsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutSiblingsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutSiblingsInput,
    Prisma.StudentUncheckedUpdateWithoutSiblingsInput
  >;
};

export type StudentUpdateWithoutSiblingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutSiblingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentUpsertWithoutSiblings2Input = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutSiblings2Input,
    Prisma.StudentUncheckedUpdateWithoutSiblings2Input
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSiblings2Input,
    Prisma.StudentUncheckedCreateWithoutSiblings2Input
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutSiblings2Input = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutSiblings2Input,
    Prisma.StudentUncheckedUpdateWithoutSiblings2Input
  >;
};

export type StudentUpdateWithoutSiblings2Input = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutSiblings2Input = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutRequiredFeesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutRequiredFeesInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutRequiredFeesInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutRequiredFeesInput,
    Prisma.StudentUncheckedCreateWithoutRequiredFeesInput
  >;
};

export type StudentUpsertWithoutRequiredFeesInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutRequiredFeesInput,
    Prisma.StudentUncheckedUpdateWithoutRequiredFeesInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutRequiredFeesInput,
    Prisma.StudentUncheckedCreateWithoutRequiredFeesInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutRequiredFeesInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutRequiredFeesInput,
    Prisma.StudentUncheckedUpdateWithoutRequiredFeesInput
  >;
};

export type StudentUpdateWithoutRequiredFeesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutRequiredFeesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutStudentContactsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutStudentContactsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutStudentContactsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutStudentContactsInput,
    Prisma.StudentUncheckedCreateWithoutStudentContactsInput
  >;
};

export type StudentUpsertWithoutStudentContactsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutStudentContactsInput,
    Prisma.StudentUncheckedUpdateWithoutStudentContactsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutStudentContactsInput,
    Prisma.StudentUncheckedCreateWithoutStudentContactsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutStudentContactsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutStudentContactsInput,
    Prisma.StudentUncheckedUpdateWithoutStudentContactsInput
  >;
};

export type StudentUpdateWithoutStudentContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutStudentContactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutCountryInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutCountryInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutCountryInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutCountryInput,
    Prisma.StudentUncheckedCreateWithoutCountryInput
  >;
};

export type StudentCreateManyCountryInputEnvelope = {
  data:
    | Prisma.StudentCreateManyCountryInput
    | Prisma.StudentCreateManyCountryInput[];
  skipDuplicates?: boolean;
};

export type StudentUpsertWithWhereUniqueWithoutCountryInput = {
  where: Prisma.StudentWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutCountryInput,
    Prisma.StudentUncheckedUpdateWithoutCountryInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutCountryInput,
    Prisma.StudentUncheckedCreateWithoutCountryInput
  >;
};

export type StudentUpdateWithWhereUniqueWithoutCountryInput = {
  where: Prisma.StudentWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutCountryInput,
    Prisma.StudentUncheckedUpdateWithoutCountryInput
  >;
};

export type StudentUpdateManyWithWhereWithoutCountryInput = {
  where: Prisma.StudentScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyWithoutCountryInput
  >;
};

export type StudentScalarWhereInput = {
  AND?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[];
  OR?: Prisma.StudentScalarWhereInput[];
  NOT?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[];
  id?: Prisma.StringFilter<"Student"> | string;
  registrationNumber?: Prisma.StringNullableFilter<"Student"> | string | null;
  isActive?: Prisma.BoolFilter<"Student"> | boolean;
  firstName?: Prisma.StringNullableFilter<"Student"> | string | null;
  lastName?: Prisma.StringNullableFilter<"Student"> | string | null;
  dateOfBirth?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null;
  bloodType?: Prisma.StringNullableFilter<"Student"> | string | null;
  placeOfBirth?: Prisma.StringNullableFilter<"Student"> | string | null;
  photos?: Prisma.StringNullableListFilter<"Student">;
  residence?: Prisma.StringNullableFilter<"Student"> | string | null;
  status?: Prisma.EnumStudentStatusFilter<"Student"> | $Enums.StudentStatus;
  gender?: Prisma.StringNullableFilter<"Student"> | string | null;
  religionId?: Prisma.StringNullableFilter<"Student"> | string | null;
  isBaptized?: Prisma.BoolFilter<"Student"> | boolean;
  isRepeating?: Prisma.BoolFilter<"Student"> | boolean;
  isNew?: Prisma.BoolFilter<"Student"> | boolean;
  phoneNumber?: Prisma.StringNullableFilter<"Student"> | string | null;
  parentDivorced?: Prisma.BoolFilter<"Student"> | boolean;
  dateOfEntry?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null;
  dateOfExit?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null;
  dateOfWithdraw?:
    | Prisma.DateTimeNullableFilter<"Student">
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFilter<"Student"> | Date | string;
  observation?: Prisma.StringNullableFilter<"Student"> | string | null;
  externalAccountingNo?: Prisma.StringNullableFilter<"Student"> | string | null;
  allergies?: Prisma.StringNullableFilter<"Student"> | string | null;
  countryId?: Prisma.StringNullableFilter<"Student"> | string | null;
  userId?: Prisma.StringNullableFilter<"Student"> | string | null;
  tags?: Prisma.JsonNullableFilter<"Student">;
  createdAt?: Prisma.DateTimeFilter<"Student"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Student"> | Date | string;
  createdById?: Prisma.StringNullableFilter<"Student"> | string | null;
  formerSchoolId?: Prisma.StringNullableFilter<"Student"> | string | null;
  achievements?: Prisma.StringNullableListFilter<"Student">;
  hobbies?: Prisma.StringNullableListFilter<"Student">;
  socialMedias?: Prisma.StringNullableListFilter<"Student">;
  schoolId?: Prisma.StringFilter<"Student"> | string;
};

export type StudentCreateWithoutSchoolInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutSchoolInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutSchoolInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSchoolInput,
    Prisma.StudentUncheckedCreateWithoutSchoolInput
  >;
};

export type StudentCreateManySchoolInputEnvelope = {
  data:
    | Prisma.StudentCreateManySchoolInput
    | Prisma.StudentCreateManySchoolInput[];
  skipDuplicates?: boolean;
};

export type StudentUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutSchoolInput,
    Prisma.StudentUncheckedUpdateWithoutSchoolInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSchoolInput,
    Prisma.StudentUncheckedCreateWithoutSchoolInput
  >;
};

export type StudentUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutSchoolInput,
    Prisma.StudentUncheckedUpdateWithoutSchoolInput
  >;
};

export type StudentUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.StudentScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyWithoutSchoolInput
  >;
};

export type StudentCreateWithoutFormerSchoolInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutFormerSchoolInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutFormerSchoolInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutFormerSchoolInput,
    Prisma.StudentUncheckedCreateWithoutFormerSchoolInput
  >;
};

export type StudentCreateManyFormerSchoolInputEnvelope = {
  data:
    | Prisma.StudentCreateManyFormerSchoolInput
    | Prisma.StudentCreateManyFormerSchoolInput[];
  skipDuplicates?: boolean;
};

export type StudentUpsertWithWhereUniqueWithoutFormerSchoolInput = {
  where: Prisma.StudentWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutFormerSchoolInput,
    Prisma.StudentUncheckedUpdateWithoutFormerSchoolInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutFormerSchoolInput,
    Prisma.StudentUncheckedCreateWithoutFormerSchoolInput
  >;
};

export type StudentUpdateWithWhereUniqueWithoutFormerSchoolInput = {
  where: Prisma.StudentWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutFormerSchoolInput,
    Prisma.StudentUncheckedUpdateWithoutFormerSchoolInput
  >;
};

export type StudentUpdateManyWithWhereWithoutFormerSchoolInput = {
  where: Prisma.StudentScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyWithoutFormerSchoolInput
  >;
};

export type StudentCreateWithoutReligionInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutReligionInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutReligionInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutReligionInput,
    Prisma.StudentUncheckedCreateWithoutReligionInput
  >;
};

export type StudentCreateManyReligionInputEnvelope = {
  data:
    | Prisma.StudentCreateManyReligionInput
    | Prisma.StudentCreateManyReligionInput[];
  skipDuplicates?: boolean;
};

export type StudentUpsertWithWhereUniqueWithoutReligionInput = {
  where: Prisma.StudentWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutReligionInput,
    Prisma.StudentUncheckedUpdateWithoutReligionInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutReligionInput,
    Prisma.StudentUncheckedCreateWithoutReligionInput
  >;
};

export type StudentUpdateWithWhereUniqueWithoutReligionInput = {
  where: Prisma.StudentWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutReligionInput,
    Prisma.StudentUncheckedUpdateWithoutReligionInput
  >;
};

export type StudentUpdateManyWithWhereWithoutReligionInput = {
  where: Prisma.StudentScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyWithoutReligionInput
  >;
};

export type StudentCreateWithoutClubsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutClubsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutClubsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutClubsInput,
    Prisma.StudentUncheckedCreateWithoutClubsInput
  >;
};

export type StudentUpsertWithoutClubsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutClubsInput,
    Prisma.StudentUncheckedUpdateWithoutClubsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutClubsInput,
    Prisma.StudentUncheckedCreateWithoutClubsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutClubsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutClubsInput,
    Prisma.StudentUncheckedUpdateWithoutClubsInput
  >;
};

export type StudentUpdateWithoutClubsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutClubsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutSportsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutSportsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutSportsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSportsInput,
    Prisma.StudentUncheckedCreateWithoutSportsInput
  >;
};

export type StudentUpsertWithoutSportsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutSportsInput,
    Prisma.StudentUncheckedUpdateWithoutSportsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutSportsInput,
    Prisma.StudentUncheckedCreateWithoutSportsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutSportsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutSportsInput,
    Prisma.StudentUncheckedUpdateWithoutSportsInput
  >;
};

export type StudentUpdateWithoutSportsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutSportsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutTransactionsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  user?: Prisma.UserCreateNestedOneWithoutStudentsInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutTransactionsInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutTransactionsInput,
    Prisma.StudentUncheckedCreateWithoutTransactionsInput
  >;
};

export type StudentUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutTransactionsInput,
    Prisma.StudentUncheckedUpdateWithoutTransactionsInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutTransactionsInput,
    Prisma.StudentUncheckedCreateWithoutTransactionsInput
  >;
  where?: Prisma.StudentWhereInput;
};

export type StudentUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.StudentWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutTransactionsInput,
    Prisma.StudentUncheckedUpdateWithoutTransactionsInput
  >;
};

export type StudentUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentCreateWithoutUserInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeCreateNestedManyWithoutStudentInput;
  country?: Prisma.CountryCreateNestedOneWithoutStudentsInput;
  formerSchool?: Prisma.FormerSchoolCreateNestedOneWithoutStudentsInput;
  transactions?: Prisma.TransactionCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardCreateNestedManyWithoutStudentInput;
  religion?: Prisma.ReligionCreateNestedOneWithoutStudentsInput;
  sports?: Prisma.StudentSportCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceCreateNestedManyWithoutStudentInput;
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput;
  absences?: Prisma.AbsenceCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceCreateNestedManyWithoutStudentInput;
};

export type StudentUncheckedCreateWithoutUserInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
  enrollments?: Prisma.EnrollmentUncheckedCreateNestedManyWithoutStudentInput;
  grades?: Prisma.GradeUncheckedCreateNestedManyWithoutStudentInput;
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutStudentInput;
  studentContacts?: Prisma.StudentContactUncheckedCreateNestedManyWithoutStudentInput;
  siblings?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutSiblingInput;
  siblings2?: Prisma.StudentSiblingUncheckedCreateNestedManyWithoutStudentInput;
  classrooms?: Prisma.ClassroomUncheckedCreateNestedManyWithoutClassroomLeaderInput;
  reportCards?: Prisma.ReportCardUncheckedCreateNestedManyWithoutStudentInput;
  sports?: Prisma.StudentSportUncheckedCreateNestedManyWithoutStudentInput;
  clubs?: Prisma.StudentClubUncheckedCreateNestedManyWithoutStudentInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedCreateNestedManyWithoutStudentInput;
  absences?: Prisma.AbsenceUncheckedCreateNestedManyWithoutStudentInput;
  latenesses?: Prisma.LatenessUncheckedCreateNestedManyWithoutStudentInput;
  consignes?: Prisma.ConsigneUncheckedCreateNestedManyWithoutStudentInput;
  chatters?: Prisma.ChatterUncheckedCreateNestedManyWithoutStudentInput;
  exclusions?: Prisma.ExclusionUncheckedCreateNestedManyWithoutStudentInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedCreateNestedManyWithoutStudentInput;
  convocations?: Prisma.ConvocationUncheckedCreateNestedManyWithoutStudentInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedCreateNestedManyWithoutStudentInput;
};

export type StudentCreateOrConnectWithoutUserInput = {
  where: Prisma.StudentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutUserInput,
    Prisma.StudentUncheckedCreateWithoutUserInput
  >;
};

export type StudentCreateManyUserInputEnvelope = {
  data: Prisma.StudentCreateManyUserInput | Prisma.StudentCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type StudentUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.StudentWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.StudentUpdateWithoutUserInput,
    Prisma.StudentUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.StudentCreateWithoutUserInput,
    Prisma.StudentUncheckedCreateWithoutUserInput
  >;
};

export type StudentUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.StudentWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateWithoutUserInput,
    Prisma.StudentUncheckedUpdateWithoutUserInput
  >;
};

export type StudentUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.StudentScalarWhereInput;
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyWithoutUserInput
  >;
};

export type StudentCreateManyCountryInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
};

export type StudentUpdateWithoutCountryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutCountryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateManyWithoutCountryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StudentCreateManySchoolInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
};

export type StudentUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
};

export type StudentCreateManyFormerSchoolInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
};

export type StudentUpdateWithoutFormerSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutFormerSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateManyWithoutFormerSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StudentCreateManyReligionInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  userId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
};

export type StudentUpdateWithoutReligionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  user?: Prisma.UserUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutReligionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateManyWithoutReligionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type StudentCreateManyUserInput = {
  id?: string;
  registrationNumber?: string | null;
  isActive?: boolean;
  firstName?: string | null;
  lastName?: string | null;
  dateOfBirth?: Date | string | null;
  bloodType?: string | null;
  placeOfBirth?: string | null;
  photos?: Prisma.StudentCreatephotosInput | string[];
  residence?: string | null;
  status?: $Enums.StudentStatus;
  gender?: string | null;
  religionId?: string | null;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: string | null;
  parentDivorced?: boolean;
  dateOfEntry?: Date | string | null;
  dateOfExit?: Date | string | null;
  dateOfWithdraw?: Date | string | null;
  lastAccessed?: Date | string;
  observation?: string | null;
  externalAccountingNo?: string | null;
  allergies?: string | null;
  countryId?: string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  createdById?: string | null;
  formerSchoolId?: string | null;
  achievements?: Prisma.StudentCreateachievementsInput | string[];
  hobbies?: Prisma.StudentCreatehobbiesInput | string[];
  socialMedias?: Prisma.StudentCreatesocialMediasInput | string[];
  schoolId: string;
};

export type StudentUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  enrollments?: Prisma.EnrollmentUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUpdateManyWithoutStudentNestedInput;
  country?: Prisma.CountryUpdateOneWithoutStudentsNestedInput;
  formerSchool?: Prisma.FormerSchoolUpdateOneWithoutStudentsNestedInput;
  transactions?: Prisma.TransactionUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUpdateManyWithoutStudentNestedInput;
  religion?: Prisma.ReligionUpdateOneWithoutStudentsNestedInput;
  sports?: Prisma.StudentSportUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUpdateManyWithoutStudentNestedInput;
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput;
  absences?: Prisma.AbsenceUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
  enrollments?: Prisma.EnrollmentUncheckedUpdateManyWithoutStudentNestedInput;
  grades?: Prisma.GradeUncheckedUpdateManyWithoutStudentNestedInput;
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutStudentNestedInput;
  studentContacts?: Prisma.StudentContactUncheckedUpdateManyWithoutStudentNestedInput;
  siblings?: Prisma.StudentSiblingUncheckedUpdateManyWithoutSiblingNestedInput;
  siblings2?: Prisma.StudentSiblingUncheckedUpdateManyWithoutStudentNestedInput;
  classrooms?: Prisma.ClassroomUncheckedUpdateManyWithoutClassroomLeaderNestedInput;
  reportCards?: Prisma.ReportCardUncheckedUpdateManyWithoutStudentNestedInput;
  sports?: Prisma.StudentSportUncheckedUpdateManyWithoutStudentNestedInput;
  clubs?: Prisma.StudentClubUncheckedUpdateManyWithoutStudentNestedInput;
  preventedAbsences?: Prisma.PreventedAbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  absences?: Prisma.AbsenceUncheckedUpdateManyWithoutStudentNestedInput;
  latenesses?: Prisma.LatenessUncheckedUpdateManyWithoutStudentNestedInput;
  consignes?: Prisma.ConsigneUncheckedUpdateManyWithoutStudentNestedInput;
  chatters?: Prisma.ChatterUncheckedUpdateManyWithoutStudentNestedInput;
  exclusions?: Prisma.ExclusionUncheckedUpdateManyWithoutStudentNestedInput;
  requiredFees?: Prisma.RequiredFeeTransactionUncheckedUpdateManyWithoutStudentNestedInput;
  convocations?: Prisma.ConvocationUncheckedUpdateManyWithoutStudentNestedInput;
  periodicAttendances?: Prisma.PeriodicAttendanceUncheckedUpdateManyWithoutStudentNestedInput;
};

export type StudentUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  registrationNumber?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  dateOfBirth?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  bloodType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  placeOfBirth?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  photos?: Prisma.StudentUpdatephotosInput | string[];
  residence?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  status?:
    | Prisma.EnumStudentStatusFieldUpdateOperationsInput
    | $Enums.StudentStatus;
  gender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  religionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isBaptized?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isRepeating?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  isNew?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  phoneNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  parentDivorced?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  dateOfEntry?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfExit?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  dateOfWithdraw?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  lastAccessed?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  observation?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  externalAccountingNo?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  allergies?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  countryId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  tags?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdById?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  formerSchoolId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  achievements?: Prisma.StudentUpdateachievementsInput | string[];
  hobbies?: Prisma.StudentUpdatehobbiesInput | string[];
  socialMedias?: Prisma.StudentUpdatesocialMediasInput | string[];
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string;
};

/**
 * Count Type StudentCountOutputType
 */

export type StudentCountOutputType = {
  enrollments: number;
  grades: number;
  transactions: number;
  studentContacts: number;
  siblings: number;
  siblings2: number;
  classrooms: number;
  reportCards: number;
  sports: number;
  clubs: number;
  preventedAbsences: number;
  absences: number;
  latenesses: number;
  consignes: number;
  chatters: number;
  exclusions: number;
  requiredFees: number;
  convocations: number;
  periodicAttendances: number;
};

export type StudentCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  enrollments?: boolean | StudentCountOutputTypeCountEnrollmentsArgs;
  grades?: boolean | StudentCountOutputTypeCountGradesArgs;
  transactions?: boolean | StudentCountOutputTypeCountTransactionsArgs;
  studentContacts?: boolean | StudentCountOutputTypeCountStudentContactsArgs;
  siblings?: boolean | StudentCountOutputTypeCountSiblingsArgs;
  siblings2?: boolean | StudentCountOutputTypeCountSiblings2Args;
  classrooms?: boolean | StudentCountOutputTypeCountClassroomsArgs;
  reportCards?: boolean | StudentCountOutputTypeCountReportCardsArgs;
  sports?: boolean | StudentCountOutputTypeCountSportsArgs;
  clubs?: boolean | StudentCountOutputTypeCountClubsArgs;
  preventedAbsences?:
    | boolean
    | StudentCountOutputTypeCountPreventedAbsencesArgs;
  absences?: boolean | StudentCountOutputTypeCountAbsencesArgs;
  latenesses?: boolean | StudentCountOutputTypeCountLatenessesArgs;
  consignes?: boolean | StudentCountOutputTypeCountConsignesArgs;
  chatters?: boolean | StudentCountOutputTypeCountChattersArgs;
  exclusions?: boolean | StudentCountOutputTypeCountExclusionsArgs;
  requiredFees?: boolean | StudentCountOutputTypeCountRequiredFeesArgs;
  convocations?: boolean | StudentCountOutputTypeCountConvocationsArgs;
  periodicAttendances?:
    | boolean
    | StudentCountOutputTypeCountPeriodicAttendancesArgs;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StudentCountOutputType
   */
  select?: Prisma.StudentCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountEnrollmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EnrollmentWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountGradesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.GradeWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountTransactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TransactionWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountStudentContactsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentContactWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountSiblingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentSiblingWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountSiblings2Args<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentSiblingWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountClassroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ClassroomWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountReportCardsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReportCardWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountSportsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentSportWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountClubsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.StudentClubWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountPreventedAbsencesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PreventedAbsenceWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountAbsencesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AbsenceWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountLatenessesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.LatenessWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountConsignesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ConsigneWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountChattersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ChatterWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountExclusionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ExclusionWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountRequiredFeesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.RequiredFeeTransactionWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountConvocationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ConvocationWhereInput;
};

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountPeriodicAttendancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PeriodicAttendanceWhereInput;
};

export type StudentSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    registrationNumber?: boolean;
    isActive?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    dateOfBirth?: boolean;
    bloodType?: boolean;
    placeOfBirth?: boolean;
    photos?: boolean;
    residence?: boolean;
    status?: boolean;
    gender?: boolean;
    religionId?: boolean;
    isBaptized?: boolean;
    isRepeating?: boolean;
    isNew?: boolean;
    phoneNumber?: boolean;
    parentDivorced?: boolean;
    dateOfEntry?: boolean;
    dateOfExit?: boolean;
    dateOfWithdraw?: boolean;
    lastAccessed?: boolean;
    observation?: boolean;
    externalAccountingNo?: boolean;
    allergies?: boolean;
    countryId?: boolean;
    userId?: boolean;
    tags?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdById?: boolean;
    formerSchoolId?: boolean;
    achievements?: boolean;
    hobbies?: boolean;
    socialMedias?: boolean;
    schoolId?: boolean;
    enrollments?: boolean | Prisma.Student$enrollmentsArgs<ExtArgs>;
    grades?: boolean | Prisma.Student$gradesArgs<ExtArgs>;
    country?: boolean | Prisma.Student$countryArgs<ExtArgs>;
    formerSchool?: boolean | Prisma.Student$formerSchoolArgs<ExtArgs>;
    user?: boolean | Prisma.Student$userArgs<ExtArgs>;
    transactions?: boolean | Prisma.Student$transactionsArgs<ExtArgs>;
    studentContacts?: boolean | Prisma.Student$studentContactsArgs<ExtArgs>;
    siblings?: boolean | Prisma.Student$siblingsArgs<ExtArgs>;
    siblings2?: boolean | Prisma.Student$siblings2Args<ExtArgs>;
    classrooms?: boolean | Prisma.Student$classroomsArgs<ExtArgs>;
    reportCards?: boolean | Prisma.Student$reportCardsArgs<ExtArgs>;
    religion?: boolean | Prisma.Student$religionArgs<ExtArgs>;
    sports?: boolean | Prisma.Student$sportsArgs<ExtArgs>;
    clubs?: boolean | Prisma.Student$clubsArgs<ExtArgs>;
    preventedAbsences?: boolean | Prisma.Student$preventedAbsencesArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
    absences?: boolean | Prisma.Student$absencesArgs<ExtArgs>;
    latenesses?: boolean | Prisma.Student$latenessesArgs<ExtArgs>;
    consignes?: boolean | Prisma.Student$consignesArgs<ExtArgs>;
    chatters?: boolean | Prisma.Student$chattersArgs<ExtArgs>;
    exclusions?: boolean | Prisma.Student$exclusionsArgs<ExtArgs>;
    requiredFees?: boolean | Prisma.Student$requiredFeesArgs<ExtArgs>;
    convocations?: boolean | Prisma.Student$convocationsArgs<ExtArgs>;
    periodicAttendances?:
      | boolean
      | Prisma.Student$periodicAttendancesArgs<ExtArgs>;
    _count?: boolean | Prisma.StudentCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["student"]
>;

export type StudentSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    registrationNumber?: boolean;
    isActive?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    dateOfBirth?: boolean;
    bloodType?: boolean;
    placeOfBirth?: boolean;
    photos?: boolean;
    residence?: boolean;
    status?: boolean;
    gender?: boolean;
    religionId?: boolean;
    isBaptized?: boolean;
    isRepeating?: boolean;
    isNew?: boolean;
    phoneNumber?: boolean;
    parentDivorced?: boolean;
    dateOfEntry?: boolean;
    dateOfExit?: boolean;
    dateOfWithdraw?: boolean;
    lastAccessed?: boolean;
    observation?: boolean;
    externalAccountingNo?: boolean;
    allergies?: boolean;
    countryId?: boolean;
    userId?: boolean;
    tags?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdById?: boolean;
    formerSchoolId?: boolean;
    achievements?: boolean;
    hobbies?: boolean;
    socialMedias?: boolean;
    schoolId?: boolean;
    country?: boolean | Prisma.Student$countryArgs<ExtArgs>;
    formerSchool?: boolean | Prisma.Student$formerSchoolArgs<ExtArgs>;
    user?: boolean | Prisma.Student$userArgs<ExtArgs>;
    religion?: boolean | Prisma.Student$religionArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["student"]
>;

export type StudentSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    registrationNumber?: boolean;
    isActive?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    dateOfBirth?: boolean;
    bloodType?: boolean;
    placeOfBirth?: boolean;
    photos?: boolean;
    residence?: boolean;
    status?: boolean;
    gender?: boolean;
    religionId?: boolean;
    isBaptized?: boolean;
    isRepeating?: boolean;
    isNew?: boolean;
    phoneNumber?: boolean;
    parentDivorced?: boolean;
    dateOfEntry?: boolean;
    dateOfExit?: boolean;
    dateOfWithdraw?: boolean;
    lastAccessed?: boolean;
    observation?: boolean;
    externalAccountingNo?: boolean;
    allergies?: boolean;
    countryId?: boolean;
    userId?: boolean;
    tags?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    createdById?: boolean;
    formerSchoolId?: boolean;
    achievements?: boolean;
    hobbies?: boolean;
    socialMedias?: boolean;
    schoolId?: boolean;
    country?: boolean | Prisma.Student$countryArgs<ExtArgs>;
    formerSchool?: boolean | Prisma.Student$formerSchoolArgs<ExtArgs>;
    user?: boolean | Prisma.Student$userArgs<ExtArgs>;
    religion?: boolean | Prisma.Student$religionArgs<ExtArgs>;
    school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["student"]
>;

export type StudentSelectScalar = {
  id?: boolean;
  registrationNumber?: boolean;
  isActive?: boolean;
  firstName?: boolean;
  lastName?: boolean;
  dateOfBirth?: boolean;
  bloodType?: boolean;
  placeOfBirth?: boolean;
  photos?: boolean;
  residence?: boolean;
  status?: boolean;
  gender?: boolean;
  religionId?: boolean;
  isBaptized?: boolean;
  isRepeating?: boolean;
  isNew?: boolean;
  phoneNumber?: boolean;
  parentDivorced?: boolean;
  dateOfEntry?: boolean;
  dateOfExit?: boolean;
  dateOfWithdraw?: boolean;
  lastAccessed?: boolean;
  observation?: boolean;
  externalAccountingNo?: boolean;
  allergies?: boolean;
  countryId?: boolean;
  userId?: boolean;
  tags?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  createdById?: boolean;
  formerSchoolId?: boolean;
  achievements?: boolean;
  hobbies?: boolean;
  socialMedias?: boolean;
  schoolId?: boolean;
};

export type StudentOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "registrationNumber"
  | "isActive"
  | "firstName"
  | "lastName"
  | "dateOfBirth"
  | "bloodType"
  | "placeOfBirth"
  | "photos"
  | "residence"
  | "status"
  | "gender"
  | "religionId"
  | "isBaptized"
  | "isRepeating"
  | "isNew"
  | "phoneNumber"
  | "parentDivorced"
  | "dateOfEntry"
  | "dateOfExit"
  | "dateOfWithdraw"
  | "lastAccessed"
  | "observation"
  | "externalAccountingNo"
  | "allergies"
  | "countryId"
  | "userId"
  | "tags"
  | "createdAt"
  | "updatedAt"
  | "createdById"
  | "formerSchoolId"
  | "achievements"
  | "hobbies"
  | "socialMedias"
  | "schoolId",
  ExtArgs["result"]["student"]
>;
export type StudentInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  enrollments?: boolean | Prisma.Student$enrollmentsArgs<ExtArgs>;
  grades?: boolean | Prisma.Student$gradesArgs<ExtArgs>;
  country?: boolean | Prisma.Student$countryArgs<ExtArgs>;
  formerSchool?: boolean | Prisma.Student$formerSchoolArgs<ExtArgs>;
  user?: boolean | Prisma.Student$userArgs<ExtArgs>;
  transactions?: boolean | Prisma.Student$transactionsArgs<ExtArgs>;
  studentContacts?: boolean | Prisma.Student$studentContactsArgs<ExtArgs>;
  siblings?: boolean | Prisma.Student$siblingsArgs<ExtArgs>;
  siblings2?: boolean | Prisma.Student$siblings2Args<ExtArgs>;
  classrooms?: boolean | Prisma.Student$classroomsArgs<ExtArgs>;
  reportCards?: boolean | Prisma.Student$reportCardsArgs<ExtArgs>;
  religion?: boolean | Prisma.Student$religionArgs<ExtArgs>;
  sports?: boolean | Prisma.Student$sportsArgs<ExtArgs>;
  clubs?: boolean | Prisma.Student$clubsArgs<ExtArgs>;
  preventedAbsences?: boolean | Prisma.Student$preventedAbsencesArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
  absences?: boolean | Prisma.Student$absencesArgs<ExtArgs>;
  latenesses?: boolean | Prisma.Student$latenessesArgs<ExtArgs>;
  consignes?: boolean | Prisma.Student$consignesArgs<ExtArgs>;
  chatters?: boolean | Prisma.Student$chattersArgs<ExtArgs>;
  exclusions?: boolean | Prisma.Student$exclusionsArgs<ExtArgs>;
  requiredFees?: boolean | Prisma.Student$requiredFeesArgs<ExtArgs>;
  convocations?: boolean | Prisma.Student$convocationsArgs<ExtArgs>;
  periodicAttendances?:
    | boolean
    | Prisma.Student$periodicAttendancesArgs<ExtArgs>;
  _count?: boolean | Prisma.StudentCountOutputTypeDefaultArgs<ExtArgs>;
};
export type StudentIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  country?: boolean | Prisma.Student$countryArgs<ExtArgs>;
  formerSchool?: boolean | Prisma.Student$formerSchoolArgs<ExtArgs>;
  user?: boolean | Prisma.Student$userArgs<ExtArgs>;
  religion?: boolean | Prisma.Student$religionArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};
export type StudentIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  country?: boolean | Prisma.Student$countryArgs<ExtArgs>;
  formerSchool?: boolean | Prisma.Student$formerSchoolArgs<ExtArgs>;
  user?: boolean | Prisma.Student$userArgs<ExtArgs>;
  religion?: boolean | Prisma.Student$religionArgs<ExtArgs>;
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>;
};

export type $StudentPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "Student";
  objects: {
    enrollments: Prisma.$EnrollmentPayload<ExtArgs>[];
    grades: Prisma.$GradePayload<ExtArgs>[];
    country: Prisma.$CountryPayload<ExtArgs> | null;
    formerSchool: Prisma.$FormerSchoolPayload<ExtArgs> | null;
    user: Prisma.$UserPayload<ExtArgs> | null;
    transactions: Prisma.$TransactionPayload<ExtArgs>[];
    studentContacts: Prisma.$StudentContactPayload<ExtArgs>[];
    siblings: Prisma.$StudentSiblingPayload<ExtArgs>[];
    siblings2: Prisma.$StudentSiblingPayload<ExtArgs>[];
    classrooms: Prisma.$ClassroomPayload<ExtArgs>[];
    reportCards: Prisma.$ReportCardPayload<ExtArgs>[];
    religion: Prisma.$ReligionPayload<ExtArgs> | null;
    sports: Prisma.$StudentSportPayload<ExtArgs>[];
    clubs: Prisma.$StudentClubPayload<ExtArgs>[];
    preventedAbsences: Prisma.$PreventedAbsencePayload<ExtArgs>[];
    school: Prisma.$SchoolPayload<ExtArgs>;
    absences: Prisma.$AbsencePayload<ExtArgs>[];
    latenesses: Prisma.$LatenessPayload<ExtArgs>[];
    consignes: Prisma.$ConsignePayload<ExtArgs>[];
    chatters: Prisma.$ChatterPayload<ExtArgs>[];
    exclusions: Prisma.$ExclusionPayload<ExtArgs>[];
    requiredFees: Prisma.$RequiredFeeTransactionPayload<ExtArgs>[];
    convocations: Prisma.$ConvocationPayload<ExtArgs>[];
    periodicAttendances: Prisma.$PeriodicAttendancePayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      registrationNumber: string | null;
      isActive: boolean;
      firstName: string | null;
      lastName: string | null;
      dateOfBirth: Date | null;
      bloodType: string | null;
      placeOfBirth: string | null;
      photos: string[];
      residence: string | null;
      status: $Enums.StudentStatus;
      gender: string | null;
      religionId: string | null;
      isBaptized: boolean;
      isRepeating: boolean;
      isNew: boolean;
      phoneNumber: string | null;
      parentDivorced: boolean;
      dateOfEntry: Date | null;
      dateOfExit: Date | null;
      dateOfWithdraw: Date | null;
      lastAccessed: Date;
      observation: string | null;
      externalAccountingNo: string | null;
      allergies: string | null;
      countryId: string | null;
      userId: string | null;
      tags: runtime.JsonValue | null;
      createdAt: Date;
      updatedAt: Date;
      createdById: string | null;
      formerSchoolId: string | null;
      achievements: string[];
      hobbies: string[];
      socialMedias: string[];
      schoolId: string;
    },
    ExtArgs["result"]["student"]
  >;
  composites: {};
};

export type StudentGetPayload<
  S extends boolean | null | undefined | StudentDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$StudentPayload, S>;

export type StudentCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<StudentFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: StudentCountAggregateInputType | true;
};

export interface StudentDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["Student"];
    meta: { name: "Student" };
  };
  /**
   * Find zero or one Student that matches the filter.
   * @param {StudentFindUniqueArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StudentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, StudentFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Student that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StudentFindUniqueOrThrowArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StudentFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, StudentFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Student that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentFindFirstArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StudentFindFirstArgs>(
    args?: Prisma.SelectSubset<T, StudentFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Student that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentFindFirstOrThrowArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StudentFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, StudentFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Students that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Students
   * const students = await prisma.student.findMany()
   *
   * // Get first 10 Students
   * const students = await prisma.student.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const studentWithIdOnly = await prisma.student.findMany({ select: { id: true } })
   *
   */
  findMany<T extends StudentFindManyArgs>(
    args?: Prisma.SelectSubset<T, StudentFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a Student.
   * @param {StudentCreateArgs} args - Arguments to create a Student.
   * @example
   * // Create one Student
   * const Student = await prisma.student.create({
   *   data: {
   *     // ... data to create a Student
   *   }
   * })
   *
   */
  create<T extends StudentCreateArgs>(
    args: Prisma.SelectSubset<T, StudentCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Students.
   * @param {StudentCreateManyArgs} args - Arguments to create many Students.
   * @example
   * // Create many Students
   * const student = await prisma.student.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends StudentCreateManyArgs>(
    args?: Prisma.SelectSubset<T, StudentCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Students and returns the data saved in the database.
   * @param {StudentCreateManyAndReturnArgs} args - Arguments to create many Students.
   * @example
   * // Create many Students
   * const student = await prisma.student.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Students and only return the `id`
   * const studentWithIdOnly = await prisma.student.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends StudentCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, StudentCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Student.
   * @param {StudentDeleteArgs} args - Arguments to delete one Student.
   * @example
   * // Delete one Student
   * const Student = await prisma.student.delete({
   *   where: {
   *     // ... filter to delete one Student
   *   }
   * })
   *
   */
  delete<T extends StudentDeleteArgs>(
    args: Prisma.SelectSubset<T, StudentDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Student.
   * @param {StudentUpdateArgs} args - Arguments to update one Student.
   * @example
   * // Update one Student
   * const student = await prisma.student.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends StudentUpdateArgs>(
    args: Prisma.SelectSubset<T, StudentUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Students.
   * @param {StudentDeleteManyArgs} args - Arguments to filter Students to delete.
   * @example
   * // Delete a few Students
   * const { count } = await prisma.student.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends StudentDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, StudentDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Students.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Students
   * const student = await prisma.student.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends StudentUpdateManyArgs>(
    args: Prisma.SelectSubset<T, StudentUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Students and returns the data updated in the database.
   * @param {StudentUpdateManyAndReturnArgs} args - Arguments to update many Students.
   * @example
   * // Update many Students
   * const student = await prisma.student.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Students and only return the `id`
   * const studentWithIdOnly = await prisma.student.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends StudentUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, StudentUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Student.
   * @param {StudentUpsertArgs} args - Arguments to update or create a Student.
   * @example
   * // Update or create a Student
   * const student = await prisma.student.upsert({
   *   create: {
   *     // ... data to create a Student
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Student we want to update
   *   }
   * })
   */
  upsert<T extends StudentUpsertArgs>(
    args: Prisma.SelectSubset<T, StudentUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__StudentClient<
    runtime.Types.Result.GetResult<
      Prisma.$StudentPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Students.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentCountArgs} args - Arguments to filter Students to count.
   * @example
   * // Count the number of Students
   * const count = await prisma.student.count({
   *   where: {
   *     // ... the filter for the Students we want to count
   *   }
   * })
   **/
  count<T extends StudentCountArgs>(
    args?: Prisma.Subset<T, StudentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], StudentCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Student.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends StudentAggregateArgs>(
    args: Prisma.Subset<T, StudentAggregateArgs>,
  ): Prisma.PrismaPromise<GetStudentAggregateType<T>>;

  /**
   * Group by Student.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends StudentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StudentGroupByArgs["orderBy"] }
      : { orderBy?: StudentGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, StudentGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetStudentGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Student model
   */
  readonly fields: StudentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Student.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StudentClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  enrollments<T extends Prisma.Student$enrollmentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$enrollmentsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EnrollmentPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  grades<T extends Prisma.Student$gradesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$gradesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$GradePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  country<T extends Prisma.Student$countryArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$countryArgs<ExtArgs>>,
  ): Prisma.Prisma__CountryClient<
    runtime.Types.Result.GetResult<
      Prisma.$CountryPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  formerSchool<T extends Prisma.Student$formerSchoolArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$formerSchoolArgs<ExtArgs>>,
  ): Prisma.Prisma__FormerSchoolClient<
    runtime.Types.Result.GetResult<
      Prisma.$FormerSchoolPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.Student$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$userArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  transactions<T extends Prisma.Student$transactionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$transactionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  studentContacts<T extends Prisma.Student$studentContactsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$studentContactsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentContactPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  siblings<T extends Prisma.Student$siblingsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$siblingsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentSiblingPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  siblings2<T extends Prisma.Student$siblings2Args<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$siblings2Args<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentSiblingPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  classrooms<T extends Prisma.Student$classroomsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$classroomsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ClassroomPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  reportCards<T extends Prisma.Student$reportCardsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$reportCardsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReportCardPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  religion<T extends Prisma.Student$religionArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$religionArgs<ExtArgs>>,
  ): Prisma.Prisma__ReligionClient<
    runtime.Types.Result.GetResult<
      Prisma.$ReligionPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  sports<T extends Prisma.Student$sportsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$sportsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentSportPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  clubs<T extends Prisma.Student$clubsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$clubsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$StudentClubPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  preventedAbsences<
    T extends Prisma.Student$preventedAbsencesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Student$preventedAbsencesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PreventedAbsencePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__SchoolClient<
    | runtime.Types.Result.GetResult<
        Prisma.$SchoolPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  absences<T extends Prisma.Student$absencesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$absencesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AbsencePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  latenesses<T extends Prisma.Student$latenessesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$latenessesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$LatenessPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  consignes<T extends Prisma.Student$consignesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$consignesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ConsignePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  chatters<T extends Prisma.Student$chattersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$chattersArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ChatterPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  exclusions<T extends Prisma.Student$exclusionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$exclusionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ExclusionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  requiredFees<T extends Prisma.Student$requiredFeesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$requiredFeesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$RequiredFeeTransactionPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  convocations<T extends Prisma.Student$convocationsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Student$convocationsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ConvocationPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  periodicAttendances<
    T extends Prisma.Student$periodicAttendancesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Student$periodicAttendancesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PeriodicAttendancePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Student model
 */
export interface StudentFieldRefs {
  readonly id: Prisma.FieldRef<"Student", "String">;
  readonly registrationNumber: Prisma.FieldRef<"Student", "String">;
  readonly isActive: Prisma.FieldRef<"Student", "Boolean">;
  readonly firstName: Prisma.FieldRef<"Student", "String">;
  readonly lastName: Prisma.FieldRef<"Student", "String">;
  readonly dateOfBirth: Prisma.FieldRef<"Student", "DateTime">;
  readonly bloodType: Prisma.FieldRef<"Student", "String">;
  readonly placeOfBirth: Prisma.FieldRef<"Student", "String">;
  readonly photos: Prisma.FieldRef<"Student", "String[]">;
  readonly residence: Prisma.FieldRef<"Student", "String">;
  readonly status: Prisma.FieldRef<"Student", "StudentStatus">;
  readonly gender: Prisma.FieldRef<"Student", "String">;
  readonly religionId: Prisma.FieldRef<"Student", "String">;
  readonly isBaptized: Prisma.FieldRef<"Student", "Boolean">;
  readonly isRepeating: Prisma.FieldRef<"Student", "Boolean">;
  readonly isNew: Prisma.FieldRef<"Student", "Boolean">;
  readonly phoneNumber: Prisma.FieldRef<"Student", "String">;
  readonly parentDivorced: Prisma.FieldRef<"Student", "Boolean">;
  readonly dateOfEntry: Prisma.FieldRef<"Student", "DateTime">;
  readonly dateOfExit: Prisma.FieldRef<"Student", "DateTime">;
  readonly dateOfWithdraw: Prisma.FieldRef<"Student", "DateTime">;
  readonly lastAccessed: Prisma.FieldRef<"Student", "DateTime">;
  readonly observation: Prisma.FieldRef<"Student", "String">;
  readonly externalAccountingNo: Prisma.FieldRef<"Student", "String">;
  readonly allergies: Prisma.FieldRef<"Student", "String">;
  readonly countryId: Prisma.FieldRef<"Student", "String">;
  readonly userId: Prisma.FieldRef<"Student", "String">;
  readonly tags: Prisma.FieldRef<"Student", "Json">;
  readonly createdAt: Prisma.FieldRef<"Student", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"Student", "DateTime">;
  readonly createdById: Prisma.FieldRef<"Student", "String">;
  readonly formerSchoolId: Prisma.FieldRef<"Student", "String">;
  readonly achievements: Prisma.FieldRef<"Student", "String[]">;
  readonly hobbies: Prisma.FieldRef<"Student", "String[]">;
  readonly socialMedias: Prisma.FieldRef<"Student", "String[]">;
  readonly schoolId: Prisma.FieldRef<"Student", "String">;
}

// Custom InputTypes
/**
 * Student findUnique
 */
export type StudentFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * Filter, which Student to fetch.
   */
  where: Prisma.StudentWhereUniqueInput;
};

/**
 * Student findUniqueOrThrow
 */
export type StudentFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * Filter, which Student to fetch.
   */
  where: Prisma.StudentWhereUniqueInput;
};

/**
 * Student findFirst
 */
export type StudentFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * Filter, which Student to fetch.
   */
  where?: Prisma.StudentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Students to fetch.
   */
  orderBy?:
    | Prisma.StudentOrderByWithRelationInput
    | Prisma.StudentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Students.
   */
  cursor?: Prisma.StudentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Students.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Students.
   */
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[];
};

/**
 * Student findFirstOrThrow
 */
export type StudentFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * Filter, which Student to fetch.
   */
  where?: Prisma.StudentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Students to fetch.
   */
  orderBy?:
    | Prisma.StudentOrderByWithRelationInput
    | Prisma.StudentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Students.
   */
  cursor?: Prisma.StudentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Students.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Students.
   */
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[];
};

/**
 * Student findMany
 */
export type StudentFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * Filter, which Students to fetch.
   */
  where?: Prisma.StudentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Students to fetch.
   */
  orderBy?:
    | Prisma.StudentOrderByWithRelationInput
    | Prisma.StudentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Students.
   */
  cursor?: Prisma.StudentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Students.
   */
  skip?: number;
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[];
};

/**
 * Student create
 */
export type StudentCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * The data needed to create a Student.
   */
  data: Prisma.XOR<
    Prisma.StudentCreateInput,
    Prisma.StudentUncheckedCreateInput
  >;
};

/**
 * Student createMany
 */
export type StudentCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Students.
   */
  data: Prisma.StudentCreateManyInput | Prisma.StudentCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Student createManyAndReturn
 */
export type StudentCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * The data used to create many Students.
   */
  data: Prisma.StudentCreateManyInput | Prisma.StudentCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Student update
 */
export type StudentUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * The data needed to update a Student.
   */
  data: Prisma.XOR<
    Prisma.StudentUpdateInput,
    Prisma.StudentUncheckedUpdateInput
  >;
  /**
   * Choose, which Student to update.
   */
  where: Prisma.StudentWhereUniqueInput;
};

/**
 * Student updateMany
 */
export type StudentUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Students.
   */
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyInput
  >;
  /**
   * Filter which Students to update
   */
  where?: Prisma.StudentWhereInput;
  /**
   * Limit how many Students to update.
   */
  limit?: number;
};

/**
 * Student updateManyAndReturn
 */
export type StudentUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * The data used to update Students.
   */
  data: Prisma.XOR<
    Prisma.StudentUpdateManyMutationInput,
    Prisma.StudentUncheckedUpdateManyInput
  >;
  /**
   * Filter which Students to update
   */
  where?: Prisma.StudentWhereInput;
  /**
   * Limit how many Students to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Student upsert
 */
export type StudentUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * The filter to search for the Student to update in case it exists.
   */
  where: Prisma.StudentWhereUniqueInput;
  /**
   * In case the Student found by the `where` argument doesn't exist, create a new Student with this data.
   */
  create: Prisma.XOR<
    Prisma.StudentCreateInput,
    Prisma.StudentUncheckedCreateInput
  >;
  /**
   * In case the Student was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.StudentUpdateInput,
    Prisma.StudentUncheckedUpdateInput
  >;
};

/**
 * Student delete
 */
export type StudentDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
  /**
   * Filter which Student to delete.
   */
  where: Prisma.StudentWhereUniqueInput;
};

/**
 * Student deleteMany
 */
export type StudentDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Students to delete
   */
  where?: Prisma.StudentWhereInput;
  /**
   * Limit how many Students to delete.
   */
  limit?: number;
};

/**
 * Student.enrollments
 */
export type Student$enrollmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Enrollment
   */
  select?: Prisma.EnrollmentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Enrollment
   */
  omit?: Prisma.EnrollmentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EnrollmentInclude<ExtArgs> | null;
  where?: Prisma.EnrollmentWhereInput;
  orderBy?:
    | Prisma.EnrollmentOrderByWithRelationInput
    | Prisma.EnrollmentOrderByWithRelationInput[];
  cursor?: Prisma.EnrollmentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.EnrollmentScalarFieldEnum
    | Prisma.EnrollmentScalarFieldEnum[];
};

/**
 * Student.grades
 */
export type Student$gradesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Grade
   */
  select?: Prisma.GradeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Grade
   */
  omit?: Prisma.GradeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeInclude<ExtArgs> | null;
  where?: Prisma.GradeWhereInput;
  orderBy?:
    | Prisma.GradeOrderByWithRelationInput
    | Prisma.GradeOrderByWithRelationInput[];
  cursor?: Prisma.GradeWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.GradeScalarFieldEnum | Prisma.GradeScalarFieldEnum[];
};

/**
 * Student.country
 */
export type Student$countryArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Country
   */
  select?: Prisma.CountrySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Country
   */
  omit?: Prisma.CountryOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CountryInclude<ExtArgs> | null;
  where?: Prisma.CountryWhereInput;
};

/**
 * Student.formerSchool
 */
export type Student$formerSchoolArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FormerSchool
   */
  select?: Prisma.FormerSchoolSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the FormerSchool
   */
  omit?: Prisma.FormerSchoolOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FormerSchoolInclude<ExtArgs> | null;
  where?: Prisma.FormerSchoolWhereInput;
};

/**
 * Student.user
 */
export type Student$userArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * Student.transactions
 */
export type Student$transactionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null;
  where?: Prisma.TransactionWhereInput;
  orderBy?:
    | Prisma.TransactionOrderByWithRelationInput
    | Prisma.TransactionOrderByWithRelationInput[];
  cursor?: Prisma.TransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.TransactionScalarFieldEnum
    | Prisma.TransactionScalarFieldEnum[];
};

/**
 * Student.studentContacts
 */
export type Student$studentContactsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StudentContact
   */
  select?: Prisma.StudentContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StudentContact
   */
  omit?: Prisma.StudentContactOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentContactInclude<ExtArgs> | null;
  where?: Prisma.StudentContactWhereInput;
  orderBy?:
    | Prisma.StudentContactOrderByWithRelationInput
    | Prisma.StudentContactOrderByWithRelationInput[];
  cursor?: Prisma.StudentContactWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.StudentContactScalarFieldEnum
    | Prisma.StudentContactScalarFieldEnum[];
};

/**
 * Student.siblings
 */
export type Student$siblingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StudentSibling
   */
  select?: Prisma.StudentSiblingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StudentSibling
   */
  omit?: Prisma.StudentSiblingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentSiblingInclude<ExtArgs> | null;
  where?: Prisma.StudentSiblingWhereInput;
  orderBy?:
    | Prisma.StudentSiblingOrderByWithRelationInput
    | Prisma.StudentSiblingOrderByWithRelationInput[];
  cursor?: Prisma.StudentSiblingWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.StudentSiblingScalarFieldEnum
    | Prisma.StudentSiblingScalarFieldEnum[];
};

/**
 * Student.siblings2
 */
export type Student$siblings2Args<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StudentSibling
   */
  select?: Prisma.StudentSiblingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StudentSibling
   */
  omit?: Prisma.StudentSiblingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentSiblingInclude<ExtArgs> | null;
  where?: Prisma.StudentSiblingWhereInput;
  orderBy?:
    | Prisma.StudentSiblingOrderByWithRelationInput
    | Prisma.StudentSiblingOrderByWithRelationInput[];
  cursor?: Prisma.StudentSiblingWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.StudentSiblingScalarFieldEnum
    | Prisma.StudentSiblingScalarFieldEnum[];
};

/**
 * Student.classrooms
 */
export type Student$classroomsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Classroom
   */
  select?: Prisma.ClassroomSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Classroom
   */
  omit?: Prisma.ClassroomOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassroomInclude<ExtArgs> | null;
  where?: Prisma.ClassroomWhereInput;
  orderBy?:
    | Prisma.ClassroomOrderByWithRelationInput
    | Prisma.ClassroomOrderByWithRelationInput[];
  cursor?: Prisma.ClassroomWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ClassroomScalarFieldEnum
    | Prisma.ClassroomScalarFieldEnum[];
};

/**
 * Student.reportCards
 */
export type Student$reportCardsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ReportCard
   */
  select?: Prisma.ReportCardSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ReportCard
   */
  omit?: Prisma.ReportCardOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReportCardInclude<ExtArgs> | null;
  where?: Prisma.ReportCardWhereInput;
  orderBy?:
    | Prisma.ReportCardOrderByWithRelationInput
    | Prisma.ReportCardOrderByWithRelationInput[];
  cursor?: Prisma.ReportCardWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ReportCardScalarFieldEnum
    | Prisma.ReportCardScalarFieldEnum[];
};

/**
 * Student.religion
 */
export type Student$religionArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Religion
   */
  select?: Prisma.ReligionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Religion
   */
  omit?: Prisma.ReligionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReligionInclude<ExtArgs> | null;
  where?: Prisma.ReligionWhereInput;
};

/**
 * Student.sports
 */
export type Student$sportsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StudentSport
   */
  select?: Prisma.StudentSportSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StudentSport
   */
  omit?: Prisma.StudentSportOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentSportInclude<ExtArgs> | null;
  where?: Prisma.StudentSportWhereInput;
  orderBy?:
    | Prisma.StudentSportOrderByWithRelationInput
    | Prisma.StudentSportOrderByWithRelationInput[];
  cursor?: Prisma.StudentSportWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.StudentSportScalarFieldEnum
    | Prisma.StudentSportScalarFieldEnum[];
};

/**
 * Student.clubs
 */
export type Student$clubsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the StudentClub
   */
  select?: Prisma.StudentClubSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the StudentClub
   */
  omit?: Prisma.StudentClubOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClubInclude<ExtArgs> | null;
  where?: Prisma.StudentClubWhereInput;
  orderBy?:
    | Prisma.StudentClubOrderByWithRelationInput
    | Prisma.StudentClubOrderByWithRelationInput[];
  cursor?: Prisma.StudentClubWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.StudentClubScalarFieldEnum
    | Prisma.StudentClubScalarFieldEnum[];
};

/**
 * Student.preventedAbsences
 */
export type Student$preventedAbsencesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the PreventedAbsence
   */
  select?: Prisma.PreventedAbsenceSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PreventedAbsence
   */
  omit?: Prisma.PreventedAbsenceOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PreventedAbsenceInclude<ExtArgs> | null;
  where?: Prisma.PreventedAbsenceWhereInput;
  orderBy?:
    | Prisma.PreventedAbsenceOrderByWithRelationInput
    | Prisma.PreventedAbsenceOrderByWithRelationInput[];
  cursor?: Prisma.PreventedAbsenceWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.PreventedAbsenceScalarFieldEnum
    | Prisma.PreventedAbsenceScalarFieldEnum[];
};

/**
 * Student.absences
 */
export type Student$absencesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Absence
   */
  select?: Prisma.AbsenceSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Absence
   */
  omit?: Prisma.AbsenceOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AbsenceInclude<ExtArgs> | null;
  where?: Prisma.AbsenceWhereInput;
  orderBy?:
    | Prisma.AbsenceOrderByWithRelationInput
    | Prisma.AbsenceOrderByWithRelationInput[];
  cursor?: Prisma.AbsenceWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.AbsenceScalarFieldEnum | Prisma.AbsenceScalarFieldEnum[];
};

/**
 * Student.latenesses
 */
export type Student$latenessesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Lateness
   */
  select?: Prisma.LatenessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Lateness
   */
  omit?: Prisma.LatenessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LatenessInclude<ExtArgs> | null;
  where?: Prisma.LatenessWhereInput;
  orderBy?:
    | Prisma.LatenessOrderByWithRelationInput
    | Prisma.LatenessOrderByWithRelationInput[];
  cursor?: Prisma.LatenessWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.LatenessScalarFieldEnum | Prisma.LatenessScalarFieldEnum[];
};

/**
 * Student.consignes
 */
export type Student$consignesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Consigne
   */
  select?: Prisma.ConsigneSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Consigne
   */
  omit?: Prisma.ConsigneOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConsigneInclude<ExtArgs> | null;
  where?: Prisma.ConsigneWhereInput;
  orderBy?:
    | Prisma.ConsigneOrderByWithRelationInput
    | Prisma.ConsigneOrderByWithRelationInput[];
  cursor?: Prisma.ConsigneWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ConsigneScalarFieldEnum | Prisma.ConsigneScalarFieldEnum[];
};

/**
 * Student.chatters
 */
export type Student$chattersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Chatter
   */
  select?: Prisma.ChatterSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Chatter
   */
  omit?: Prisma.ChatterOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChatterInclude<ExtArgs> | null;
  where?: Prisma.ChatterWhereInput;
  orderBy?:
    | Prisma.ChatterOrderByWithRelationInput
    | Prisma.ChatterOrderByWithRelationInput[];
  cursor?: Prisma.ChatterWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ChatterScalarFieldEnum | Prisma.ChatterScalarFieldEnum[];
};

/**
 * Student.exclusions
 */
export type Student$exclusionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Exclusion
   */
  select?: Prisma.ExclusionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Exclusion
   */
  omit?: Prisma.ExclusionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ExclusionInclude<ExtArgs> | null;
  where?: Prisma.ExclusionWhereInput;
  orderBy?:
    | Prisma.ExclusionOrderByWithRelationInput
    | Prisma.ExclusionOrderByWithRelationInput[];
  cursor?: Prisma.ExclusionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ExclusionScalarFieldEnum
    | Prisma.ExclusionScalarFieldEnum[];
};

/**
 * Student.requiredFees
 */
export type Student$requiredFeesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the RequiredFeeTransaction
   */
  select?: Prisma.RequiredFeeTransactionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RequiredFeeTransaction
   */
  omit?: Prisma.RequiredFeeTransactionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RequiredFeeTransactionInclude<ExtArgs> | null;
  where?: Prisma.RequiredFeeTransactionWhereInput;
  orderBy?:
    | Prisma.RequiredFeeTransactionOrderByWithRelationInput
    | Prisma.RequiredFeeTransactionOrderByWithRelationInput[];
  cursor?: Prisma.RequiredFeeTransactionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.RequiredFeeTransactionScalarFieldEnum
    | Prisma.RequiredFeeTransactionScalarFieldEnum[];
};

/**
 * Student.convocations
 */
export type Student$convocationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Convocation
   */
  select?: Prisma.ConvocationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Convocation
   */
  omit?: Prisma.ConvocationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ConvocationInclude<ExtArgs> | null;
  where?: Prisma.ConvocationWhereInput;
  orderBy?:
    | Prisma.ConvocationOrderByWithRelationInput
    | Prisma.ConvocationOrderByWithRelationInput[];
  cursor?: Prisma.ConvocationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ConvocationScalarFieldEnum
    | Prisma.ConvocationScalarFieldEnum[];
};

/**
 * Student.periodicAttendances
 */
export type Student$periodicAttendancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the PeriodicAttendance
   */
  select?: Prisma.PeriodicAttendanceSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PeriodicAttendance
   */
  omit?: Prisma.PeriodicAttendanceOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodicAttendanceInclude<ExtArgs> | null;
  where?: Prisma.PeriodicAttendanceWhereInput;
  orderBy?:
    | Prisma.PeriodicAttendanceOrderByWithRelationInput
    | Prisma.PeriodicAttendanceOrderByWithRelationInput[];
  cursor?: Prisma.PeriodicAttendanceWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.PeriodicAttendanceScalarFieldEnum
    | Prisma.PeriodicAttendanceScalarFieldEnum[];
};

/**
 * Student without action
 */
export type StudentDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null;
};
